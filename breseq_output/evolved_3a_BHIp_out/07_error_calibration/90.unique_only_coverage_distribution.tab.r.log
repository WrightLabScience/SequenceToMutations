
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> ##
> ## AUTHORS
> ##
> ## Jeffrey E. Barrick <jeffrey.e.barrick@gmail.com>
> ##
> ## LICENSE AND COPYRIGHT
> ##
> ## Copyright (c) 2008-2010 Michigan State University
> ## Copyright (c) 2011-2022 The University of Texas at Austin
> ##
> ## breseq is free software; you can redistribute it and/or modify it under the
> ## terms the GNU General Public License as published by the Free Software
> ## Foundation; either version 1, or (at your option) any later version.
> ##
> ##
> 
> ## Arguments:
> ##   distribution_file=/path/to/input 
> ##   plot_file=/path/to/output 
> ##   deletion_propagation_pr_cutoff=float
> ##   plot_poisson=0 or 1
> ##   pdf_output=0 or 1
> 
> ## Returns these values printed out to output log
> ## 
> ##  1. print(nb_fit_size); # 0 if fit failed
> ##  2. print(nb_fit_mu);   # 0 if fit failed
> ##  3. print(m)q
> ##  4. print(v)
> ##  5. print(D)
> ##  6. print(deletion_propagation_coverage)
> ##     -1 if it was <1 after fitting (implying reference sequence is deleted)
> ##
> 
> plot_poisson = 0;
> pdf_output = 1;
> 
> this.print.level = 0
> #this.print.level = 2
> 
> for (e in commandArgs(TRUE)) {
+   ta = strsplit(e,"=",fixed=TRUE)[[1]]
+   if(length(ta)>1) {
+     temp = ta[2]
+     assign(ta[1],temp)
+     cat("assigned ",ta[1]," the value of |",temp,"|\n")
+   } else {
+     assign(ta[[1]][1],TRUE)
+     cat("assigned ",ta[1]," the value of TRUE\n")
+   }
+ }
assigned  distribution_file  the value of | 3a+_BHI_c50_out/07_error_calibration/90.unique_only_coverage_distribution.tab |
assigned  plot_file  the value of | 3a+_BHI_c50_out/output/calibration/90.unique_coverage.pdf |
assigned  deletion_propagation_pr_cutoff  the value of | 0.00278207 |
> 
> deletion_propagation_pr_cutoff = as.numeric(deletion_propagation_pr_cutoff);
> 
> ## initialize values to be filled in
> nb_fit_mu = 0
> nb_fit_size = 0
> m = 0
> v = 0
> D = 0
> deletion_propagation_coverage = -1
> 
> min_fraction_included_in_nb_fit = 0.01
> 
> #load data
> X<-read.table(distribution_file, header=T)
> 
> #table might be empty
> if (nrow(X) == 0)
+ {
+   #print out statistics
+   
+   print(nb_fit_size);
+   print(nb_fit_mu);
+   
+   print(m)
+   print(v)
+   print(D)
+   
+   print(deletion_propagation_coverage)
+   
+   q()
+ }
> 
> #create the distribution vector and fit
> Y<-rep(X$coverage, X$n)
> m<-mean(Y)
> v<-var(Y)
> D<-v/m
> 
> ###
> ## Smooth the distribution with a moving average window of size 5
> ## so that we can more reliably find it's maximum value
> ###
> 
> ma5 = c(1, 1, 1, 1, 1)/5;
> 
> ## filtering fails if there are too few points
> if (nrow(X) >= 5) {
+   X$ma = filter(X$n, ma5)
+ } else {
+ 	X$ma = X$n
+ }
> 
> i<-0
> max_n <- 0;
> min_i <- max( trunc(m/4), 1 ); #prevents zero for pathological distributions
> max_i <- i;
> for (i in min_i:length(X$ma))
+ {		
+   #cat(i, "\n")
+ 	if (!is.na(X$ma[i]) && (X$ma[i] > max_n))
+ 	{
+ 		max_n = X$ma[i];
+ 		max_i = i;
+ 	}
+ }
> 
> ##
> # Censor data on the right and left of the maximum
> ##
> 
> start_i = max(floor(max_i*0.5), 1);
> end_i = min(ceiling(max_i*1.5), length(X$ma));
> 
> if (start_i == end_i)
+ {
+   print(nb_fit_size);
+   print(nb_fit_mu);
+   
+   print(m)
+   print(v)
+   print(D)
+   
+   print(deletion_propagation_coverage)
+   
+   q()
+ }
> 
> cat("Fitting from coverage of ", start_i, " to ", end_i, ".\n", sep="")
Fitting from coverage of 27 to 62.
> 
> ##
> # Coarse grain so that we are only fitting a number of bins that is 1000-2000
> #
> # The later adjustment for doing the fits this way is to multiply the means
> # of the negative binomial and poisson distributions by the binning number.
> # (The size parameter of the negative binomial doesn't need to be adjusted.)
> ##
> 
> 
> num_per_bin = trunc((end_i - start_i) / 1000)
> 
> if (num_per_bin > 1) 
+ {
+   cat("Coarse-graining for fits\n")
+   start_i_for_fits = trunc(start_i/num_per_bin)
+   end_i_for_fits = ceiling(end_i/num_per_bin)
+   num_bins = end_i - start_i  + 1
+   cat("Fitting from coverage in adjusted bins ", start_i_for_fits, " to ", end_i_for_fits, ".\n", sep="")
+   cat("Number of bins ", num_bins, ". Each bin has ", num_per_bin, " coverage values.\n", sep="")
+ 
+   # Create a new vector where we've added together values in bins
+   X.for.fits = vector("double", end_i_for_fits)
+   for (i in start_i_for_fits:end_i_for_fits)
+   {
+     for (j in 1:num_per_bin)
+     {
+       if (i*num_per_bin+j <= length(X$n))
+       {
+         X.for.fits[i] = X.for.fits[i] + X$n[i*num_per_bin+j]
+       }
+     }
+   }
+ 
+ } else {
+   ## AVOID num_per_bin equalling zero!!
+   X.for.fits = X$n[1:end_i]
+   num_per_bin = 1
+   start_i_for_fits = start_i
+   end_i_for_fits = end_i
+ }
> 
> 
> ##
> # Now perform negative binomial fitting to the censored data
> ##
> 
> inner_total<-0;
> for (i in start_i_for_fits:end_i_for_fits)
+ {
+ 	inner_total = inner_total + X.for.fits[i]; 
+ }
> # Yes: it's correct to use X here because we want the overall total total
> total_total<-sum(X$n);
> 
> ## let's preconstruct these for speed
> dist = vector("double", end_i_for_fits)
> 
> f_nb <- function(par) {
+ 
+ 	mu = par[1];
+ 	size = par[2];
+ 
+   if ((mu <= 0) || (size <= 0))
+   {
+     return(0);
+   }
+   
+   cat(start_i_for_fits, " ", end_i_for_fits, "\n");
+   cat(mu, " ", size, "\n");
+   
+ 	dist<-c()
+ 	total <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{	
+ 		dist[i] <- dnbinom(i, size=size, mu=mu);
+ 		total <- total + dist[i] 
+ 	}
+ 	#print (mu, size)
+ 
+  	l <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{
+ 		l <- l + ((X.for.fits[i]/inner_total)-(dist[i]/total))^2;
+ 	}
+ 	return(l);
+ }
> 
> 
> 
> ## Fit negative binomial 
> ## - allow fit to fail and set all params to zero/empty if that is the case
> nb_fit = NULL
> ## as.numeric prevents overflow in sums involving integers
> mean_estimate = sum((as.numeric(1:end_i_for_fits)*as.numeric(X.for.fits)))/sum(as.numeric(X.for.fits))
> 
> nb_fit_mu = -1
> nb_fit_size = -1
> try_size = 100000
> try_means_index = 1
> #This is a list of different means to test <-  sometimes the actual mean doesn't lead to a fit
> try_means = c(mean_estimate, 
+               end_i_for_fits, 
+               start_i_for_fits, 
+               1*(end_i_for_fits + start_i_for_fits)/4,
+               2*(end_i_for_fits + start_i_for_fits)/4,
+               3*(end_i_for_fits + start_i_for_fits)/4
+               )
>               
>               
> nb_fit = c()
> 
> while ( ((nb_fit_mu < 0) || (nb_fit_size < 0) || (nb_fit$code != 1)) && (try_size > 0.001) && (try_means_index <= length(try_means)))
+ {
+   try_size = try_size / 10
+   try_mean = try_means[try_means_index]
+ 
+   ## SIZE ESTIMATE from the censored data can be negative, so try various values instead
+   cat("Try Mean: ", try_mean, " Size: ", try_size, "\n")
+ 
+   try( suppressWarnings(nb_fit<-nlm(f_nb, c(try_mean, try_size), iterlim=1000, print.level=this.print.level)) )
+ 
+   nb_fit_mu = nb_fit$estimate[1];
+   nb_fit_size = nb_fit$estimate[2];
+ 
+   cat("Fit Mean: ", nb_fit_mu, " Size: ", nb_fit_size, " Code: ", nb_fit$code, "\n")
+   
+   if (try_size <= 0.001) {
+     try_size = 100000
+     try_means_index = try_means_index + 1
+   }
+ }
Try Mean:  53.81818  Size:  10000 
27   62 
53.81818   10000 
27   62 
53.81818   10000 
27   62 
53.81824   10000 
27   62 
53.81818   10000.01 
27   62 
53.82023   10000 
27   62 
53.82029   10000 
27   62 
53.82023   10000.01 
27   62 
56.30652   10000 
27   62 
56.30657   10000 
27   62 
56.30652   10000.01 
27   62 
56.35602   10000 
27   62 
56.35607   10000 
27   62 
56.35602   10000.01 
27   62 
56.35823   10000 
27   62 
56.35829   10000 
27   62 
56.35823   10000.01 
27   62 
56.35823   10000 
27   62 
56.35829   10000 
27   62 
56.35823   10000.01 
Fit Mean:  56.35823  Size:  10000  Code:  2 
Try Mean:  53.81818  Size:  1000 
27   62 
53.81818   1000 
27   62 
53.81818   1000 
27   62 
53.81824   1000 
27   62 
53.81818   1000.001 
27   62 
53.82023   1000 
27   62 
53.82028   1000 
27   62 
53.82023   1000.001 
27   62 
56.44617   1000.001 
27   62 
56.44622   1000.001 
27   62 
56.44617   1000.002 
27   62 
56.51503   1000.001 
27   62 
56.51509   1000.001 
27   62 
56.51503   1000.002 
27   62 
56.51869   1000.001 
27   62 
56.51875   1000.001 
27   62 
56.51869   1000.002 
27   62 
56.51871   1000.002 
27   62 
56.51877   1000.002 
27   62 
56.51871   1000.003 
Fit Mean:  56.51871  Size:  1000.002  Code:  2 
Try Mean:  53.81818  Size:  100 
27   62 
53.81818   100 
27   62 
53.81818   100 
27   62 
53.81824   100 
27   62 
53.81818   100.0001 
27   62 
53.82017   100 
27   62 
53.82022   100 
27   62 
53.82017   100.0001 
27   62 
57.95855   100.1424 
27   62 
57.9586   100.1424 
27   62 
57.95855   100.1425 
27   62 
58.32453   100.188 
27   62 
58.32458   100.188 
27   62 
58.32453   100.1881 
27   62 
58.3805   100.224 
27   62 
58.38056   100.224 
27   62 
58.3805   100.2241 
27   62 
58.39871   100.2743 
27   62 
58.39877   100.2743 
27   62 
58.39871   100.2744 
27   62 
58.46145   100.6365 
27   62 
58.4615   100.6365 
27   62 
58.46145   100.6366 
27   62 
58.52997   101.4861 
27   62 
58.53002   101.4861 
27   62 
58.52997   101.4862 
27   62 
58.61994   104.0302 
27   62 
58.62   104.0302 
27   62 
58.61994   104.0304 
27   62 
58.67934   110.426 
27   62 
58.67939   110.426 
27   62 
58.67934   110.4261 
27   62 
58.58492   127.6343 
27   62 
58.58498   127.6343 
27   62 
58.58492   127.6344 
27   62 
57.8909   183.7023 
27   62 
57.89096   183.7023 
27   62 
57.8909   183.7025 
27   62 
55.90541   334.6836 
27   62 
55.90547   334.6836 
27   62 
55.90541   334.6839 
27   62 
56.88368   271.8436 
27   62 
56.88374   271.8436 
27   62 
56.88368   271.8438 
27   62 
56.76495   290.622 
27   62 
56.76501   290.622 
27   62 
56.76495   290.6223 
27   62 
56.51578   363.4182 
27   62 
56.51584   363.4182 
27   62 
56.51578   363.4185 
27   62 
56.46174   440.9972 
27   62 
56.4618   440.9972 
27   62 
56.46174   440.9977 
27   62 
56.53359   574.1362 
27   62 
56.53365   574.1362 
27   62 
56.53359   574.1368 
27   62 
56.56746   730.5548 
27   62 
56.56751   730.5548 
27   62 
56.56746   730.5556 
27   62 
56.52433   955.7299 
27   62 
56.52438   955.7299 
27   62 
56.52433   955.7309 
27   62 
56.45063   1267.914 
27   62 
56.45069   1267.914 
27   62 
56.45063   1267.915 
27   62 
56.40569   1664.925 
27   62 
56.40575   1664.925 
27   62 
56.40569   1664.927 
27   62 
56.3903   2187.577 
27   62 
56.39036   2187.577 
27   62 
56.3903   2187.579 
27   62 
56.38453   2878.976 
27   62 
56.38459   2878.976 
27   62 
56.38453   2878.979 
27   62 
56.37639   3797.166 
27   62 
56.37645   3797.166 
27   62 
56.37639   3797.17 
27   62 
56.36708   5017.554 
27   62 
56.36714   5017.554 
27   62 
56.36708   5017.559 
27   62 
56.35986   6633.25 
27   62 
56.35992   6633.25 
27   62 
56.35986   6633.256 
27   62 
56.35505   8772.152 
27   62 
56.35511   8772.152 
27   62 
56.35505   8772.161 
27   62 
56.35167   11604.91 
27   62 
56.35173   11604.91 
27   62 
56.35167   11604.92 
27   62 
56.34907   15357.7 
27   62 
56.34912   15357.7 
27   62 
56.34907   15357.71 
27   62 
56.34703   20329.33 
27   62 
56.34708   20329.33 
27   62 
56.34703   20329.35 
27   62 
56.34548   26915.06 
27   62 
56.34553   26915.06 
27   62 
56.34548   26915.09 
27   62 
56.34431   35640.26 
27   62 
56.34437   35640.26 
27   62 
56.34431   35640.29 
27   62 
56.34344   47197.18 
27   62 
56.3435   47197.18 
27   62 
56.34344   47197.22 
27   62 
56.34278   62507.3 
27   62 
56.34284   62507.3 
27   62 
56.34278   62507.36 
27   62 
56.34228   82787 
27   62 
56.34234   82787 
27   62 
56.34228   82787.09 
27   62 
56.3419   109641.5 
27   62 
56.34196   109641.5 
27   62 
56.3419   109641.6 
27   62 
56.34162   145313.1 
27   62 
56.34167   145313.1 
27   62 
56.34162   145313.2 
27   62 
56.34141   192323.9 
27   62 
56.34146   192323.9 
27   62 
56.34141   192324.1 
27   62 
56.34124   255115.8 
27   62 
56.3413   255115.8 
27   62 
56.34124   255116 
27   62 
56.34112   338007.4 
27   62 
56.34118   338007.4 
27   62 
56.34112   338007.7 
27   62 
56.34103   447247.1 
27   62 
56.34108   447247.1 
27   62 
56.34103   447247.5 
27   62 
56.34097   560809.4 
27   62 
56.34103   560809.4 
27   62 
56.34097   560809.9 
27   62 
56.34094   674371.7 
27   62 
56.34099   674371.7 
27   62 
56.34094   674372.4 
27   62 
56.34091   787934 
27   62 
56.34097   787934 
27   62 
56.34091   787934.8 
27   62 
56.34089   901496.3 
27   62 
56.34095   901496.3 
27   62 
56.34089   901497.2 
27   62 
56.34088   1015059 
27   62 
56.34093   1015059 
27   62 
56.34088   1015060 
Fit Mean:  56.34088  Size:  1015059  Code:  5 
Try Mean:  53.81818  Size:  10 
27   62 
53.81818   10 
27   62 
53.81818   10 
27   62 
53.81824   10 
27   62 
53.81818   10.00001 
27   62 
53.81938   10.00103 
27   62 
53.81943   10.00103 
27   62 
53.81938   10.00104 
27   62 
103.54   46.86583 
27   62 
72.1752   23.61076 
27   62 
72.17527   23.61076 
27   62 
72.1752   23.61078 
27   62 
68.0966   24.12565 
27   62 
68.09667   24.12565 
27   62 
68.0966   24.12568 
27   62 
64.18717   27.80868 
27   62 
64.18723   27.80868 
27   62 
64.18717   27.8087 
27   62 
63.3719   30.95113 
27   62 
63.37197   30.95113 
27   62 
63.3719   30.95116 
27   62 
62.09928   41.15981 
27   62 
62.09935   41.15981 
27   62 
62.09928   41.15985 
27   62 
55.74671   62.62491 
27   62 
60.71726   45.8296 
27   62 
60.71732   45.8296 
27   62 
60.71726   45.82965 
27   62 
58.66803   63.4877 
27   62 
58.66809   63.4877 
27   62 
58.66803   63.48777 
27   62 
59.03936   77.72859 
27   62 
59.03942   77.72859 
27   62 
59.03936   77.72867 
27   62 
57.81755   104.8496 
27   62 
57.81761   104.8496 
27   62 
57.81755   104.8497 
27   62 
57.46169   134.642 
27   62 
57.46175   134.642 
27   62 
57.46169   134.6422 
27   62 
57.4186   172.4595 
27   62 
57.41866   172.4595 
27   62 
57.4186   172.4597 
27   62 
56.76118   234.5469 
27   62 
56.76123   234.5469 
27   62 
56.76118   234.5471 
27   62 
56.90361   298.6459 
27   62 
56.90367   298.6459 
27   62 
56.90361   298.6462 
27   62 
56.71564   389.8404 
27   62 
56.7157   389.8404 
27   62 
56.71564   389.8408 
27   62 
56.62828   512.0518 
27   62 
56.62833   512.0518 
27   62 
56.62828   512.0524 
27   62 
56.5588   668.7487 
27   62 
56.55885   668.7487 
27   62 
56.5588   668.7494 
27   62 
56.50845   878.1662 
27   62 
56.50851   878.1662 
27   62 
56.50845   878.167 
27   62 
56.46609   1154.005 
27   62 
56.46615   1154.005 
27   62 
56.46609   1154.006 
27   62 
56.43884   1519.409 
27   62 
56.4389   1519.409 
27   62 
56.43884   1519.41 
27   62 
56.41064   2003.447 
27   62 
56.41069   2003.447 
27   62 
56.41064   2003.449 
27   62 
56.40071   2643.704 
27   62 
56.40076   2643.704 
27   62 
56.40071   2643.706 
27   62 
56.37442   3496.197 
27   62 
56.37447   3496.197 
27   62 
56.37442   3496.2 
27   62 
56.38483   4628.176 
27   62 
56.38489   4628.176 
27   62 
56.38483   4628.18 
27   62 
56.34598   6172.679 
27   62 
56.34604   6172.679 
27   62 
56.34598   6172.685 
27   62 
56.371   8228.957 
27   62 
56.37106   8228.957 
27   62 
56.371   8228.965 
27   62 
56.34943   10902.33 
27   62 
56.34949   10902.33 
27   62 
56.34943   10902.35 
27   62 
56.34996   14437.96 
27   62 
56.35002   14437.96 
27   62 
56.34996   14437.97 
27   62 
56.34766   19099.51 
27   62 
56.34771   19099.51 
27   62 
56.34766   19099.53 
27   62 
56.34598   25293.52 
27   62 
56.34604   25293.52 
27   62 
56.34598   25293.54 
27   62 
56.3447   33489.12 
27   62 
56.34475   33489.12 
27   62 
56.3447   33489.15 
27   62 
56.34373   44352.06 
27   62 
56.34378   44352.06 
27   62 
56.34373   44352.1 
27   62 
56.343   58741.1 
27   62 
56.34305   58741.1 
27   62 
56.343   58741.16 
27   62 
56.34245   77796.98 
27   62 
56.3425   77796.98 
27   62 
56.34245   77797.06 
27   62 
56.34203   103043.7 
27   62 
56.34208   103043.7 
27   62 
56.34203   103043.8 
27   62 
56.34171   136480 
27   62 
56.34177   136480 
27   62 
56.34171   136480.2 
27   62 
56.34148   180805.1 
27   62 
56.34153   180805.1 
27   62 
56.34148   180805.2 
27   62 
56.34131   235544.4 
27   62 
56.34136   235544.4 
27   62 
56.34131   235544.6 
27   62 
56.34121   290283.8 
27   62 
56.34126   290283.8 
27   62 
56.34121   290284.1 
27   62 
56.34114   345023.1 
27   62 
56.3412   345023.1 
27   62 
56.34114   345023.5 
27   62 
56.34109   399762.5 
27   62 
56.34115   399762.5 
27   62 
56.34109   399762.9 
27   62 
56.34105   454501.8 
27   62 
56.34111   454501.8 
27   62 
56.34105   454502.3 
Fit Mean:  56.34105  Size:  454501.8  Code:  5 
Try Mean:  53.81818  Size:  1 
27   62 
53.81818   1 
27   62 
53.81818   1 
27   62 
53.81824   1 
27   62 
53.81818   1.000001 
27   62 
53.81839   1.002952 
27   62 
53.81844   1.002952 
27   62 
53.81839   1.002953 
27   62 
58.75917   10.66603 
27   62 
58.75923   10.66603 
27   62 
58.75917   10.66604 
27   62 
68.58872   23.15357 
27   62 
68.58879   23.15357 
27   62 
68.58872   23.1536 
27   62 
69.02291   23.86345 
27   62 
69.02298   23.86345 
27   62 
69.02291   23.86348 
27   62 
69.01625   24.11407 
27   62 
69.01632   24.11407 
27   62 
69.01625   24.11409 
27   62 
68.28043   26.82133 
27   62 
68.28049   26.82133 
27   62 
68.28043   26.82136 
27   62 
64.19431   37.34214 
27   62 
64.19437   37.34214 
27   62 
64.19431   37.34218 
27   62 
58.91414   51.0981 
27   62 
58.9142   51.0981 
27   62 
58.91414   51.09815 
27   62 
61.40114   45.6157 
27   62 
61.4012   45.6157 
27   62 
61.40114   45.61574 
27   62 
60.58727   48.80309 
27   62 
60.58733   48.80309 
27   62 
60.58727   48.80314 
27   62 
58.95108   57.631 
27   62 
58.95114   57.631 
27   62 
58.95108   57.63106 
27   62 
59.03073   60.39355 
27   62 
59.03079   60.39355 
27   62 
59.03073   60.39361 
27   62 
58.57065   83.13923 
27   62 
58.57071   83.13923 
27   62 
58.57065   83.13931 
27   62 
57.88704   105.3435 
27   62 
57.8871   105.3435 
27   62 
57.88704   105.3436 
27   62 
57.83944   141.3764 
27   62 
57.83949   141.3764 
27   62 
57.83944   141.3765 
27   62 
56.58271   199.2595 
27   62 
56.58277   199.2595 
27   62 
56.58271   199.2597 
27   62 
57.00862   220.4819 
27   62 
57.00867   220.4819 
27   62 
57.00862   220.4821 
27   62 
57.01985   279.0503 
27   62 
57.01991   279.0503 
27   62 
57.01985   279.0506 
27   62 
56.76503   369.4165 
27   62 
56.76509   369.4165 
27   62 
56.76503   369.4169 
27   62 
56.60045   486.0119 
27   62 
56.6005   486.0119 
27   62 
56.60045   486.0124 
27   62 
56.5579   631.5988 
27   62 
56.55796   631.5988 
27   62 
56.5579   631.5994 
27   62 
56.51343   825.8278 
27   62 
56.51348   825.8278 
27   62 
56.51343   825.8286 
27   62 
56.47018   1084.291 
27   62 
56.47023   1084.291 
27   62 
56.47018   1084.292 
27   62 
56.44055   1425.916 
27   62 
56.44061   1425.916 
27   62 
56.44055   1425.917 
27   62 
56.41539   1878.225 
27   62 
56.41545   1878.225 
27   62 
56.41539   1878.226 
27   62 
56.39828   2477.006 
27   62 
56.39833   2477.006 
27   62 
56.39828   2477.009 
27   62 
56.38338   3270.077 
27   62 
56.38343   3270.077 
27   62 
56.38338   3270.081 
27   62 
56.37395   4320.266 
27   62 
56.374   4320.266 
27   62 
56.37395   4320.27 
27   62 
56.36483   5711.663 
27   62 
56.36489   5711.663 
27   62 
56.36483   5711.669 
27   62 
56.36007   7554.266 
27   62 
56.36013   7554.266 
27   62 
56.36007   7554.273 
27   62 
56.35408   9996.085 
27   62 
56.35414   9996.085 
27   62 
56.35408   9996.095 
27   62 
56.35226   13229.75 
27   62 
56.35232   13229.75 
27   62 
56.35226   13229.77 
27   62 
56.34777   17516.3 
27   62 
56.34782   17516.3 
27   62 
56.34777   17516.32 
27   62 
56.34799   23193.74 
27   62 
56.34805   23193.74 
27   62 
56.34799   23193.76 
27   62 
56.34395   30724.5 
27   62 
56.34401   30724.5 
27   62 
56.34395   30724.53 
27   62 
56.34575   40704.36 
27   62 
56.3458   40704.36 
27   62 
56.34575   40704.4 
27   62 
56.34162   53961 
27   62 
56.34168   53961 
27   62 
56.34162   53961.05 
27   62 
56.34447   71551.14 
27   62 
56.34452   71551.14 
27   62 
56.34447   71551.22 
27   62 
56.34053   94941.88 
27   62 
56.34058   94941.88 
27   62 
56.34053   94941.98 
27   62 
56.34323   125921.2 
27   62 
56.34329   125921.2 
27   62 
56.34323   125921.3 
27   62 
56.34055   167078.7 
27   62 
56.3406   167078.7 
27   62 
56.34055   167078.8 
27   62 
56.342   220906.1 
27   62 
56.34206   220906.1 
27   62 
56.342   220906.4 
27   62 
56.34111   274733.6 
27   62 
56.34117   274733.6 
27   62 
56.34111   274733.9 
27   62 
56.34122   328561.1 
27   62 
56.34128   328561.1 
27   62 
56.34122   328561.4 
27   62 
56.34111   382388.6 
27   62 
56.34117   382388.6 
27   62 
56.34111   382388.9 
27   62 
56.34108   436216 
27   62 
56.34113   436216 
27   62 
56.34108   436216.5 
Fit Mean:  56.34108  Size:  436216  Code:  5 
Try Mean:  53.81818  Size:  0.1 
27   62 
53.81818   0.1 
27   62 
53.81818   0.1 
27   62 
53.81824   0.1 
27   62 
53.81818   0.100001 
27   62 
53.8182   0.1033615 
27   62 
53.81826   0.1033615 
27   62 
53.8182   0.1033625 
27   62 
56.97675   8.341732 
27   62 
56.97681   8.341732 
27   62 
56.97675   8.34174 
27   62 
64.25197   19.05411 
27   62 
64.25204   19.05411 
27   62 
64.25197   19.05413 
27   62 
68.68893   25.17923 
27   62 
68.689   25.17923 
27   62 
68.68893   25.17925 
27   62 
68.36907   24.92253 
27   62 
68.36914   24.92253 
27   62 
68.36907   24.92255 
27   62 
68.0537   24.90069 
27   62 
68.05377   24.90069 
27   62 
68.0537   24.90072 
27   62 
67.04291   25.33773 
27   62 
67.04298   25.33773 
27   62 
67.04291   25.33776 
27   62 
65.29624   26.8753 
27   62 
65.29631   26.8753 
27   62 
65.29624   26.87533 
27   62 
63.57839   29.523 
27   62 
63.57845   29.523 
27   62 
63.57839   29.52303 
27   62 
61.88772   34.56636 
27   62 
61.88778   34.56636 
27   62 
61.88772   34.56639 
27   62 
60.96482   43.66685 
27   62 
60.96488   43.66685 
27   62 
60.96482   43.6669 
27   62 
59.90627   55.8112 
27   62 
59.90633   55.8112 
27   62 
59.90627   55.81125 
27   62 
58.92145   73.62394 
27   62 
58.92151   73.62394 
27   62 
58.92145   73.62401 
27   62 
58.65578   97.11293 
27   62 
58.65583   97.11293 
27   62 
58.65578   97.11303 
27   62 
54.05697   171.9748 
27   62 
57.86227   110.0301 
27   62 
57.86233   110.0301 
27   62 
57.86227   110.0302 
27   62 
57.25076   144.1336 
27   62 
57.25082   144.1336 
27   62 
57.25076   144.1337 
27   62 
57.25753   183.0799 
27   62 
57.25759   183.0799 
27   62 
57.25753   183.0801 
27   62 
56.94147   240.0166 
27   62 
56.94153   240.0166 
27   62 
56.94147   240.0169 
27   62 
56.88287   313.0054 
27   62 
56.88292   313.0054 
27   62 
56.88287   313.0057 
27   62 
56.64143   412.5818 
27   62 
56.64149   412.5818 
27   62 
56.64143   412.5822 
27   62 
56.68295   543.3419 
27   62 
56.68301   543.3419 
27   62 
56.68295   543.3424 
27   62 
56.48957   721.679 
27   62 
56.48963   721.679 
27   62 
56.48957   721.6798 
27   62 
56.49296   943.7835 
27   62 
56.49302   943.7835 
27   62 
56.49296   943.7844 
27   62 
56.45058   1237.086 
27   62 
56.45064   1237.086 
27   62 
56.45058   1237.087 
27   62 
56.42796   1629.308 
27   62 
56.42802   1629.308 
27   62 
56.42796   1629.309 
27   62 
56.40473   2146.164 
27   62 
56.40478   2146.164 
27   62 
56.40473   2146.166 
27   62 
56.39083   2832.018 
27   62 
56.39088   2832.018 
27   62 
56.39083   2832.021 
27   62 
56.37738   3739.572 
27   62 
56.37744   3739.572 
27   62 
56.37738   3739.575 
27   62 
56.36953   4941.977 
27   62 
56.36959   4941.977 
27   62 
56.36953   4941.982 
27   62 
56.36155   6534.636 
27   62 
56.36161   6534.636 
27   62 
56.36155   6534.643 
27   62 
56.35734   8644.193 
27   62 
56.3574   8644.193 
27   62 
56.35734   8644.202 
27   62 
56.35247   11439.05 
27   62 
56.35252   11439.05 
27   62 
56.35247   11439.06 
27   62 
56.35038   15141.01 
27   62 
56.35043   15141.01 
27   62 
56.35038   15141.03 
27   62 
56.34726   20045.83 
27   62 
56.34732   20045.83 
27   62 
56.34726   20045.85 
27   62 
56.3464   26542.64 
27   62 
56.34646   26542.64 
27   62 
56.3464   26542.67 
27   62 
56.34429   35150.71 
27   62 
56.34435   35150.71 
27   62 
56.34429   35150.74 
27   62 
56.34413   46552.37 
27   62 
56.34419   46552.37 
27   62 
56.34413   46552.42 
27   62 
56.3426   61661.96 
27   62 
56.34266   61661.96 
27   62 
56.3426   61662.02 
27   62 
56.34284   81676.21 
27   62 
56.34289   81676.21 
27   62 
56.34284   81676.29 
27   62 
56.34165   108197.5 
27   62 
56.3417   108197.5 
27   62 
56.34165   108197.6 
27   62 
56.34209   143342.1 
27   62 
56.34214   143342.1 
27   62 
56.34209   143342.3 
27   62 
56.34111   189865.4 
27   62 
56.34117   189865.4 
27   62 
56.34111   189865.6 
27   62 
56.34157   243683.7 
27   62 
56.34163   243683.7 
27   62 
56.34157   243684 
27   62 
56.34111   297502 
27   62 
56.34117   297502 
27   62 
56.34111   297502.3 
27   62 
56.3412   351320.3 
27   62 
56.34126   351320.3 
27   62 
56.3412   351320.6 
27   62 
56.34108   405138.5 
27   62 
56.34114   405138.5 
27   62 
56.34108   405139 
27   62 
56.34107   458956.8 
27   62 
56.34112   458956.8 
27   62 
56.34107   458957.3 
Fit Mean:  56.34107  Size:  458956.8  Code:  5 
Try Mean:  53.81818  Size:  0.01 
27   62 
53.81818   0.01 
27   62 
53.81818   0.01 
27   62 
53.81824   0.01 
27   62 
53.81818   0.010001 
27   62 
53.81818   0.01340624 
27   62 
53.81824   0.01340624 
27   62 
53.81818   0.01340724 
27   62 
56.83519   8.139045 
27   62 
56.83525   8.139045 
27   62 
56.83519   8.139054 
27   62 
63.84526   18.62304 
27   62 
63.84533   18.62304 
27   62 
63.84526   18.62306 
27   62 
68.66828   25.33378 
27   62 
68.66835   25.33378 
27   62 
68.66828   25.3338 
27   62 
68.31115   25.02205 
27   62 
68.31122   25.02205 
27   62 
68.31115   25.02207 
27   62 
68.03763   24.99719 
27   62 
68.0377   24.99719 
27   62 
68.03763   24.99722 
27   62 
67.02767   25.41789 
27   62 
67.02774   25.41789 
27   62 
67.02767   25.41792 
27   62 
65.32649   26.90409 
27   62 
65.32656   26.90409 
27   62 
65.32649   26.90411 
27   62 
63.56025   29.58491 
27   62 
63.56031   29.58491 
27   62 
63.56025   29.58494 
27   62 
61.94789   34.36798 
27   62 
61.94795   34.36798 
27   62 
61.94789   34.36801 
27   62 
60.95843   43.59348 
27   62 
60.95849   43.59348 
27   62 
60.95843   43.59353 
27   62 
59.97051   55.54221 
27   62 
59.97057   55.54221 
27   62 
59.97051   55.54227 
27   62 
58.69309   73.78279 
27   62 
58.69315   73.78279 
27   62 
58.69309   73.78286 
27   62 
59.40723   102.2526 
27   62 
59.40729   102.2526 
27   62 
59.40723   102.2527 
27   62 
56.6124   153.6055 
27   62 
56.61246   153.6055 
27   62 
56.6124   153.6056 
27   62 
57.63769   146.0032 
27   62 
57.63775   146.0032 
27   62 
57.63769   146.0033 
27   62 
57.45377   164.2462 
27   62 
57.45382   164.2462 
27   62 
57.45377   164.2464 
27   62 
56.89523   235.0245 
27   62 
56.89529   235.0245 
27   62 
56.89523   235.0247 
27   62 
56.84123   294.3089 
27   62 
56.84128   294.3089 
27   62 
56.84123   294.3092 
27   62 
56.7235   386.5194 
27   62 
56.72355   386.5194 
27   62 
56.7235   386.5197 
27   62 
56.64425   502.7437 
27   62 
56.6443   502.7437 
27   62 
56.64425   502.7442 
27   62 
56.56095   660.0718 
27   62 
56.561   660.0718 
27   62 
56.56095   660.0725 
27   62 
56.52824   865.7966 
27   62 
56.52829   865.7966 
27   62 
56.52824   865.7974 
27   62 
56.4443   1143.377 
27   62 
56.44435   1143.377 
27   62 
56.4443   1143.378 
27   62 
56.48616   1515.393 
27   62 
56.48622   1515.393 
27   62 
56.48616   1515.395 
27   62 
56.36004   2048.851 
27   62 
56.3601   2048.851 
27   62 
56.36004   2048.853 
27   62 
56.38682   2659.148 
27   62 
56.38688   2659.148 
27   62 
56.38682   2659.151 
27   62 
56.38122   3507.919 
27   62 
56.38128   3507.919 
27   62 
56.38122   3507.922 
27   62 
56.3697   4633.855 
27   62 
56.36975   4633.855 
27   62 
56.3697   4633.86 
27   62 
56.3624   6126.75 
27   62 
56.36246   6126.75 
27   62 
56.3624   6126.756 
27   62 
56.35715   8101.631 
27   62 
56.35721   8101.631 
27   62 
56.35715   8101.639 
27   62 
56.35314   10718.81 
27   62 
56.3532   10718.81 
27   62 
56.35314   10718.83 
27   62 
56.35011   14185.15 
27   62 
56.35017   14185.15 
27   62 
56.35011   14185.17 
27   62 
56.34782   18777.44 
27   62 
56.34787   18777.44 
27   62 
56.34782   18777.46 
27   62 
56.34609   24860.43 
27   62 
56.34614   24860.43 
27   62 
56.34609   24860.45 
27   62 
56.34478   32918.83 
27   62 
56.34483   32918.83 
27   62 
56.34478   32918.86 
27   62 
56.34379   43593.89 
27   62 
56.34385   43593.89 
27   62 
56.34379   43593.93 
27   62 
56.34304   57733.31 
27   62 
56.3431   57733.31 
27   62 
56.34304   57733.37 
27   62 
56.34248   76474.58 
27   62 
56.34254   76474.58 
27   62 
56.34248   76474.66 
27   62 
56.34205   101292.8 
27   62 
56.34211   101292.8 
27   62 
56.34205   101292.9 
27   62 
56.34173   134133.7 
27   62 
56.34179   134133.7 
27   62 
56.34173   134133.8 
27   62 
56.34149   177721.4 
27   62 
56.34155   177721.4 
27   62 
56.34149   177721.6 
27   62 
56.34132   231539.6 
27   62 
56.34138   231539.6 
27   62 
56.34132   231539.8 
27   62 
56.34122   285357.7 
27   62 
56.34127   285357.7 
27   62 
56.34122   285358 
27   62 
56.34115   339175.9 
27   62 
56.3412   339175.9 
27   62 
56.34115   339176.3 
27   62 
56.3411   392994.1 
27   62 
56.34115   392994.1 
27   62 
56.3411   392994.5 
27   62 
56.34106   446812.3 
27   62 
56.34111   446812.3 
27   62 
56.34106   446812.7 
Fit Mean:  56.34106  Size:  446812.3  Code:  5 
Try Mean:  53.81818  Size:  0.001 
27   62 
53.81818   0.001 
27   62 
53.81818   0.001 
27   62 
53.81824   0.001 
27   62 
53.81818   0.001001 
27   62 
53.81818   0.004410763 
27   62 
53.81824   0.004410763 
27   62 
53.81818   0.004411763 
27   62 
56.82135   8.119048 
27   62 
56.82141   8.119048 
27   62 
56.82135   8.119056 
27   62 
63.80515   18.58012 
27   62 
63.80521   18.58012 
27   62 
63.80515   18.58014 
27   62 
68.66612   25.34918 
27   62 
68.66619   25.34918 
27   62 
68.66612   25.34921 
27   62 
68.30537   25.03205 
27   62 
68.30544   25.03205 
27   62 
68.30537   25.03207 
27   62 
68.0352   25.00709 
27   62 
68.03527   25.00709 
27   62 
68.0352   25.00711 
27   62 
67.02448   25.42713 
27   62 
67.02454   25.42713 
27   62 
67.02448   25.42716 
27   62 
65.32636   26.91059 
27   62 
65.32642   26.91059 
27   62 
65.32636   26.91062 
27   62 
63.55677   29.59517 
27   62 
63.55684   29.59517 
27   62 
63.55677   29.5952 
27   62 
61.9502   34.36314 
27   62 
61.95026   34.36314 
27   62 
61.9502   34.36318 
27   62 
60.95718   43.60207 
27   62 
60.95724   43.60207 
27   62 
60.95718   43.60211 
27   62 
59.97134   55.54591 
27   62 
59.9714   55.54591 
27   62 
59.97134   55.54597 
27   62 
58.68643   73.80637 
27   62 
58.68648   73.80637 
27   62 
58.68643   73.80645 
27   62 
59.40878   102.4515 
27   62 
59.40884   102.4515 
27   62 
59.40878   102.4516 
27   62 
56.63964   153.224 
27   62 
56.63969   153.224 
27   62 
56.63964   153.2241 
27   62 
57.62468   146.4516 
27   62 
57.62474   146.4516 
27   62 
57.62468   146.4517 
27   62 
57.45387   164.9064 
27   62 
57.45392   164.9064 
27   62 
57.45387   164.9065 
27   62 
56.89883   235.8332 
27   62 
56.89888   235.8332 
27   62 
56.89883   235.8335 
27   62 
56.84265   295.9601 
27   62 
56.84271   295.9601 
27   62 
56.84265   295.9604 
27   62 
56.71912   388.7749 
27   62 
56.71917   388.7749 
27   62 
56.71912   388.7753 
27   62 
56.6463   505.7301 
27   62 
56.64636   505.7301 
27   62 
56.6463   505.7306 
27   62 
56.55358   664.4406 
27   62 
56.55364   664.4406 
27   62 
56.55358   664.4413 
27   62 
56.53732   871.8158 
27   62 
56.53738   871.8158 
27   62 
56.53732   871.8167 
27   62 
56.42398   1157.137 
27   62 
56.42403   1157.137 
27   62 
56.42398   1157.139 
27   62 
56.4868   1542.38 
27   62 
56.48686   1542.38 
27   62 
56.4868   1542.382 
27   62 
56.38737   2053.682 
27   62 
56.38743   2053.682 
27   62 
56.38737   2053.684 
27   62 
56.38219   2690.271 
27   62 
56.38224   2690.271 
27   62 
56.38219   2690.274 
27   62 
56.37892   3547.984 
27   62 
56.37897   3547.984 
27   62 
56.37892   3547.988 
27   62 
56.36945   4683.999 
27   62 
56.36951   4683.999 
27   62 
56.36945   4684.004 
27   62 
56.36224   6193.396 
27   62 
56.36229   6193.396 
27   62 
56.36224   6193.402 
27   62 
56.357   8189.931 
27   62 
56.35706   8189.931 
27   62 
56.357   8189.94 
27   62 
56.35303   10835.86 
27   62 
56.35308   10835.86 
27   62 
56.35303   10835.87 
27   62 
56.35002   14340.32 
27   62 
56.35008   14340.32 
27   62 
56.35002   14340.33 
27   62 
56.34775   18982.82 
27   62 
56.34781   18982.82 
27   62 
56.34775   18982.83 
27   62 
56.34604   25132.73 
27   62 
56.34609   25132.73 
27   62 
56.34604   25132.75 
27   62 
56.34474   33280.12 
27   62 
56.3448   33280.12 
27   62 
56.34474   33280.15 
27   62 
56.34376   44071.37 
27   62 
56.34382   44071.37 
27   62 
56.34376   44071.41 
27   62 
56.34302   58369.31 
27   62 
56.34308   58369.31 
27   62 
56.34302   58369.37 
27   62 
56.34246   77309.88 
27   62 
56.34252   77309.88 
27   62 
56.34246   77309.96 
27   62 
56.34204   102417 
27   62 
56.3421   102417 
27   62 
56.34204   102417.1 
27   62 
56.34172   135611.1 
27   62 
56.34178   135611.1 
27   62 
56.34172   135611.3 
27   62 
56.34148   179598.4 
27   62 
56.34154   179598.4 
27   62 
56.34148   179598.6 
27   62 
56.34132   233416.6 
27   62 
56.34137   233416.6 
27   62 
56.34132   233416.8 
27   62 
56.34122   287234.7 
27   62 
56.34127   287234.7 
27   62 
56.34122   287235 
27   62 
56.34115   341052.9 
27   62 
56.3412   341052.9 
27   62 
56.34115   341053.3 
27   62 
56.3411   394871.1 
27   62 
56.34115   394871.1 
27   62 
56.3411   394871.5 
27   62 
56.34106   448689.3 
27   62 
56.34111   448689.3 
27   62 
56.34106   448689.7 
Fit Mean:  56.34106  Size:  448689.3  Code:  5 
Try Mean:  62  Size:  10000 
27   62 
62   10000 
27   62 
62   10000 
27   62 
62.00006   10000 
27   62 
62   10000.01 
27   62 
61.99649   10000 
27   62 
61.99655   10000 
27   62 
61.99649   10000.01 
27   62 
54.31277   10000 
27   62 
54.31283   10000 
27   62 
54.31277   10000.01 
27   62 
56.76258   10000 
27   62 
56.76264   10000 
27   62 
56.76258   10000.01 
27   62 
56.37486   10000 
27   62 
56.37492   10000 
27   62 
56.37486   10000.01 
27   62 
56.35805   10000 
27   62 
56.35811   10000 
27   62 
56.35805   10000.01 
27   62 
56.35823   10000 
27   62 
56.35829   10000 
27   62 
56.35823   10000.01 
27   62 
56.35823   10000 
27   62 
56.35829   10000 
27   62 
56.35823   10000.01 
Fit Mean:  56.35823  Size:  10000  Code:  2 
Try Mean:  62  Size:  1000 
27   62 
62   1000 
27   62 
62   1000 
27   62 
62.00006   1000 
27   62 
62   1000.001 
27   62 
61.99682   1000 
27   62 
61.99688   1000 
27   62 
61.99682   1000.001 
27   62 
54.61033   1000 
27   62 
54.61038   1000 
27   62 
54.61033   1000.001 
27   62 
56.90238   999.9999 
27   62 
56.90244   999.9999 
27   62 
56.90238   1000.001 
27   62 
56.5354   1000 
27   62 
56.53545   1000 
27   62 
56.5354   1000.001 
27   62 
56.51852   1000.001 
27   62 
56.51857   1000.001 
27   62 
56.51852   1000.002 
27   62 
56.5187   1000.001 
27   62 
56.51875   1000.001 
27   62 
56.5187   1000.002 
27   62 
56.51915   1000.003 
27   62 
56.51921   1000.003 
27   62 
56.51915   1000.004 
27   62 
56.51978   1000.009 
27   62 
56.51984   1000.009 
27   62 
56.51978   1000.01 
27   62 
56.52087   1000.029 
27   62 
56.52093   1000.029 
27   62 
56.52087   1000.03 
27   62 
56.52259   1000.081 
27   62 
56.52264   1000.081 
27   62 
56.52259   1000.082 
27   62 
56.52537   1000.224 
27   62 
56.52543   1000.224 
27   62 
56.52537   1000.225 
27   62 
56.52984   1000.604 
27   62 
56.52989   1000.604 
27   62 
56.52984   1000.605 
27   62 
56.53697   1001.613 
27   62 
56.53703   1001.613 
27   62 
56.53697   1001.614 
27   62 
56.54824   1004.264 
27   62 
56.5483   1004.264 
27   62 
56.54824   1004.265 
27   62 
56.56564   1011.169 
27   62 
56.56569   1011.169 
27   62 
56.56564   1011.17 
27   62 
56.59114   1028.861 
27   62 
56.5912   1028.861 
27   62 
56.59114   1028.862 
27   62 
56.62451   1072.809 
27   62 
56.62457   1072.809 
27   62 
56.62451   1072.81 
27   62 
56.65739   1176.784 
27   62 
56.65745   1176.784 
27   62 
56.65739   1176.785 
27   62 
56.66429   1411.183 
27   62 
56.66434   1411.183 
27   62 
56.66429   1411.185 
27   62 
56.59627   1909.787 
27   62 
56.59633   1909.787 
27   62 
56.59627   1909.789 
27   62 
56.44329   2717.232 
27   62 
56.44335   2717.232 
27   62 
56.44329   2717.235 
27   62 
56.33865   3406.546 
27   62 
56.3387   3406.546 
27   62 
56.33865   3406.549 
27   62 
56.30401   3889.995 
27   62 
56.30407   3889.995 
27   62 
56.30401   3889.999 
27   62 
56.28517   4806.419 
27   62 
56.28522   4806.419 
27   62 
56.28517   4806.424 
27   62 
56.30149   6268.617 
27   62 
56.30154   6268.617 
27   62 
56.30149   6268.624 
27   62 
56.34162   8285.905 
27   62 
56.34168   8285.905 
27   62 
56.34162   8285.914 
27   62 
56.36955   10558.46 
27   62 
56.36961   10558.46 
27   62 
56.36955   10558.47 
27   62 
56.37947   13403.95 
27   62 
56.37953   13403.95 
27   62 
56.37947   13403.97 
27   62 
56.37314   17669.49 
27   62 
56.37319   17669.49 
27   62 
56.37314   17669.51 
27   62 
56.35532   23670.52 
27   62 
56.35538   23670.52 
27   62 
56.35532   23670.54 
27   62 
56.33916   31026.89 
27   62 
56.33922   31026.89 
27   62 
56.33916   31026.92 
27   62 
56.33092   39987.36 
27   62 
56.33097   39987.36 
27   62 
56.33092   39987.4 
27   62 
56.33043   52305.18 
27   62 
56.33048   52305.18 
27   62 
56.33043   52305.23 
27   62 
56.336   69421.31 
27   62 
56.33605   69421.31 
27   62 
56.336   69421.38 
27   62 
56.3427   91543.45 
27   62 
56.34275   91543.45 
27   62 
56.3427   91543.54 
27   62 
56.34665   119435.1 
27   62 
56.34671   119435.1 
27   62 
56.34665   119435.2 
27   62 
56.3471   156881.8 
27   62 
56.34715   156881.8 
27   62 
56.3471   156882 
27   62 
56.34468   208326.4 
27   62 
56.34473   208326.4 
27   62 
56.34468   208326.7 
27   62 
56.34137   275716.2 
27   62 
56.34143   275716.2 
27   62 
56.34137   275716.4 
Fit Mean:  56.34137  Size:  275716.2  Code:  1 
> 
> cat("Final Fit Mean: ", nb_fit_mu, " Size: ", nb_fit_size, " Code: ", nb_fit$code, " Try Size: ", try_size, "\n")
Final Fit Mean:  56.34137  Size:  275716.2  Code:  1  Try Size:  1000 
> 
> ## Fit failed = reset parameters so graphing and output code can recognize this
> if ((nb_fit_mu < 0) || (nb_fit_size < 0) || (nb_fit$code != 1))
+ {
+   nb_fit_mu = 0
+   nb_fit_size = 0
+ }
> 
> 
> ## things can go wrong with fitting and we can still end up with invalid values
> 
> fit_nb = c()
> included_fract = 0
> if (nb_fit_mu > 0)
+ {
+   end_fract = pnbinom(end_i_for_fits, mu = nb_fit_mu, size=nb_fit_size)
+   start_fract = pnbinom(start_i_for_fits, mu = nb_fit_mu, size=nb_fit_size)
+   included_fract = end_fract-start_fract;
+ 
+   if (included_fract >= 0.01) {
+ 
+     ## Adjust so that we are back in full coords before making fit!!
+     if (num_per_bin > 1) 
+     {
+       nb_fit_mu = nb_fit_mu * num_per_bin
+     }
+     fit_nb = dnbinom(0:max(X$coverage), mu = nb_fit_mu, size=nb_fit_size)*inner_total/included_fract;
+   }
+ }
> 
> ## If an insufficient amount of fit was included, then invalidate it
> if (included_fract < 0.01)
+ {
+   nb_fit_mu = 0
+   nb_fit_size = 0
+ }
> 
> f_p <- function(par) {
+ 
+   lambda = par[1];
+ 
+   if (lambda <= 0)
+   {
+     return(0);
+   }
+   
+ 	total <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{	
+     #cat(i, " ", lambda, "\n");
+ 		dist[i] <- dpois(i, lambda=lambda);
+ 		total <- total + dist[i] 
+ 	}
+ 	#print (total)
+ 
+  	l <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{
+ 		l <- l + ((X.for.fits[i]/inner_total)-(dist[i]/total))^2;
+ 	}
+ 	return(l);
+ }
> 
> 
> ## Fit Poisson 
> ## - allow fit to fail and set all params to zero/empty if that is the case
> 
> p_fit = NULL
> try(suppressWarnings(p_fit<-nlm(f_p, c(m), print.level=this.print.level)))
> 
> fit_p = c()
> if (!is.null(p_fit) && (p_fit$estimate[1] > 0))
+ {
+   #print (nb_fit$estimate[1])
+   p_fit_lambda = p_fit$estimate[1];
+   #print(0:max(X$coverage))
+ 
+   end_fract = ppois(end_i_for_fits, lambda = p_fit_lambda)
+   start_fract = ppois(start_i_for_fits, lambda = p_fit_lambda)
+   included_fract = end_fract-start_fract;
+ 
+   ## Adjust so that we are back in full coords before making fit!!
+   if (num_per_bin > 1) 
+   {
+     p_fit_lambda = p_fit_lambda * num_per_bin
+   }
+   fit_p<-dpois(0:max(X$coverage), lambda = p_fit_lambda)*inner_total/included_fract;
+ }
> 
> 
> ## Graphing
> ##
> ## don't graph very high values with very little coverage
> i<-max_i
> while (i <= length(X$n) && X$n[i]>0.01*max_n)
+ {		
+ 	i <- i+1;
+ }
> graph_end_i <-i
> 
> ## Ths leaves enough room to the right of the peak for the legend
> graph_end_i = max(floor(2.2 * max_i), graph_end_i);
> 
> ## graphics settings
> my_pch = 21
> my_col = "black";
> my_col_censored = "red";
> 
> if (pdf_output == 0) {
+   
+   ## bitmap() requires ghostscript to be installed.
+   ## taa=4, gaa=2 options NOT compatible with earlier R versions!
+   ## units = "px" NOT compatible with even earlier R versions!
+   
+   if(!capabilities(what = "png"))
+   {
+     ## fallback to ghostscript
+     bitmap(plot_file, height=6, width=7, type = "png16m", res = 72, pointsize=18)
+   } else {
+     ## use X11 function, which gives better resolution
+     png(plot_file, height=6, width=7, units ="in", res = 72, pointsize=18)
+     par(family="sans")
+   }
+ } else {
+   pdf(plot_file, height=6, width=7)
+   par(family="sans")
+ }
> 
> par(mar=c(5.5,7.5,3,1.5));
> 
> max_y = 0
> if (plot_poisson) {
+ 	max_y = max(X$n, fit_p, fit_nb)
+ } else {
+ 	max_y = max(X$n, fit_nb)
+ }
> 
> plot(0:10, 0:10, type="n", lty="solid", ylim=c(0, max_y)*1.05, xlim=c(0, graph_end_i), lwd=1, xaxs="i", yaxs="i", axes=F, las=1, main="Coverage Distribution at Unique-Only Positions", xlab="Coverage depth (reads)", ylab="", cex.lab=1.2, cex.axis=1.2)
> 
> mtext(side = 2, text = "Number of reference positions", line = 5.5, cex=1.2)
> 
> sciNotation <- function(x, digits = 1) {
+     if (length(x) > 1) {
+         return(append(sciNotation(x[1]), sciNotation(x[-1])))     
+ 	} 
+     if (!x) return(0) 
+ 
+ 	exponent <- floor(log10(x)) 
+     base <- round(x / 10^exponent, digits)     
+ 	as.expression(substitute(base %*% 10^exponent, list(base = base, exponent = exponent))) 
+ }
> 
> #axis(2, cex.lab=1.2, las=1, cex.axis=1.2, labels=T, at=(0:6)*50000)
> axis(2, cex.lab=1.2, las=1, cex.axis=1.2, at = axTicks(2), labels = sciNotation(axTicks(2), 1))
> axis(1, cex.lab=1.2, cex.axis=1.2, labels=T)
> box()
> 
> #graph the coverage as points
> fit_data <- subset(X, (coverage>=start_i) & (coverage<=end_i) );
> points(fit_data$coverage, fit_data$n, pch=my_pch, col=my_col, bg="white", cex=1.2)
> 
> #graph the censored coverage as red points
> cat(start_i, " ", end_i, "\n", sep="")
27 62
> 
> censored_data <- subset(X, (coverage<start_i) | (coverage>end_i) );
> points(censored_data$coverage, censored_data$n, pch=my_pch, col=my_col_censored, bg="white", cex=1.2)
> 
> #graph the poisson fit IF REQUESTED
> if (plot_poisson) {
+ 	lines(0:max(X$coverage), fit_p, lwd=3, lty="22", col="black");
+ }
> 
> #graph the negative binomial fit
> if (nb_fit_mu > 0) {
+   lines(0:max(X$coverage), fit_nb, lwd=3, col="black");
+ }
> 
> if (plot_poisson) {
+ 	legend("topright", c("Coverage distribution", "Censored data", "Negative binomial", "Poisson"), lty=c("blank","blank","solid","22"), lwd=c(1,1,2,2), pch=c(my_pch, my_pch, -1, -1), col=c("black", "red", "black", "black"), bty="n")
+ } else {
+ 	legend("topright", c("Coverage distribution", "Censored data", "Negative binomial"), lty=c("blank","blank","solid"), lwd=c(1,1,2), pch=c(my_pch, my_pch, -1), col=c("black", "red", "black"), bty="n")
+ }
> 
> dev.off()
null device 
          1 
> 
> ## Fit the marginal value that we use for propagating deletions
> 
> if (nb_fit_mu > 0) {
+   cat(nb_fit_size, " ", nb_fit_mu, "\n")
+   deletion_propagation_coverage = suppressWarnings(qnbinom(deletion_propagation_pr_cutoff, size = nb_fit_size, mu = nb_fit_mu))
+ } else {
+   cat("Fallback to calculating off an estimate of just variance = mu + mu^2/size\n")
+   size_estimate = (1/(v-m))*(m*m)
+   cat("Mu estimate=", m," Size estimate =", size_estimate, "\n")
+   deletion_propagation_coverage = suppressWarnings(qnbinom(deletion_propagation_pr_cutoff, size = size_estimate, mu = m))
+   if (is.na(deletion_propagation_coverage) || is.nan(deletion_propagation_coverage) || (deletion_propagation_coverage < 1)) {
+     cat("Double fallback to calculating as just 10% of the mean\n")
+     deletion_propagation_coverage = m * 0.1
+   }
+ }
275716.2   56.34137 
> 
> #Don't allow one read to indicate non-deleted regions
> if (deletion_propagation_coverage < 1) {
+     deletion_propagation_coverage = 1
+ }
> 
> #This works fine with the negative values
> #If we have both low fit coverage and low straight average coverage then we're deleted...
> if ( (nb_fit_mu <= 3) && (m <= 3) ) {
+   deletion_propagation_coverage = -1
+ }
> 
> #print out statistics
> 
> print(nb_fit_size);
[1] 275716.2
> print(nb_fit_mu);
[1] 56.34137
> 
> print(m)
[1] 53.81818
> print(v)
[1] 24.83773
> print(D)
[1] 0.4615119
> 
> print(deletion_propagation_coverage)
[1] 37
> 
> warnings()
> 
