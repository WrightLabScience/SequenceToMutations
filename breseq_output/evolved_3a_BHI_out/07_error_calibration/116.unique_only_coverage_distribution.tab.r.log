
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> ##
> ## AUTHORS
> ##
> ## Jeffrey E. Barrick <jeffrey.e.barrick@gmail.com>
> ##
> ## LICENSE AND COPYRIGHT
> ##
> ## Copyright (c) 2008-2010 Michigan State University
> ## Copyright (c) 2011-2022 The University of Texas at Austin
> ##
> ## breseq is free software; you can redistribute it and/or modify it under the
> ## terms the GNU General Public License as published by the Free Software
> ## Foundation; either version 1, or (at your option) any later version.
> ##
> ##
> 
> ## Arguments:
> ##   distribution_file=/path/to/input 
> ##   plot_file=/path/to/output 
> ##   deletion_propagation_pr_cutoff=float
> ##   plot_poisson=0 or 1
> ##   pdf_output=0 or 1
> 
> ## Returns these values printed out to output log
> ## 
> ##  1. print(nb_fit_size); # 0 if fit failed
> ##  2. print(nb_fit_mu);   # 0 if fit failed
> ##  3. print(m)q
> ##  4. print(v)
> ##  5. print(D)
> ##  6. print(deletion_propagation_coverage)
> ##     -1 if it was <1 after fitting (implying reference sequence is deleted)
> ##
> 
> plot_poisson = 0;
> pdf_output = 1;
> 
> this.print.level = 0
> #this.print.level = 2
> 
> for (e in commandArgs(TRUE)) {
+   ta = strsplit(e,"=",fixed=TRUE)[[1]]
+   if(length(ta)>1) {
+     temp = ta[2]
+     assign(ta[1],temp)
+     cat("assigned ",ta[1]," the value of |",temp,"|\n")
+   } else {
+     assign(ta[[1]][1],TRUE)
+     cat("assigned ",ta[1]," the value of TRUE\n")
+   }
+ }
assigned  distribution_file  the value of | 3a-_BHI_c50_out/07_error_calibration/116.unique_only_coverage_distribution.tab |
assigned  plot_file  the value of | 3a-_BHI_c50_out/output/calibration/116.unique_coverage.pdf |
assigned  deletion_propagation_pr_cutoff  the value of | 0.00435194 |
> 
> deletion_propagation_pr_cutoff = as.numeric(deletion_propagation_pr_cutoff);
> 
> ## initialize values to be filled in
> nb_fit_mu = 0
> nb_fit_size = 0
> m = 0
> v = 0
> D = 0
> deletion_propagation_coverage = -1
> 
> min_fraction_included_in_nb_fit = 0.01
> 
> #load data
> X<-read.table(distribution_file, header=T)
> 
> #table might be empty
> if (nrow(X) == 0)
+ {
+   #print out statistics
+   
+   print(nb_fit_size);
+   print(nb_fit_mu);
+   
+   print(m)
+   print(v)
+   print(D)
+   
+   print(deletion_propagation_coverage)
+   
+   q()
+ }
> 
> #create the distribution vector and fit
> Y<-rep(X$coverage, X$n)
> m<-mean(Y)
> v<-var(Y)
> D<-v/m
> 
> ###
> ## Smooth the distribution with a moving average window of size 5
> ## so that we can more reliably find it's maximum value
> ###
> 
> ma5 = c(1, 1, 1, 1, 1)/5;
> 
> ## filtering fails if there are too few points
> if (nrow(X) >= 5) {
+   X$ma = filter(X$n, ma5)
+ } else {
+ 	X$ma = X$n
+ }
> 
> i<-0
> max_n <- 0;
> min_i <- max( trunc(m/4), 1 ); #prevents zero for pathological distributions
> max_i <- i;
> for (i in min_i:length(X$ma))
+ {		
+   #cat(i, "\n")
+ 	if (!is.na(X$ma[i]) && (X$ma[i] > max_n))
+ 	{
+ 		max_n = X$ma[i];
+ 		max_i = i;
+ 	}
+ }
> 
> ##
> # Censor data on the right and left of the maximum
> ##
> 
> start_i = max(floor(max_i*0.5), 1);
> end_i = min(ceiling(max_i*1.5), length(X$ma));
> 
> if (start_i == end_i)
+ {
+   print(nb_fit_size);
+   print(nb_fit_mu);
+   
+   print(m)
+   print(v)
+   print(D)
+   
+   print(deletion_propagation_coverage)
+   
+   q()
+ }
> 
> cat("Fitting from coverage of ", start_i, " to ", end_i, ".\n", sep="")
Fitting from coverage of 16 to 40.
> 
> ##
> # Coarse grain so that we are only fitting a number of bins that is 1000-2000
> #
> # The later adjustment for doing the fits this way is to multiply the means
> # of the negative binomial and poisson distributions by the binning number.
> # (The size parameter of the negative binomial doesn't need to be adjusted.)
> ##
> 
> 
> num_per_bin = trunc((end_i - start_i) / 1000)
> 
> if (num_per_bin > 1) 
+ {
+   cat("Coarse-graining for fits\n")
+   start_i_for_fits = trunc(start_i/num_per_bin)
+   end_i_for_fits = ceiling(end_i/num_per_bin)
+   num_bins = end_i - start_i  + 1
+   cat("Fitting from coverage in adjusted bins ", start_i_for_fits, " to ", end_i_for_fits, ".\n", sep="")
+   cat("Number of bins ", num_bins, ". Each bin has ", num_per_bin, " coverage values.\n", sep="")
+ 
+   # Create a new vector where we've added together values in bins
+   X.for.fits = vector("double", end_i_for_fits)
+   for (i in start_i_for_fits:end_i_for_fits)
+   {
+     for (j in 1:num_per_bin)
+     {
+       if (i*num_per_bin+j <= length(X$n))
+       {
+         X.for.fits[i] = X.for.fits[i] + X$n[i*num_per_bin+j]
+       }
+     }
+   }
+ 
+ } else {
+   ## AVOID num_per_bin equalling zero!!
+   X.for.fits = X$n[1:end_i]
+   num_per_bin = 1
+   start_i_for_fits = start_i
+   end_i_for_fits = end_i
+ }
> 
> 
> ##
> # Now perform negative binomial fitting to the censored data
> ##
> 
> inner_total<-0;
> for (i in start_i_for_fits:end_i_for_fits)
+ {
+ 	inner_total = inner_total + X.for.fits[i]; 
+ }
> # Yes: it's correct to use X here because we want the overall total total
> total_total<-sum(X$n);
> 
> ## let's preconstruct these for speed
> dist = vector("double", end_i_for_fits)
> 
> f_nb <- function(par) {
+ 
+ 	mu = par[1];
+ 	size = par[2];
+ 
+   if ((mu <= 0) || (size <= 0))
+   {
+     return(0);
+   }
+   
+   cat(start_i_for_fits, " ", end_i_for_fits, "\n");
+   cat(mu, " ", size, "\n");
+   
+ 	dist<-c()
+ 	total <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{	
+ 		dist[i] <- dnbinom(i, size=size, mu=mu);
+ 		total <- total + dist[i] 
+ 	}
+ 	#print (mu, size)
+ 
+  	l <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{
+ 		l <- l + ((X.for.fits[i]/inner_total)-(dist[i]/total))^2;
+ 	}
+ 	return(l);
+ }
> 
> 
> 
> ## Fit negative binomial 
> ## - allow fit to fail and set all params to zero/empty if that is the case
> nb_fit = NULL
> ## as.numeric prevents overflow in sums involving integers
> mean_estimate = sum((as.numeric(1:end_i_for_fits)*as.numeric(X.for.fits)))/sum(as.numeric(X.for.fits))
> 
> nb_fit_mu = -1
> nb_fit_size = -1
> try_size = 100000
> try_means_index = 1
> #This is a list of different means to test <-  sometimes the actual mean doesn't lead to a fit
> try_means = c(mean_estimate, 
+               end_i_for_fits, 
+               start_i_for_fits, 
+               1*(end_i_for_fits + start_i_for_fits)/4,
+               2*(end_i_for_fits + start_i_for_fits)/4,
+               3*(end_i_for_fits + start_i_for_fits)/4
+               )
>               
>               
> nb_fit = c()
> 
> while ( ((nb_fit_mu < 0) || (nb_fit_size < 0) || (nb_fit$code != 1)) && (try_size > 0.001) && (try_means_index <= length(try_means)))
+ {
+   try_size = try_size / 10
+   try_mean = try_means[try_means_index]
+ 
+   ## SIZE ESTIMATE from the censored data can be negative, so try various values instead
+   cat("Try Mean: ", try_mean, " Size: ", try_size, "\n")
+ 
+   try( suppressWarnings(nb_fit<-nlm(f_nb, c(try_mean, try_size), iterlim=1000, print.level=this.print.level)) )
+ 
+   nb_fit_mu = nb_fit$estimate[1];
+   nb_fit_size = nb_fit$estimate[2];
+ 
+   cat("Fit Mean: ", nb_fit_mu, " Size: ", nb_fit_size, " Code: ", nb_fit$code, "\n")
+   
+   if (try_size <= 0.001) {
+     try_size = 100000
+     try_means_index = try_means_index + 1
+   }
+ }
Try Mean:  33.26316  Size:  10000 
16   40 
33.26316   10000 
16   40 
33.26316   10000 
16   40 
33.26319   10000 
16   40 
33.26316   10000.01 
16   40 
33.26416   10000 
16   40 
33.26419   10000 
16   40 
33.26416   10000.01 
16   40 
33.83188   10000 
16   40 
33.83192   10000 
16   40 
33.83188   10000.01 
16   40 
33.85199   10000 
16   40 
33.85202   10000 
16   40 
33.85199   10000.01 
16   40 
33.85278   10000 
16   40 
33.85281   10000 
16   40 
33.85278   10000.01 
16   40 
33.85278   10000 
16   40 
33.85281   10000 
16   40 
33.85278   10000.01 
Fit Mean:  33.85278  Size:  10000  Code:  2 
Try Mean:  33.26316  Size:  1000 
16   40 
33.26316   1000 
16   40 
33.26316   1000 
16   40 
33.26319   1000 
16   40 
33.26316   1000.001 
16   40 
33.26427   1000 
16   40 
33.2643   1000 
16   40 
33.26427   1000.001 
16   40 
33.91384   1000 
16   40 
33.91387   1000 
16   40 
33.91384   1000.001 
16   40 
33.94014   1000 
16   40 
33.94017   1000 
16   40 
33.94014   1000.001 
16   40 
33.94133   1000 
16   40 
33.94137   1000 
16   40 
33.94133   1000.001 
16   40 
33.94134   1000 
16   40 
33.94137   1000 
16   40 
33.94134   1000.001 
Fit Mean:  33.94134  Size:  1000  Code:  2 
Try Mean:  33.26316  Size:  100 
16   40 
33.26316   100 
16   40 
33.26316   100 
16   40 
33.26319   100 
16   40 
33.26316   100.0001 
16   40 
33.26501   100 
16   40 
33.26504   100 
16   40 
33.26501   100.0001 
16   40 
34.72824   100.032 
16   40 
34.72828   100.032 
16   40 
34.72824   100.0321 
16   40 
34.86059   100.0437 
16   40 
34.86062   100.0437 
16   40 
34.86059   100.0438 
16   40 
34.87628   100.0535 
16   40 
34.87632   100.0535 
16   40 
34.87628   100.0536 
16   40 
34.88177   100.0683 
16   40 
34.88181   100.0683 
16   40 
34.88177   100.0684 
16   40 
34.90117   100.1746 
16   40 
34.90121   100.1746 
16   40 
34.90117   100.1747 
16   40 
34.92441   100.4277 
16   40 
34.92445   100.4277 
16   40 
34.92441   100.4278 
16   40 
34.96145   101.1997 
16   40 
34.96149   101.1997 
16   40 
34.96145   101.1998 
16   40 
35.00717   103.1833 
16   40 
35.00721   103.1833 
16   40 
35.00717   103.1834 
16   40 
35.05025   108.3223 
16   40 
35.05028   108.3223 
16   40 
35.05025   108.3225 
16   40 
35.0442   121.235 
16   40 
35.04423   121.235 
16   40 
35.0442   121.2351 
16   40 
34.85722   156.8419 
16   40 
34.85726   156.8419 
16   40 
34.85722   156.842 
16   40 
34.1442   261.765 
16   40 
34.14423   261.765 
16   40 
34.1442   261.7652 
16   40 
33.99948   293.5582 
16   40 
33.99951   293.5582 
16   40 
33.99948   293.5585 
16   40 
33.9638   320.938 
16   40 
33.96383   320.938 
16   40 
33.9638   320.9383 
16   40 
33.96782   425.5553 
16   40 
33.96785   425.5553 
16   40 
33.96782   425.5557 
16   40 
33.9953   533.4077 
16   40 
33.99534   533.4077 
16   40 
33.9953   533.4083 
16   40 
33.97855   689.9422 
16   40 
33.97858   689.9422 
16   40 
33.97855   689.9429 
16   40 
33.93387   907.3827 
16   40 
33.9339   907.3827 
16   40 
33.93387   907.3836 
16   40 
33.90037   1190.042 
16   40 
33.90041   1190.042 
16   40 
33.90037   1190.044 
16   40 
33.88546   1557.13 
16   40 
33.88549   1557.13 
16   40 
33.88546   1557.131 
16   40 
33.87813   2042.762 
16   40 
33.87817   2042.762 
16   40 
33.87813   2042.764 
16   40 
33.87089   2686.481 
16   40 
33.87092   2686.481 
16   40 
33.87089   2686.483 
16   40 
33.86389   3541.536 
16   40 
33.86392   3541.536 
16   40 
33.86389   3541.539 
16   40 
33.85853   4673.379 
16   40 
33.85857   4673.379 
16   40 
33.85853   4673.384 
16   40 
33.85472   6171.925 
16   40 
33.85476   6171.925 
16   40 
33.85472   6171.931 
16   40 
33.8519   8156.382 
16   40 
33.85193   8156.382 
16   40 
33.8519   8156.39 
16   40 
33.84973   10785.54 
16   40 
33.84977   10785.54 
16   40 
33.84973   10785.55 
16   40 
33.84808   14267.94 
16   40 
33.84812   14267.94 
16   40 
33.84808   14267.95 
16   40 
33.84684   18881.04 
16   40 
33.84687   18881.04 
16   40 
33.84684   18881.06 
16   40 
33.8459   24992.98 
16   40 
33.84593   24992.98 
16   40 
33.8459   24993 
16   40 
33.84519   33084.81 
16   40 
33.84522   33084.81 
16   40 
33.84519   33084.84 
16   40 
33.84465   43808.05 
16   40 
33.84468   43808.05 
16   40 
33.84465   43808.09 
16   40 
33.84424   58027 
16   40 
33.84428   58027 
16   40 
33.84424   58027.06 
16   40 
33.84394   76905.8 
16   40 
33.84397   76905.8 
16   40 
33.84394   76905.87 
16   40 
33.84371   101801.2 
16   40 
33.84374   101801.2 
16   40 
33.84371   101801.3 
16   40 
33.84353   134760.5 
16   40 
33.84357   134760.5 
16   40 
33.84353   134760.7 
16   40 
33.8434   178765.9 
16   40 
33.84343   178765.9 
16   40 
33.8434   178766 
16   40 
33.8433   235952.8 
16   40 
33.84334   235952.8 
16   40 
33.8433   235953 
16   40 
33.84324   307568.6 
16   40 
33.84327   307568.6 
16   40 
33.84324   307568.9 
16   40 
33.84317   412955.7 
16   40 
33.8432   412955.7 
16   40 
33.84317   412956.1 
16   40 
33.84315   518005.1 
16   40 
33.84318   518005.1 
16   40 
33.84315   518005.7 
16   40 
33.84311   623392.2 
16   40 
33.84314   623392.2 
16   40 
33.84311   623392.8 
16   40 
33.84311   728779.3 
16   40 
33.84314   728779.3 
16   40 
33.84311   728780 
16   40 
33.84309   834166.4 
16   40 
33.84313   834166.4 
16   40 
33.84309   834167.2 
Fit Mean:  33.84309  Size:  834166.4  Code:  5 
Try Mean:  33.26316  Size:  10 
16   40 
33.26316   10 
16   40 
33.26316   10 
16   40 
33.26319   10 
16   40 
33.26316   10.00001 
16   40 
33.26536   10.00125 
16   40 
33.2654   10.00125 
16   40 
33.26536   10.00126 
16   40 
44.31649   23.83662 
16   40 
44.31654   23.83662 
16   40 
44.31649   23.83665 
16   40 
40.93713   20.52445 
16   40 
40.93717   20.52445 
16   40 
40.93713   20.52447 
16   40 
40.29038   20.72621 
16   40 
40.29042   20.72621 
16   40 
40.29038   20.72624 
16   40 
38.98925   22.31421 
16   40 
38.98929   22.31421 
16   40 
38.98925   22.31423 
16   40 
37.58584   25.47293 
16   40 
37.58588   25.47293 
16   40 
37.58584   25.47296 
16   40 
37.06288   29.02154 
16   40 
37.06292   29.02154 
16   40 
37.06288   29.02157 
16   40 
36.83538   37.99032 
16   40 
36.83542   37.99032 
16   40 
36.83538   37.99036 
16   40 
35.01005   52.46536 
16   40 
35.01008   52.46536 
16   40 
35.01005   52.46541 
16   40 
35.53181   57.70886 
16   40 
35.53185   57.70886 
16   40 
35.53181   57.70892 
16   40 
35.21258   74.10441 
16   40 
35.21262   74.10441 
16   40 
35.21258   74.10448 
16   40 
34.61627   99.15161 
16   40 
34.61631   99.15161 
16   40 
34.61627   99.15171 
16   40 
34.52767   125.3117 
16   40 
34.5277   125.3117 
16   40 
34.52767   125.3119 
16   40 
34.37019   160.9651 
16   40 
34.37023   160.9651 
16   40 
34.37019   160.9652 
16   40 
34.2838   207.3928 
16   40 
34.28384   207.3928 
16   40 
34.2838   207.393 
16   40 
34.11965   270.5311 
16   40 
34.11968   270.5311 
16   40 
34.11965   270.5314 
16   40 
34.17291   355.4638 
16   40 
34.17294   355.4638 
16   40 
34.17291   355.4641 
16   40 
33.93894   482.6649 
16   40 
33.93898   482.6649 
16   40 
33.93894   482.6654 
16   40 
33.94491   591.2446 
16   40 
33.94495   591.2446 
16   40 
33.94491   591.2452 
16   40 
33.94828   775.336 
16   40 
33.94832   775.336 
16   40 
33.94828   775.3367 
16   40 
33.91975   1007.346 
16   40 
33.91979   1007.346 
16   40 
33.91975   1007.347 
16   40 
33.90246   1324.177 
16   40 
33.90249   1324.177 
16   40 
33.90246   1324.178 
16   40 
33.88769   1737.01 
16   40 
33.88773   1737.01 
16   40 
33.88769   1737.012 
16   40 
33.87723   2286.658 
16   40 
33.87726   2286.658 
16   40 
33.87723   2286.66 
16   40 
33.86874   3012.511 
16   40 
33.86877   3012.511 
16   40 
33.86874   3012.514 
16   40 
33.86264   3974.616 
16   40 
33.86267   3974.616 
16   40 
33.86264   3974.62 
16   40 
33.85774   5248.341 
16   40 
33.85778   5248.341 
16   40 
33.85774   5248.346 
16   40 
33.85424   6935.692 
16   40 
33.85427   6935.692 
16   40 
33.85424   6935.699 
16   40 
33.85142   9170.401 
16   40 
33.85145   9170.401 
16   40 
33.85142   9170.41 
16   40 
33.84942   12131.02 
16   40 
33.84945   12131.02 
16   40 
33.84942   12131.03 
16   40 
33.8478   16052.68 
16   40 
33.84783   16052.68 
16   40 
33.8478   16052.69 
16   40 
33.84667   21248.47 
16   40 
33.8467   21248.47 
16   40 
33.84667   21248.49 
16   40 
33.84573   28133.75 
16   40 
33.84576   28133.75 
16   40 
33.84573   28133.77 
16   40 
33.84509   37242.42 
16   40 
33.84513   37242.42 
16   40 
33.84509   37242.46 
16   40 
33.84455   49324.13 
16   40 
33.84458   49324.13 
16   40 
33.84455   49324.18 
16   40 
33.8442   65303.2 
16   40 
33.84423   65303.2 
16   40 
33.8442   65303.26 
16   40 
33.84387   86595.62 
16   40 
33.84391   86595.62 
16   40 
33.84387   86595.71 
16   40 
33.84368   114619.2 
16   40 
33.84372   114619.2 
16   40 
33.84368   114619.3 
16   40 
33.8435   149353 
16   40 
33.84354   149353 
16   40 
33.8435   149353.1 
16   40 
33.84343   184086.8 
16   40 
33.84346   184086.8 
16   40 
33.84343   184087 
16   40 
33.84336   218820.6 
16   40 
33.84339   218820.6 
16   40 
33.84336   218820.8 
16   40 
33.84331   253554.4 
16   40 
33.84334   253554.4 
16   40 
33.84331   253554.7 
16   40 
33.84328   288288.2 
16   40 
33.84331   288288.2 
16   40 
33.84328   288288.5 
Fit Mean:  33.84328  Size:  288288.2  Code:  5 
Try Mean:  33.26316  Size:  1 
16   40 
33.26316   1 
16   40 
33.26316   1 
16   40 
33.26319   1 
16   40 
33.26316   1.000001 
16   40 
33.26364   1.004741 
16   40 
33.26367   1.004741 
16   40 
33.26364   1.004742 
16   40 
37.72433   8.733569 
16   40 
37.72436   8.733569 
16   40 
37.72433   8.733578 
16   40 
43.61862   15.82843 
16   40 
43.61867   15.82843 
16   40 
43.61862   15.82845 
16   40 
43.4436   15.77056 
16   40 
43.44364   15.77056 
16   40 
43.4436   15.77058 
16   40 
42.79932   15.85706 
16   40 
42.79937   15.85706 
16   40 
42.79932   15.85707 
16   40 
41.70857   16.44266 
16   40 
41.70862   16.44266 
16   40 
41.70857   16.44268 
16   40 
40.01891   18.02264 
16   40 
40.01895   18.02264 
16   40 
40.01891   18.02266 
16   40 
39.12065   19.86657 
16   40 
39.12069   19.86657 
16   40 
39.12065   19.86659 
16   40 
37.7865   26.28973 
16   40 
37.78654   26.28973 
16   40 
37.7865   26.28975 
16   40 
37.19353   32.95707 
16   40 
37.19357   32.95707 
16   40 
37.19353   32.9571 
16   40 
34.7791   46.98107 
16   40 
34.77913   46.98107 
16   40 
34.7791   46.98112 
16   40 
36.06269   52.79292 
16   40 
36.06273   52.79292 
16   40 
36.06269   52.79297 
16   40 
35.55109   63.46324 
16   40 
35.55112   63.46324 
16   40 
35.55109   63.4633 
16   40 
34.36855   94.56841 
16   40 
34.36859   94.56841 
16   40 
34.36855   94.5685 
16   40 
34.67217   103.3086 
16   40 
34.67221   103.3086 
16   40 
34.67217   103.3087 
16   40 
34.60391   131.4482 
16   40 
34.60394   131.4482 
16   40 
34.60391   131.4483 
16   40 
34.32221   172.43 
16   40 
34.32225   172.43 
16   40 
34.32221   172.4302 
16   40 
34.18864   222.6283 
16   40 
34.18868   222.6283 
16   40 
34.18864   222.6286 
16   40 
34.14277   285.6492 
16   40 
34.1428   285.6492 
16   40 
34.14277   285.6495 
16   40 
34.05763   370.545 
16   40 
34.05766   370.545 
16   40 
34.05763   370.5454 
16   40 
34.02566   481.3328 
16   40 
34.0257   481.3328 
16   40 
34.02566   481.3333 
16   40 
33.96179   628.8917 
16   40 
33.96183   628.8917 
16   40 
33.96179   628.8923 
16   40 
33.95962   823.1101 
16   40 
33.95965   823.1101 
16   40 
33.95962   823.1109 
16   40 
33.8977   1087.133 
16   40 
33.89774   1087.133 
16   40 
33.8977   1087.134 
16   40 
33.91244   1432.922 
16   40 
33.91247   1432.922 
16   40 
33.91244   1432.923 
16   40 
33.87698   1889.769 
16   40 
33.87702   1889.769 
16   40 
33.87698   1889.771 
16   40 
33.87581   2490.917 
16   40 
33.87585   2490.917 
16   40 
33.87581   2490.919 
16   40 
33.8654   3279.456 
16   40 
33.86543   3279.456 
16   40 
33.8654   3279.46 
16   40 
33.86103   4330.165 
16   40 
33.86106   4330.165 
16   40 
33.86103   4330.169 
16   40 
33.85614   5716.885 
16   40 
33.85618   5716.885 
16   40 
33.85614   5716.89 
16   40 
33.85319   7556.777 
16   40 
33.85322   7556.777 
16   40 
33.85319   7556.784 
16   40 
33.85057   9992.066 
16   40 
33.8506   9992.066 
16   40 
33.85057   9992.076 
16   40 
33.84879   13219.53 
16   40 
33.84882   13219.53 
16   40 
33.84879   13219.54 
16   40 
33.84733   17492.17 
16   40 
33.84736   17492.17 
16   40 
33.84733   17492.19 
16   40 
33.84629   23156.86 
16   40 
33.84632   23156.86 
16   40 
33.84629   23156.88 
16   40 
33.84547   30655.91 
16   40 
33.84551   30655.91 
16   40 
33.84547   30655.94 
16   40 
33.84487   40602.89 
16   40 
33.8449   40602.89 
16   40 
33.84487   40602.93 
16   40 
33.84441   53771.42 
16   40 
33.84444   53771.42 
16   40 
33.84441   53771.48 
16   40 
33.84406   71199.26 
16   40 
33.8441   71199.26 
16   40 
33.84406   71199.34 
16   40 
33.84381   94103.37 
16   40 
33.84384   94103.37 
16   40 
33.84381   94103.47 
16   40 
33.8436   124990 
16   40 
33.84363   124990 
16   40 
33.8436   124990.1 
16   40 
33.84348   158268.2 
16   40 
33.84352   158268.2 
16   40 
33.84348   158268.3 
16   40 
33.8434   191546.4 
16   40 
33.84343   191546.4 
16   40 
33.8434   191546.5 
16   40 
33.84335   224824.5 
16   40 
33.84338   224824.5 
16   40 
33.84335   224824.8 
16   40 
33.8433   258102.7 
16   40 
33.84333   258102.7 
16   40 
33.8433   258103 
16   40 
33.84327   291380.9 
16   40 
33.84331   291380.9 
16   40 
33.84327   291381.2 
Fit Mean:  33.84327  Size:  291380.9  Code:  5 
Try Mean:  33.26316  Size:  0.1 
16   40 
33.26316   0.1 
16   40 
33.26316   0.1 
16   40 
33.26319   0.1 
16   40 
33.26316   0.100001 
16   40 
33.26321   0.1056612 
16   40 
33.26324   0.1056612 
16   40 
33.26321   0.1056622 
16   40 
35.66414   6.159602 
16   40 
35.66417   6.159602 
16   40 
35.66414   6.159608 
16   40 
40.59058   13.38574 
16   40 
40.59062   13.38574 
16   40 
40.59058   13.38576 
16   40 
42.71165   16.37204 
16   40 
42.71169   16.37204 
16   40 
42.71165   16.37206 
16   40 
42.80286   16.63159 
16   40 
42.8029   16.63159 
16   40 
42.80286   16.63161 
16   40 
42.81152   17.07198 
16   40 
42.81156   17.07198 
16   40 
42.81152   17.072 
16   40 
42.55911   18.23028 
16   40 
42.55916   18.23028 
16   40 
42.55911   18.2303 
16   40 
41.06719   22.53503 
16   40 
41.06723   22.53503 
16   40 
41.06719   22.53506 
16   40 
39.3157   27.22312 
16   40 
39.31574   27.22312 
16   40 
39.3157   27.22315 
16   40 
37.24938   33.17469 
16   40 
37.24941   33.17469 
16   40 
37.24938   33.17473 
16   40 
35.11235   40.55905 
16   40 
36.48018   35.83259 
16   40 
36.48022   35.83259 
16   40 
36.48018   35.83263 
16   40 
36.25402   37.56726 
16   40 
36.25405   37.56726 
16   40 
36.25402   37.56729 
16   40 
35.44942   48.98287 
16   40 
35.44945   48.98287 
16   40 
35.44942   48.98292 
16   40 
35.3401   59.91647 
16   40 
35.34013   59.91647 
16   40 
35.3401   59.91653 
16   40 
35.03014   77.1988 
16   40 
35.03018   77.1988 
16   40 
35.03014   77.19888 
16   40 
34.7426   99.49069 
16   40 
34.74263   99.49069 
16   40 
34.7426   99.49079 
16   40 
34.60135   128.7194 
16   40 
34.60139   128.7194 
16   40 
34.60135   128.7195 
16   40 
34.19395   170.8172 
16   40 
34.19398   170.8172 
16   40 
34.19395   170.8174 
16   40 
34.368   230.1016 
16   40 
34.36804   230.1016 
16   40 
34.368   230.1018 
16   40 
34.13227   292.8624 
16   40 
34.1323   292.8624 
16   40 
34.13227   292.8626 
16   40 
33.99922   379.4289 
16   40 
33.99925   379.4289 
16   40 
33.99922   379.4293 
16   40 
33.97993   481.8079 
16   40 
33.97997   481.8079 
16   40 
33.97993   481.8084 
16   40 
33.97279   623.2266 
16   40 
33.97283   623.2266 
16   40 
33.97279   623.2272 
16   40 
33.94123   811.3239 
16   40 
33.94126   811.3239 
16   40 
33.94123   811.3247 
16   40 
33.91581   1063.146 
16   40 
33.91584   1063.146 
16   40 
33.91581   1063.147 
16   40 
33.89882   1393.119 
16   40 
33.89885   1393.119 
16   40 
33.89882   1393.121 
16   40 
33.8853   1830.421 
16   40 
33.88533   1830.421 
16   40 
33.8853   1830.423 
16   40 
33.87516   2408.806 
16   40 
33.8752   2408.806 
16   40 
33.87516   2408.809 
16   40 
33.86734   3174.692 
16   40 
33.86737   3174.692 
16   40 
33.86734   3174.695 
16   40 
33.86145   4188.828 
16   40 
33.86148   4188.828 
16   40 
33.86145   4188.832 
16   40 
33.85694   5532.011 
16   40 
33.85697   5532.011 
16   40 
33.85694   5532.016 
16   40 
33.85355   7311.131 
16   40 
33.85358   7311.131 
16   40 
33.85355   7311.138 
16   40 
33.85097   9667.456 
16   40 
33.851   9667.456 
16   40 
33.85097   9667.466 
16   40 
33.84902   12789.12 
16   40 
33.84906   12789.12 
16   40 
33.84902   12789.13 
16   40 
33.84754   16924.67 
16   40 
33.84758   16924.67 
16   40 
33.84754   16924.69 
16   40 
33.84643   22399.11 
16   40 
33.84647   22399.11 
16   40 
33.84643   22399.13 
16   40 
33.84559   29662.93 
16   40 
33.84562   29662.93 
16   40 
33.84559   29662.96 
16   40 
33.84496   39267.88 
16   40 
33.84499   39267.88 
16   40 
33.84496   39267.92 
16   40 
33.84447   52006.67 
16   40 
33.84451   52006.67 
16   40 
33.84447   52006.72 
16   40 
33.84411   68922.23 
16   40 
33.84414   68922.23 
16   40 
33.84411   68922.3 
16   40 
33.84384   91194.85 
16   40 
33.84387   91194.85 
16   40 
33.84384   91194.94 
16   40 
33.84363   120827.9 
16   40 
33.84366   120827.9 
16   40 
33.84363   120828 
16   40 
33.8435   154091.2 
16   40 
33.84353   154091.2 
16   40 
33.8435   154091.3 
16   40 
33.84341   187354.5 
16   40 
33.84345   187354.5 
16   40 
33.84341   187354.7 
16   40 
33.84336   220617.8 
16   40 
33.84339   220617.8 
16   40 
33.84336   220618 
16   40 
33.84331   253881.1 
16   40 
33.84334   253881.1 
16   40 
33.84331   253881.4 
16   40 
33.84328   287144.4 
16   40 
33.84331   287144.4 
16   40 
33.84328   287144.7 
Fit Mean:  33.84328  Size:  287144.4  Code:  5 
Try Mean:  33.26316  Size:  0.01 
16   40 
33.26316   0.01 
16   40 
33.26316   0.01 
16   40 
33.26319   0.01 
16   40 
33.26316   0.010001 
16   40 
33.26316   0.01576576 
16   40 
33.2632   0.01576576 
16   40 
33.26316   0.01576676 
16   40 
35.51466   5.946458 
16   40 
35.5147   5.946458 
16   40 
35.51466   5.946464 
16   40 
40.24482   13.03808 
16   40 
40.24486   13.03808 
16   40 
40.24482   13.0381 
16   40 
42.64006   16.44345 
16   40 
42.64011   16.44345 
16   40 
42.64006   16.44346 
16   40 
42.74082   16.71588 
16   40 
42.74087   16.71588 
16   40 
42.74082   16.71589 
16   40 
42.75585   17.12386 
16   40 
42.75589   17.12386 
16   40 
42.75585   17.12388 
16   40 
42.53486   18.22012 
16   40 
42.5349   18.22012 
16   40 
42.53486   18.22014 
16   40 
41.24876   22.04485 
16   40 
41.2488   22.04485 
16   40 
41.24876   22.04487 
16   40 
39.81657   25.87821 
16   40 
39.81661   25.87821 
16   40 
39.81657   25.87824 
16   40 
38.06952   30.87994 
16   40 
38.06956   30.87994 
16   40 
38.06952   30.87997 
16   40 
28.06461   62.35858 
16   40 
37.06903   34.02781 
16   40 
37.06907   34.02781 
16   40 
37.06903   34.02784 
16   40 
35.90645   38.57883 
16   40 
35.90649   38.57883 
16   40 
35.90645   38.57887 
16   40 
36.23656   38.20771 
16   40 
36.23659   38.20771 
16   40 
36.23656   38.20775 
16   40 
36.47802   40.65056 
16   40 
36.47806   40.65056 
16   40 
36.47802   40.6506 
16   40 
36.32993   48.32497 
16   40 
36.32996   48.32497 
16   40 
36.32993   48.32501 
16   40 
35.34153   66.70067 
16   40 
35.34157   66.70067 
16   40 
35.34153   66.70074 
16   40 
34.42842   89.54524 
16   40 
34.42846   89.54524 
16   40 
34.42842   89.54533 
16   40 
34.63001   96.37731 
16   40 
34.63004   96.37731 
16   40 
34.63001   96.3774 
16   40 
34.62918   125.0732 
16   40 
34.62921   125.0732 
16   40 
34.62918   125.0733 
16   40 
34.3897   160.0099 
16   40 
34.38973   160.0099 
16   40 
34.3897   160.0101 
16   40 
34.21493   209.8707 
16   40 
34.21497   209.8707 
16   40 
34.21493   209.8709 
16   40 
34.16084   268.6513 
16   40 
34.16087   268.6513 
16   40 
34.16084   268.6516 
16   40 
34.07348   348.4869 
16   40 
34.07351   348.4869 
16   40 
34.07348   348.4873 
16   40 
34.03753   452.2301 
16   40 
34.03757   452.2301 
16   40 
34.03753   452.2305 
16   40 
33.97026   590.7023 
16   40 
33.9703   590.7023 
16   40 
33.97026   590.7029 
16   40 
33.96896   772.8242 
16   40 
33.96899   772.8242 
16   40 
33.96896   772.825 
16   40 
33.89875   1022.349 
16   40 
33.89879   1022.349 
16   40 
33.89875   1022.35 
16   40 
33.91681   1347.271 
16   40 
33.91684   1347.271 
16   40 
33.91681   1347.272 
16   40 
33.88054   1774.215 
16   40 
33.88058   1774.215 
16   40 
33.88054   1774.217 
16   40 
33.87696   2338.337 
16   40 
33.87699   2338.337 
16   40 
33.87696   2338.339 
16   40 
33.86727   3076.649 
16   40 
33.86731   3076.649 
16   40 
33.86727   3076.652 
16   40 
33.86199   4061.33 
16   40 
33.86202   4061.33 
16   40 
33.86199   4061.334 
16   40 
33.85711   5360.974 
16   40 
33.85715   5360.974 
16   40 
33.85711   5360.979 
16   40 
33.85379   7085.134 
16   40 
33.85383   7085.134 
16   40 
33.85379   7085.141 
16   40 
33.8511   9367.085 
16   40 
33.85113   9367.085 
16   40 
33.8511   9367.094 
16   40 
33.84915   12391.47 
16   40 
33.84918   12391.47 
16   40 
33.84915   12391.48 
16   40 
33.84762   16397.06 
16   40 
33.84766   16397.06 
16   40 
33.84762   16397.07 
16   40 
33.8465   21701.89 
16   40 
33.84654   21701.89 
16   40 
33.8465   21701.91 
16   40 
33.84564   28731.69 
16   40 
33.84567   28731.69 
16   40 
33.84564   28731.72 
16   40 
33.84499   38052.02 
16   40 
33.84503   38052.02 
16   40 
33.84499   38052.05 
16   40 
33.8445   50363.6 
16   40 
33.84454   50363.6 
16   40 
33.8445   50363.65 
16   40 
33.84413   66702.61 
16   40 
33.84417   66702.61 
16   40 
33.84413   66702.68 
16   40 
33.84386   88318.43 
16   40 
33.84389   88318.43 
16   40 
33.84386   88318.52 
16   40 
33.84364   117072.2 
16   40 
33.84368   117072.2 
16   40 
33.84364   117072.3 
16   40 
33.84351   150335.4 
16   40 
33.84354   150335.4 
16   40 
33.84351   150335.5 
16   40 
33.84342   183598.5 
16   40 
33.84345   183598.5 
16   40 
33.84342   183598.7 
16   40 
33.84336   216861.7 
16   40 
33.84339   216861.7 
16   40 
33.84336   216861.9 
16   40 
33.84331   250124.9 
16   40 
33.84334   250124.9 
16   40 
33.84331   250125.1 
16   40 
33.84328   283388 
16   40 
33.84331   283388 
16   40 
33.84328   283388.3 
Fit Mean:  33.84328  Size:  283388  Code:  5 
Try Mean:  33.26316  Size:  0.001 
16   40 
33.26316   0.001 
16   40 
33.26316   0.001 
16   40 
33.26319   0.001 
16   40 
33.26316   0.001001 
16   40 
33.26316   0.006776354 
16   40 
33.26319   0.006776354 
16   40 
33.26316   0.006777354 
16   40 
35.50017   5.92554 
16   40 
35.50021   5.92554 
16   40 
35.50017   5.925546 
16   40 
40.21047   13.00298 
16   40 
40.21051   13.00298 
16   40 
40.21047   13.00299 
16   40 
42.6329   16.45061 
16   40 
42.63294   16.45061 
16   40 
42.6329   16.45063 
16   40 
42.73463   16.72439 
16   40 
42.73467   16.72439 
16   40 
42.73463   16.7244 
16   40 
42.75019   17.12941 
16   40 
42.75024   17.12941 
16   40 
42.75019   17.12943 
16   40 
42.53203   18.22015 
16   40 
42.53207   18.22015 
16   40 
42.53203   18.22017 
16   40 
41.2635   22.00407 
16   40 
41.26354   22.00407 
16   40 
41.2635   22.00409 
16   40 
39.85747   25.76732 
16   40 
39.85751   25.76732 
16   40 
39.85747   25.76734 
16   40 
38.1409   30.67895 
16   40 
38.14093   30.67895 
16   40 
38.1409   30.67898 
16   40 
26.28411   67.80143 
16   40 
36.95522   34.3912 
16   40 
36.95525   34.3912 
16   40 
36.95522   34.39123 
16   40 
35.98822   38.27964 
16   40 
35.98825   38.27964 
16   40 
35.98822   38.27968 
16   40 
36.17819   38.51311 
16   40 
36.17822   38.51311 
16   40 
36.17819   38.51314 
16   40 
36.38616   44.54808 
16   40 
36.38619   44.54808 
16   40 
36.38616   44.54812 
16   40 
35.93886   54.94135 
16   40 
35.9389   54.94135 
16   40 
35.93886   54.9414 
16   40 
34.47086   82.47469 
16   40 
34.4709   82.47469 
16   40 
34.47086   82.47477 
16   40 
34.83977   86.21726 
16   40 
34.83981   86.21726 
16   40 
34.83977   86.21735 
16   40 
34.81086   107.0592 
16   40 
34.8109   107.0592 
16   40 
34.81086   107.0593 
16   40 
34.46729   141.0173 
16   40 
34.46733   141.0173 
16   40 
34.46729   141.0174 
16   40 
34.24529   183.2565 
16   40 
34.24533   183.2565 
16   40 
34.24529   183.2567 
16   40 
34.19742   233.5613 
16   40 
34.19746   233.5613 
16   40 
34.19742   233.5615 
16   40 
34.11657   301.1506 
16   40 
34.1166   301.1506 
16   40 
34.11657   301.1509 
16   40 
34.05879   390.3179 
16   40 
34.05882   390.3179 
16   40 
34.05879   390.3183 
16   40 
34.00478   507.6066 
16   40 
34.00481   507.6066 
16   40 
34.00478   507.6072 
16   40 
33.9734   661.9979 
16   40 
33.97344   661.9979 
16   40 
33.9734   661.9986 
16   40 
33.93233   866.7957 
16   40 
33.93237   866.7957 
16   40 
33.93233   866.7965 
16   40 
33.92834   1136.934 
16   40 
33.92838   1136.934 
16   40 
33.92834   1136.935 
16   40 
33.87709   1506.411 
16   40 
33.87712   1506.411 
16   40 
33.87709   1506.413 
16   40 
33.90314   2002.352 
16   40 
33.90318   2002.352 
16   40 
33.90314   2002.354 
16   40 
33.86453   2653.694 
16   40 
33.86457   2653.694 
16   40 
33.86453   2653.696 
16   40 
33.8627   3491.526 
16   40 
33.86273   3491.526 
16   40 
33.8627   3491.529 
16   40 
33.85939   4601.499 
16   40 
33.85942   4601.499 
16   40 
33.85939   4601.504 
16   40 
33.8553   6078.417 
16   40 
33.85533   6078.417 
16   40 
33.8553   6078.423 
16   40 
33.85228   8033.535 
16   40 
33.85231   8033.535 
16   40 
33.85228   8033.543 
16   40 
33.85001   10623.67 
16   40 
33.85005   10623.67 
16   40 
33.85001   10623.68 
16   40 
33.8483   14054.55 
16   40 
33.84833   14054.55 
16   40 
33.8483   14054.56 
16   40 
33.847   18599.48 
16   40 
33.84703   18599.48 
16   40 
33.847   18599.5 
16   40 
33.84602   24618.42 
16   40 
33.84605   24618.42 
16   40 
33.84602   24618.44 
16   40 
33.84528   32600.04 
16   40 
33.84531   32600.04 
16   40 
33.84528   32600.07 
16   40 
33.84472   43162.96 
16   40 
33.84475   43162.96 
16   40 
33.84472   43163 
16   40 
33.8443   57149.81 
16   40 
33.84433   57149.81 
16   40 
33.8443   57149.87 
16   40 
33.84398   75711.47 
16   40 
33.84401   75711.47 
16   40 
33.84398   75711.55 
16   40 
33.84374   100229.4 
16   40 
33.84377   100229.4 
16   40 
33.84374   100229.5 
16   40 
33.84356   132503.2 
16   40 
33.84359   132503.2 
16   40 
33.84356   132503.3 
16   40 
33.84345   165766.3 
16   40 
33.84348   165766.3 
16   40 
33.84345   165766.5 
16   40 
33.84338   199029.5 
16   40 
33.84341   199029.5 
16   40 
33.84338   199029.7 
16   40 
33.84333   232292.6 
16   40 
33.84336   232292.6 
16   40 
33.84333   232292.9 
16   40 
33.84329   265555.8 
16   40 
33.84332   265555.8 
16   40 
33.84329   265556.1 
16   40 
33.84326   298818.9 
16   40 
33.84329   298818.9 
16   40 
33.84326   298819.2 
Fit Mean:  33.84326  Size:  298818.9  Code:  5 
Try Mean:  40  Size:  10000 
16   40 
40   10000 
16   40 
40   10000 
16   40 
40.00004   10000 
16   40 
40   10000.01 
16   40 
39.99414   10000 
16   40 
39.99418   10000 
16   40 
39.99414   10000.01 
16   40 
25.03493   10000 
16   40 
35.15368   10000 
16   40 
35.15372   10000 
16   40 
35.15368   10000.01 
16   40 
32.77483   10000 
16   40 
32.77486   10000 
16   40 
32.77483   10000.01 
16   40 
33.95093   10000 
16   40 
33.95096   10000 
16   40 
33.95093   10000.01 
16   40 
33.85929   10000 
16   40 
33.85932   10000 
16   40 
33.85929   10000.01 
16   40 
33.85274   10000 
16   40 
33.85277   10000 
16   40 
33.85274   10000.01 
16   40 
33.85278   10000 
16   40 
33.85281   10000 
16   40 
33.85278   10000.01 
16   40 
33.85278   10000 
16   40 
33.85281   10000 
16   40 
33.85278   10000.01 
Fit Mean:  33.85278  Size:  10000  Code:  2 
Try Mean:  40  Size:  1000 
16   40 
40   1000 
16   40 
40   1000 
16   40 
40.00004   1000 
16   40 
40   1000.001 
16   40 
39.99442   1000 
16   40 
39.99446   1000 
16   40 
39.99442   1000.001 
16   40 
25.67227   1000.004 
16   40 
35.22418   1000.001 
16   40 
35.22422   1000.001 
16   40 
35.22418   1000.002 
16   40 
32.90904   1000.003 
16   40 
32.90907   1000.003 
16   40 
32.90904   1000.004 
16   40 
34.03521   1000.002 
16   40 
34.03525   1000.002 
16   40 
34.03521   1000.003 
16   40 
33.94741   1000.003 
16   40 
33.94745   1000.003 
16   40 
33.94741   1000.004 
16   40 
33.9413   1000.003 
16   40 
33.94133   1000.003 
16   40 
33.9413   1000.004 
16   40 
33.94133   1000.003 
16   40 
33.94137   1000.003 
16   40 
33.94133   1000.004 
16   40 
33.94176   1000.009 
16   40 
33.9418   1000.009 
16   40 
33.94176   1000.01 
16   40 
33.94223   1000.023 
16   40 
33.94227   1000.023 
16   40 
33.94223   1000.024 
16   40 
33.94313   1000.068 
16   40 
33.94316   1000.068 
16   40 
33.94313   1000.069 
16   40 
33.94449   1000.185 
16   40 
33.94452   1000.185 
16   40 
33.94449   1000.186 
16   40 
33.94672   1000.509 
16   40 
33.94676   1000.509 
16   40 
33.94672   1000.51 
16   40 
33.95027   1001.367 
16   40 
33.9503   1001.367 
16   40 
33.95027   1001.368 
16   40 
33.9559   1003.64 
16   40 
33.95593   1003.64 
16   40 
33.9559   1003.641 
16   40 
33.96461   1009.574 
16   40 
33.96464   1009.574 
16   40 
33.96461   1009.575 
16   40 
33.97753   1024.852 
16   40 
33.97756   1024.852 
16   40 
33.97753   1024.853 
16   40 
33.99483   1063.047 
16   40 
33.99486   1063.047 
16   40 
33.99483   1063.048 
16   40 
34.01298   1154.13 
16   40 
34.01302   1154.13 
16   40 
34.01298   1154.131 
16   40 
34.02008   1360.304 
16   40 
34.02012   1360.304 
16   40 
34.02008   1360.305 
16   40 
33.99179   1803.049 
16   40 
33.99182   1803.049 
16   40 
33.99179   1803.051 
16   40 
33.91394   2568.691 
16   40 
33.91397   2568.691 
16   40 
33.91394   2568.693 
16   40 
33.84891   3305.114 
16   40 
33.84894   3305.114 
16   40 
33.84891   3305.118 
16   40 
33.8268   3785.813 
16   40 
33.82684   3785.813 
16   40 
33.8268   3785.817 
16   40 
33.8142   4576.18 
16   40 
33.81423   4576.18 
16   40 
33.8142   4576.185 
16   40 
33.81851   5912.915 
16   40 
33.81854   5912.915 
16   40 
33.81851   5912.921 
16   40 
33.83897   7828.059 
16   40 
33.83901   7828.059 
16   40 
33.83897   7828.067 
16   40 
33.85631   10046.29 
16   40 
33.85634   10046.29 
16   40 
33.85631   10046.3 
16   40 
33.86367   12683.1 
16   40 
33.86371   12683.1 
16   40 
33.86367   12683.11 
16   40 
33.86232   16558.05 
16   40 
33.86236   16558.05 
16   40 
33.86232   16558.07 
16   40 
33.85358   22189.94 
16   40 
33.85361   22189.94 
16   40 
33.85358   22189.97 
16   40 
33.844   29287.21 
16   40 
33.84404   29287.21 
16   40 
33.844   29287.23 
16   40 
33.83838   37750.63 
16   40 
33.83842   37750.63 
16   40 
33.83838   37750.67 
16   40 
33.83703   49036.56 
16   40 
33.83706   49036.56 
16   40 
33.83703   49036.61 
16   40 
33.83938   64942.03 
16   40 
33.83941   64942.03 
16   40 
33.83938   64942.1 
16   40 
33.84317   86006.88 
16   40 
33.8432   86006.88 
16   40 
33.84317   86006.97 
16   40 
33.84584   112334.7 
16   40 
33.84587   112334.7 
16   40 
33.84584   112334.9 
16   40 
33.84661   146757.5 
16   40 
33.84664   146757.5 
16   40 
33.84661   146757.7 
16   40 
33.84566   194756.1 
16   40 
33.84569   194756.1 
16   40 
33.84566   194756.3 
16   40 
33.84384   259965.1 
16   40 
33.84387   259965.1 
16   40 
33.84384   259965.4 
16   40 
33.84237   340633.3 
16   40 
33.8424   340633.3 
16   40 
33.84237   340633.6 
16   40 
33.84173   444299.7 
16   40 
33.84177   444299.7 
16   40 
33.84173   444300.1 
16   40 
33.84191   587960.9 
16   40 
33.84195   587960.9 
16   40 
33.84191   587961.5 
16   40 
33.84261   797637.8 
16   40 
33.84264   797637.8 
16   40 
33.84261   797638.6 
16   40 
33.8431   947892.3 
16   40 
33.84313   947892.3 
16   40 
33.8431   947893.3 
Fit Mean:  33.8431  Size:  947892.3  Code:  1 
> 
> cat("Final Fit Mean: ", nb_fit_mu, " Size: ", nb_fit_size, " Code: ", nb_fit$code, " Try Size: ", try_size, "\n")
Final Fit Mean:  33.8431  Size:  947892.3  Code:  1  Try Size:  1000 
> 
> ## Fit failed = reset parameters so graphing and output code can recognize this
> if ((nb_fit_mu < 0) || (nb_fit_size < 0) || (nb_fit$code != 1))
+ {
+   nb_fit_mu = 0
+   nb_fit_size = 0
+ }
> 
> 
> ## things can go wrong with fitting and we can still end up with invalid values
> 
> fit_nb = c()
> included_fract = 0
> if (nb_fit_mu > 0)
+ {
+   end_fract = pnbinom(end_i_for_fits, mu = nb_fit_mu, size=nb_fit_size)
+   start_fract = pnbinom(start_i_for_fits, mu = nb_fit_mu, size=nb_fit_size)
+   included_fract = end_fract-start_fract;
+ 
+   if (included_fract >= 0.01) {
+ 
+     ## Adjust so that we are back in full coords before making fit!!
+     if (num_per_bin > 1) 
+     {
+       nb_fit_mu = nb_fit_mu * num_per_bin
+     }
+     fit_nb = dnbinom(0:max(X$coverage), mu = nb_fit_mu, size=nb_fit_size)*inner_total/included_fract;
+   }
+ }
> 
> ## If an insufficient amount of fit was included, then invalidate it
> if (included_fract < 0.01)
+ {
+   nb_fit_mu = 0
+   nb_fit_size = 0
+ }
> 
> f_p <- function(par) {
+ 
+   lambda = par[1];
+ 
+   if (lambda <= 0)
+   {
+     return(0);
+   }
+   
+ 	total <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{	
+     #cat(i, " ", lambda, "\n");
+ 		dist[i] <- dpois(i, lambda=lambda);
+ 		total <- total + dist[i] 
+ 	}
+ 	#print (total)
+ 
+  	l <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{
+ 		l <- l + ((X.for.fits[i]/inner_total)-(dist[i]/total))^2;
+ 	}
+ 	return(l);
+ }
> 
> 
> ## Fit Poisson 
> ## - allow fit to fail and set all params to zero/empty if that is the case
> 
> p_fit = NULL
> try(suppressWarnings(p_fit<-nlm(f_p, c(m), print.level=this.print.level)))
> 
> fit_p = c()
> if (!is.null(p_fit) && (p_fit$estimate[1] > 0))
+ {
+   #print (nb_fit$estimate[1])
+   p_fit_lambda = p_fit$estimate[1];
+   #print(0:max(X$coverage))
+ 
+   end_fract = ppois(end_i_for_fits, lambda = p_fit_lambda)
+   start_fract = ppois(start_i_for_fits, lambda = p_fit_lambda)
+   included_fract = end_fract-start_fract;
+ 
+   ## Adjust so that we are back in full coords before making fit!!
+   if (num_per_bin > 1) 
+   {
+     p_fit_lambda = p_fit_lambda * num_per_bin
+   }
+   fit_p<-dpois(0:max(X$coverage), lambda = p_fit_lambda)*inner_total/included_fract;
+ }
> 
> 
> ## Graphing
> ##
> ## don't graph very high values with very little coverage
> i<-max_i
> while (i <= length(X$n) && X$n[i]>0.01*max_n)
+ {		
+ 	i <- i+1;
+ }
> graph_end_i <-i
> 
> ## Ths leaves enough room to the right of the peak for the legend
> graph_end_i = max(floor(2.2 * max_i), graph_end_i);
> 
> ## graphics settings
> my_pch = 21
> my_col = "black";
> my_col_censored = "red";
> 
> if (pdf_output == 0) {
+   
+   ## bitmap() requires ghostscript to be installed.
+   ## taa=4, gaa=2 options NOT compatible with earlier R versions!
+   ## units = "px" NOT compatible with even earlier R versions!
+   
+   if(!capabilities(what = "png"))
+   {
+     ## fallback to ghostscript
+     bitmap(plot_file, height=6, width=7, type = "png16m", res = 72, pointsize=18)
+   } else {
+     ## use X11 function, which gives better resolution
+     png(plot_file, height=6, width=7, units ="in", res = 72, pointsize=18)
+     par(family="sans")
+   }
+ } else {
+   pdf(plot_file, height=6, width=7)
+   par(family="sans")
+ }
> 
> par(mar=c(5.5,7.5,3,1.5));
> 
> max_y = 0
> if (plot_poisson) {
+ 	max_y = max(X$n, fit_p, fit_nb)
+ } else {
+ 	max_y = max(X$n, fit_nb)
+ }
> 
> plot(0:10, 0:10, type="n", lty="solid", ylim=c(0, max_y)*1.05, xlim=c(0, graph_end_i), lwd=1, xaxs="i", yaxs="i", axes=F, las=1, main="Coverage Distribution at Unique-Only Positions", xlab="Coverage depth (reads)", ylab="", cex.lab=1.2, cex.axis=1.2)
> 
> mtext(side = 2, text = "Number of reference positions", line = 5.5, cex=1.2)
> 
> sciNotation <- function(x, digits = 1) {
+     if (length(x) > 1) {
+         return(append(sciNotation(x[1]), sciNotation(x[-1])))     
+ 	} 
+     if (!x) return(0) 
+ 
+ 	exponent <- floor(log10(x)) 
+     base <- round(x / 10^exponent, digits)     
+ 	as.expression(substitute(base %*% 10^exponent, list(base = base, exponent = exponent))) 
+ }
> 
> #axis(2, cex.lab=1.2, las=1, cex.axis=1.2, labels=T, at=(0:6)*50000)
> axis(2, cex.lab=1.2, las=1, cex.axis=1.2, at = axTicks(2), labels = sciNotation(axTicks(2), 1))
> axis(1, cex.lab=1.2, cex.axis=1.2, labels=T)
> box()
> 
> #graph the coverage as points
> fit_data <- subset(X, (coverage>=start_i) & (coverage<=end_i) );
> points(fit_data$coverage, fit_data$n, pch=my_pch, col=my_col, bg="white", cex=1.2)
> 
> #graph the censored coverage as red points
> cat(start_i, " ", end_i, "\n", sep="")
16 40
> 
> censored_data <- subset(X, (coverage<start_i) | (coverage>end_i) );
> points(censored_data$coverage, censored_data$n, pch=my_pch, col=my_col_censored, bg="white", cex=1.2)
> 
> #graph the poisson fit IF REQUESTED
> if (plot_poisson) {
+ 	lines(0:max(X$coverage), fit_p, lwd=3, lty="22", col="black");
+ }
> 
> #graph the negative binomial fit
> if (nb_fit_mu > 0) {
+   lines(0:max(X$coverage), fit_nb, lwd=3, col="black");
+ }
> 
> if (plot_poisson) {
+ 	legend("topright", c("Coverage distribution", "Censored data", "Negative binomial", "Poisson"), lty=c("blank","blank","solid","22"), lwd=c(1,1,2,2), pch=c(my_pch, my_pch, -1, -1), col=c("black", "red", "black", "black"), bty="n")
+ } else {
+ 	legend("topright", c("Coverage distribution", "Censored data", "Negative binomial"), lty=c("blank","blank","solid"), lwd=c(1,1,2), pch=c(my_pch, my_pch, -1), col=c("black", "red", "black"), bty="n")
+ }
> 
> dev.off()
null device 
          1 
> 
> ## Fit the marginal value that we use for propagating deletions
> 
> if (nb_fit_mu > 0) {
+   cat(nb_fit_size, " ", nb_fit_mu, "\n")
+   deletion_propagation_coverage = suppressWarnings(qnbinom(deletion_propagation_pr_cutoff, size = nb_fit_size, mu = nb_fit_mu))
+ } else {
+   cat("Fallback to calculating off an estimate of just variance = mu + mu^2/size\n")
+   size_estimate = (1/(v-m))*(m*m)
+   cat("Mu estimate=", m," Size estimate =", size_estimate, "\n")
+   deletion_propagation_coverage = suppressWarnings(qnbinom(deletion_propagation_pr_cutoff, size = size_estimate, mu = m))
+   if (is.na(deletion_propagation_coverage) || is.nan(deletion_propagation_coverage) || (deletion_propagation_coverage < 1)) {
+     cat("Double fallback to calculating as just 10% of the mean\n")
+     deletion_propagation_coverage = m * 0.1
+   }
+ }
947892.3   33.8431 
> 
> #Don't allow one read to indicate non-deleted regions
> if (deletion_propagation_coverage < 1) {
+     deletion_propagation_coverage = 1
+ }
> 
> #This works fine with the negative values
> #If we have both low fit coverage and low straight average coverage then we're deleted...
> if ( (nb_fit_mu <= 3) && (m <= 3) ) {
+   deletion_propagation_coverage = -1
+ }
> 
> #print out statistics
> 
> print(nb_fit_size);
[1] 947892.3
> print(nb_fit_mu);
[1] 33.8431
> 
> print(m)
[1] 33.26316
> print(v)
[1] 16.53801
> print(D)
[1] 0.4971871
> 
> print(deletion_propagation_coverage)
[1] 20
> 
> warnings()
> 
