
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> ##
> ## AUTHORS
> ##
> ## Jeffrey E. Barrick <jeffrey.e.barrick@gmail.com>
> ##
> ## LICENSE AND COPYRIGHT
> ##
> ## Copyright (c) 2008-2010 Michigan State University
> ## Copyright (c) 2011-2022 The University of Texas at Austin
> ##
> ## breseq is free software; you can redistribute it and/or modify it under the
> ## terms the GNU General Public License as published by the Free Software
> ## Foundation; either version 1, or (at your option) any later version.
> ##
> ##
> 
> ## Arguments:
> ##   distribution_file=/path/to/input 
> ##   plot_file=/path/to/output 
> ##   deletion_propagation_pr_cutoff=float
> ##   plot_poisson=0 or 1
> ##   pdf_output=0 or 1
> 
> ## Returns these values printed out to output log
> ## 
> ##  1. print(nb_fit_size); # 0 if fit failed
> ##  2. print(nb_fit_mu);   # 0 if fit failed
> ##  3. print(m)q
> ##  4. print(v)
> ##  5. print(D)
> ##  6. print(deletion_propagation_coverage)
> ##     -1 if it was <1 after fitting (implying reference sequence is deleted)
> ##
> 
> plot_poisson = 0;
> pdf_output = 1;
> 
> this.print.level = 0
> #this.print.level = 2
> 
> for (e in commandArgs(TRUE)) {
+   ta = strsplit(e,"=",fixed=TRUE)[[1]]
+   if(length(ta)>1) {
+     temp = ta[2]
+     assign(ta[1],temp)
+     cat("assigned ",ta[1]," the value of |",temp,"|\n")
+   } else {
+     assign(ta[[1]][1],TRUE)
+     cat("assigned ",ta[1]," the value of TRUE\n")
+   }
+ }
assigned  distribution_file  the value of | p3_out/07_error_calibration/89.unique_only_coverage_distribution.tab |
assigned  plot_file  the value of | p3_out/output/calibration/89.unique_coverage.pdf |
assigned  deletion_propagation_pr_cutoff  the value of | 0.00276079 |
> 
> deletion_propagation_pr_cutoff = as.numeric(deletion_propagation_pr_cutoff);
> 
> ## initialize values to be filled in
> nb_fit_mu = 0
> nb_fit_size = 0
> m = 0
> v = 0
> D = 0
> deletion_propagation_coverage = -1
> 
> min_fraction_included_in_nb_fit = 0.01
> 
> #load data
> X<-read.table(distribution_file, header=T)
> 
> #table might be empty
> if (nrow(X) == 0)
+ {
+   #print out statistics
+   
+   print(nb_fit_size);
+   print(nb_fit_mu);
+   
+   print(m)
+   print(v)
+   print(D)
+   
+   print(deletion_propagation_coverage)
+   
+   q()
+ }
> 
> #create the distribution vector and fit
> Y<-rep(X$coverage, X$n)
> m<-mean(Y)
> v<-var(Y)
> D<-v/m
> 
> ###
> ## Smooth the distribution with a moving average window of size 5
> ## so that we can more reliably find it's maximum value
> ###
> 
> ma5 = c(1, 1, 1, 1, 1)/5;
> 
> ## filtering fails if there are too few points
> if (nrow(X) >= 5) {
+   X$ma = filter(X$n, ma5)
+ } else {
+ 	X$ma = X$n
+ }
> 
> i<-0
> max_n <- 0;
> min_i <- max( trunc(m/4), 1 ); #prevents zero for pathological distributions
> max_i <- i;
> for (i in min_i:length(X$ma))
+ {		
+   #cat(i, "\n")
+ 	if (!is.na(X$ma[i]) && (X$ma[i] > max_n))
+ 	{
+ 		max_n = X$ma[i];
+ 		max_i = i;
+ 	}
+ }
> 
> ##
> # Censor data on the right and left of the maximum
> ##
> 
> start_i = max(floor(max_i*0.5), 1);
> end_i = min(ceiling(max_i*1.5), length(X$ma));
> 
> if (start_i == end_i)
+ {
+   print(nb_fit_size);
+   print(nb_fit_mu);
+   
+   print(m)
+   print(v)
+   print(D)
+   
+   print(deletion_propagation_coverage)
+   
+   q()
+ }
> 
> cat("Fitting from coverage of ", start_i, " to ", end_i, ".\n", sep="")
Fitting from coverage of 22 to 51.
> 
> ##
> # Coarse grain so that we are only fitting a number of bins that is 1000-2000
> #
> # The later adjustment for doing the fits this way is to multiply the means
> # of the negative binomial and poisson distributions by the binning number.
> # (The size parameter of the negative binomial doesn't need to be adjusted.)
> ##
> 
> 
> num_per_bin = trunc((end_i - start_i) / 1000)
> 
> if (num_per_bin > 1) 
+ {
+   cat("Coarse-graining for fits\n")
+   start_i_for_fits = trunc(start_i/num_per_bin)
+   end_i_for_fits = ceiling(end_i/num_per_bin)
+   num_bins = end_i - start_i  + 1
+   cat("Fitting from coverage in adjusted bins ", start_i_for_fits, " to ", end_i_for_fits, ".\n", sep="")
+   cat("Number of bins ", num_bins, ". Each bin has ", num_per_bin, " coverage values.\n", sep="")
+ 
+   # Create a new vector where we've added together values in bins
+   X.for.fits = vector("double", end_i_for_fits)
+   for (i in start_i_for_fits:end_i_for_fits)
+   {
+     for (j in 1:num_per_bin)
+     {
+       if (i*num_per_bin+j <= length(X$n))
+       {
+         X.for.fits[i] = X.for.fits[i] + X$n[i*num_per_bin+j]
+       }
+     }
+   }
+ 
+ } else {
+   ## AVOID num_per_bin equalling zero!!
+   X.for.fits = X$n[1:end_i]
+   num_per_bin = 1
+   start_i_for_fits = start_i
+   end_i_for_fits = end_i
+ }
> 
> 
> ##
> # Now perform negative binomial fitting to the censored data
> ##
> 
> inner_total<-0;
> for (i in start_i_for_fits:end_i_for_fits)
+ {
+ 	inner_total = inner_total + X.for.fits[i]; 
+ }
> # Yes: it's correct to use X here because we want the overall total total
> total_total<-sum(X$n);
> 
> ## let's preconstruct these for speed
> dist = vector("double", end_i_for_fits)
> 
> f_nb <- function(par) {
+ 
+ 	mu = par[1];
+ 	size = par[2];
+ 
+   if ((mu <= 0) || (size <= 0))
+   {
+     return(0);
+   }
+   
+   cat(start_i_for_fits, " ", end_i_for_fits, "\n");
+   cat(mu, " ", size, "\n");
+   
+ 	dist<-c()
+ 	total <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{	
+ 		dist[i] <- dnbinom(i, size=size, mu=mu);
+ 		total <- total + dist[i] 
+ 	}
+ 	#print (mu, size)
+ 
+  	l <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{
+ 		l <- l + ((X.for.fits[i]/inner_total)-(dist[i]/total))^2;
+ 	}
+ 	return(l);
+ }
> 
> 
> 
> ## Fit negative binomial 
> ## - allow fit to fail and set all params to zero/empty if that is the case
> nb_fit = NULL
> ## as.numeric prevents overflow in sums involving integers
> mean_estimate = sum((as.numeric(1:end_i_for_fits)*as.numeric(X.for.fits)))/sum(as.numeric(X.for.fits))
> 
> nb_fit_mu = -1
> nb_fit_size = -1
> try_size = 100000
> try_means_index = 1
> #This is a list of different means to test <-  sometimes the actual mean doesn't lead to a fit
> try_means = c(mean_estimate, 
+               end_i_for_fits, 
+               start_i_for_fits, 
+               1*(end_i_for_fits + start_i_for_fits)/4,
+               2*(end_i_for_fits + start_i_for_fits)/4,
+               3*(end_i_for_fits + start_i_for_fits)/4
+               )
>               
>               
> nb_fit = c()
> 
> while ( ((nb_fit_mu < 0) || (nb_fit_size < 0) || (nb_fit$code != 1)) && (try_size > 0.001) && (try_means_index <= length(try_means)))
+ {
+   try_size = try_size / 10
+   try_mean = try_means[try_means_index]
+ 
+   ## SIZE ESTIMATE from the censored data can be negative, so try various values instead
+   cat("Try Mean: ", try_mean, " Size: ", try_size, "\n")
+ 
+   try( suppressWarnings(nb_fit<-nlm(f_nb, c(try_mean, try_size), iterlim=1000, print.level=this.print.level)) )
+ 
+   nb_fit_mu = nb_fit$estimate[1];
+   nb_fit_size = nb_fit$estimate[2];
+ 
+   cat("Fit Mean: ", nb_fit_mu, " Size: ", nb_fit_size, " Code: ", nb_fit$code, "\n")
+   
+   if (try_size <= 0.001) {
+     try_size = 100000
+     try_means_index = try_means_index + 1
+   }
+ }
Try Mean:  39.35922  Size:  10000 
22   51 
39.35922   10000 
22   51 
39.35922   10000 
22   51 
39.35926   10000 
22   51 
39.35922   10000.01 
22   51 
39.36534   10000 
22   51 
39.36538   10000 
22   51 
39.36534   10000.01 
22   51 
44.72953   10000 
22   51 
44.72958   10000 
22   51 
44.72953   10000.01 
22   51 
44.02904   10000 
22   51 
44.02908   10000 
22   51 
44.02904   10000.01 
22   51 
44.01487   10000 
22   51 
44.01491   10000 
22   51 
44.01487   10000.01 
22   51 
44.01515   10000 
22   51 
44.01519   10000 
22   51 
44.01515   10000.01 
22   51 
44.01515   10000 
22   51 
44.01519   10000 
22   51 
44.01515   10000.01 
Fit Mean:  44.01515  Size:  10000  Code:  2 
Try Mean:  39.35922  Size:  1000 
22   51 
39.35922   1000 
22   51 
39.35922   1000 
22   51 
39.35926   1000 
22   51 
39.35922   1000.001 
22   51 
39.36519   1000 
22   51 
39.36522   1000 
22   51 
39.36519   1000.001 
22   51 
44.73991   1000.001 
22   51 
44.73995   1000.001 
22   51 
44.73991   1000.002 
22   51 
44.10991   1000.001 
22   51 
44.10996   1000.001 
22   51 
44.10991   1000.002 
22   51 
44.0903   1000.001 
22   51 
44.09034   1000.001 
22   51 
44.0903   1000.002 
22   51 
44.09067   1000.002 
22   51 
44.09071   1000.002 
22   51 
44.09067   1000.003 
22   51 
44.09085   1000.002 
22   51 
44.09089   1000.002 
22   51 
44.09085   1000.003 
22   51 
44.0914   1000.005 
22   51 
44.09145   1000.005 
22   51 
44.0914   1000.006 
22   51 
44.09213   1000.014 
22   51 
44.09218   1000.014 
22   51 
44.09213   1000.015 
22   51 
44.09342   1000.039 
22   51 
44.09346   1000.039 
22   51 
44.09342   1000.04 
22   51 
44.09543   1000.105 
22   51 
44.09548   1000.105 
22   51 
44.09543   1000.106 
22   51 
44.09872   1000.287 
22   51 
44.09876   1000.287 
22   51 
44.09872   1000.288 
22   51 
44.10399   1000.766 
22   51 
44.10404   1000.766 
22   51 
44.10399   1000.767 
22   51 
44.11246   1002.033 
22   51 
44.11251   1002.033 
22   51 
44.11246   1002.034 
22   51 
44.12592   1005.35 
22   51 
44.12597   1005.35 
22   51 
44.12592   1005.351 
22   51 
44.14689   1013.959 
22   51 
44.14693   1013.959 
22   51 
44.14689   1013.96 
22   51 
44.17799   1035.85 
22   51 
44.17804   1035.85 
22   51 
44.17799   1035.851 
22   51 
44.21923   1089.351 
22   51 
44.21928   1089.351 
22   51 
44.21923   1089.353 
22   51 
44.26093   1211.875 
22   51 
44.26098   1211.875 
22   51 
44.26093   1211.876 
22   51 
44.27467   1473.302 
22   51 
44.27472   1473.302 
22   51 
44.27467   1473.303 
22   51 
44.2134   1982.562 
22   51 
44.21344   1982.562 
22   51 
44.2134   1982.564 
22   51 
44.08064   2739.849 
22   51 
44.08068   2739.849 
22   51 
44.08064   2739.852 
22   51 
43.98541   3448.521 
22   51 
43.98546   3448.521 
22   51 
43.98541   3448.525 
22   51 
43.94733   4063.788 
22   51 
43.94738   4063.788 
22   51 
43.94733   4063.792 
22   51 
43.93358   5075.102 
22   51 
43.93362   5075.102 
22   51 
43.93358   5075.107 
22   51 
43.95635   6710.025 
22   51 
43.95639   6710.025 
22   51 
43.95635   6710.032 
22   51 
44.00073   8918.553 
22   51 
44.00078   8918.553 
22   51 
44.00073   8918.562 
22   51 
44.03158   11372.21 
22   51 
44.03163   11372.21 
22   51 
44.03158   11372.22 
22   51 
44.04387   14374.97 
22   51 
44.04392   14374.97 
22   51 
44.04387   14374.98 
22   51 
44.03957   18861.16 
22   51 
44.03961   18861.16 
22   51 
44.03957   18861.18 
22   51 
44.02195   25248.27 
22   51 
44.022   25248.27 
22   51 
44.02195   25248.29 
22   51 
44.00437   33139.38 
22   51 
44.00442   33139.38 
22   51 
44.00437   33139.41 
22   51 
43.99477   42578.67 
22   51 
43.99481   42578.67 
22   51 
43.99477   42578.72 
22   51 
43.9933   55432.67 
22   51 
43.99334   55432.67 
22   51 
43.9933   55432.73 
22   51 
43.9989   73646.54 
22   51 
43.99894   73646.54 
22   51 
43.9989   73646.61 
22   51 
44.00687   97449.5 
22   51 
44.00692   97449.5 
22   51 
44.00687   97449.6 
22   51 
44.01235   126898.2 
22   51 
44.01239   126898.2 
22   51 
44.01235   126898.3 
22   51 
44.01402   165565.3 
22   51 
44.01406   165565.3 
22   51 
44.01402   165565.5 
22   51 
44.01217   219233.5 
22   51 
44.01221   219233.5 
22   51 
44.01217   219233.7 
22   51 
44.00848   291348.4 
22   51 
44.00852   291348.4 
22   51 
44.00848   291348.7 
22   51 
44.00533   383771.1 
22   51 
44.00537   383771.1 
22   51 
44.00533   383771.4 
22   51 
44.00396   499872.3 
22   51 
44.00401   499872.3 
22   51 
44.00396   499872.8 
22   51 
44.00432   661637.3 
22   51 
44.00437   661637.3 
22   51 
44.00432   661638 
22   51 
44.00583   874073.6 
22   51 
44.00587   874073.6 
22   51 
44.00583   874074.4 
22   51 
44.00738   1142698 
22   51 
44.00743   1142698 
22   51 
44.00738   1142699 
22   51 
44.00832   1502801 
22   51 
44.00837   1502801 
22   51 
44.00832   1502802 
22   51 
44.00866   2173702 
22   51 
44.00871   2173702 
22   51 
44.00866   2173704 
22   51 
44.00804   2746232 
22   51 
44.00809   2746232 
22   51 
44.00804   2746234 
22   51 
44.00715   3415906 
22   51 
44.00719   3415906 
22   51 
44.00715   3415910 
22   51 
44.00675   3948200 
22   51 
44.0068   3948200 
22   51 
44.00675   3948204 
22   51 
44.00672   4267757 
22   51 
44.00676   4267757 
22   51 
44.00672   4267762 
22   51 
44.0067   4600320 
22   51 
44.00674   4600320 
22   51 
44.0067   4600324 
22   51 
44.00662   5080820 
22   51 
44.00667   5080820 
22   51 
44.00662   5080825 
22   51 
44.00678   5095436 
22   51 
44.00682   5095436 
22   51 
44.00678   5095441 
22   51 
44.0068   5811519 
22   51 
44.00685   5811519 
22   51 
44.0068   5811524 
22   51 
44.00687   5941145 
22   51 
44.00692   5941145 
22   51 
44.00687   5941151 
22   51 
44.0069   5922121 
22   51 
44.00688   5939243 
22   51 
44.00687   5940955 
22   51 
44.00687   5941126 
22   51 
44.00687   5941143 
22   51 
44.01127   5941145 
22   51 
44.00247   5941145 
22   51 
44.00687   5941739 
22   51 
44.00687   5940551 
22   51 
44.00699   6187997 
22   51 
44.01139   6187997 
22   51 
44.00259   6187997 
22   51 
44.00699   6188616 
22   51 
44.00699   6187378 
22   51 
44.00705   6414985 
22   51 
44.01145   6414985 
22   51 
44.00265   6414985 
22   51 
44.00705   6415626 
22   51 
44.00705   6414343 
22   51 
44.00707   6627789 
22   51 
44.01147   6627789 
22   51 
44.00267   6627789 
22   51 
44.00707   6628452 
22   51 
44.00707   6627126 
22   51 
44.00711   7628564 
22   51 
44.01151   7628564 
22   51 
44.00271   7628564 
22   51 
44.00711   7629326 
22   51 
44.00711   7627801 
22   51 
44.00711   8629338 
22   51 
44.01151   8629338 
22   51 
44.00271   8629338 
22   51 
44.00711   8630201 
22   51 
44.00711   8628475 
22   51 
44.00709   9630112 
22   51 
44.01149   9630112 
22   51 
44.00269   9630112 
22   51 
44.00709   9631075 
22   51 
44.00709   9629149 
22   51 
44.00707   10630886 
22   51 
44.01147   10630886 
22   51 
44.00266   10630886 
22   51 
44.00707   10631949 
22   51 
44.00707   10629823 
22   51 
44.00704   11631661 
22   51 
44.01144   11631661 
22   51 
44.00264   11631661 
22   51 
44.00704   11632824 
22   51 
44.00704   11630497 
Fit Mean:  44.00704  Size:  11631661  Code:  5 
Try Mean:  39.35922  Size:  100 
22   51 
39.35922   100 
22   51 
39.35922   100 
22   51 
39.35926   100 
22   51 
39.35922   100.0001 
22   51 
39.36405   100 
22   51 
39.36408   100 
22   51 
39.36405   100.0001 
22   51 
45.05329   100.1087 
22   51 
45.05333   100.1087 
22   51 
45.05329   100.1088 
22   51 
44.9865   100.1348 
22   51 
44.98655   100.1348 
22   51 
44.9865   100.1349 
22   51 
44.96396   100.1768 
22   51 
44.96401   100.1768 
22   51 
44.96396   100.1769 
22   51 
44.91481   100.3707 
22   51 
44.91485   100.3707 
22   51 
44.91481   100.3708 
22   51 
44.8411   100.9084 
22   51 
44.84114   100.9084 
22   51 
44.8411   100.9085 
22   51 
44.71629   102.4545 
22   51 
44.71634   102.4545 
22   51 
44.71629   102.4546 
22   51 
44.52668   106.3556 
22   51 
44.52672   106.3556 
22   51 
44.52668   106.3557 
22   51 
44.27423   115.3102 
22   51 
44.27428   115.3102 
22   51 
44.27423   115.3103 
22   51 
44.03092   133.2543 
22   51 
44.03096   133.2543 
22   51 
44.03092   133.2544 
22   51 
43.93626   166.987 
22   51 
43.93631   166.987 
22   51 
43.93626   166.9872 
22   51 
44.12635   221.2709 
22   51 
44.12639   221.2709 
22   51 
44.12635   221.2711 
22   51 
44.30762   286.7466 
22   51 
44.30766   286.7466 
22   51 
44.30762   286.7469 
22   51 
44.32066   369.3605 
22   51 
44.3207   369.3605 
22   51 
44.32066   369.3609 
22   51 
44.20319   498.1648 
22   51 
44.20323   498.1648 
22   51 
44.20319   498.1653 
22   51 
44.07969   664.4916 
22   51 
44.07974   664.4916 
22   51 
44.07969   664.4923 
22   51 
44.02739   871.5391 
22   51 
44.02743   871.5391 
22   51 
44.02739   871.54 
22   51 
44.02963   1152.272 
22   51 
44.02967   1152.272 
22   51 
44.02963   1152.273 
22   51 
44.04471   1523.179 
22   51 
44.04475   1523.179 
22   51 
44.04471   1523.18 
22   51 
44.04565   2014.266 
22   51 
44.04569   2014.266 
22   51 
44.04565   2014.268 
22   51 
44.03471   2670.789 
22   51 
44.03475   2670.789 
22   51 
44.03471   2670.792 
22   51 
44.02331   3540.247 
22   51 
44.02336   3540.247 
22   51 
44.02331   3540.251 
22   51 
44.01709   4689.608 
22   51 
44.01714   4689.608 
22   51 
44.01709   4689.612 
22   51 
44.01489   6211.803 
22   51 
44.01494   6211.803 
22   51 
44.01489   6211.81 
22   51 
44.01387   8228.142 
22   51 
44.01391   8228.142 
22   51 
44.01387   8228.15 
22   51 
44.0126   10899.82 
22   51 
44.01264   10899.82 
22   51 
44.0126   10899.83 
22   51 
44.01115   14439.72 
22   51 
44.0112   14439.72 
22   51 
44.01115   14439.74 
22   51 
44.00995   19129.29 
22   51 
44.00999   19129.29 
22   51 
44.00995   19129.31 
22   51 
44.00913   25341.07 
22   51 
44.00917   25341.07 
22   51 
44.00913   25341.1 
22   51 
44.0086   33569.89 
22   51 
44.00865   33569.89 
22   51 
44.0086   33569.92 
22   51 
44.00823   44472.3 
22   51 
44.00827   44472.3 
22   51 
44.00823   44472.35 
22   51 
44.00792   58911.02 
22   51 
44.00797   58911.02 
22   51 
44.00792   58911.08 
22   51 
44.00768   78047.66 
22   51 
44.00772   78047.66 
22   51 
44.00768   78047.74 
22   51 
44.00749   103379.1 
22   51 
44.00754   103379.1 
22   51 
44.00749   103379.2 
22   51 
44.00735   136933 
22   51 
44.0074   136933 
22   51 
44.00735   136933.1 
22   51 
44.00725   181433.6 
22   51 
44.0073   181433.6 
22   51 
44.00725   181433.8 
22   51 
44.00718   240394.2 
22   51 
44.00722   240394.2 
22   51 
44.00718   240394.4 
22   51 
44.00712   318350.2 
22   51 
44.00716   318350.2 
22   51 
44.00712   318350.6 
22   51 
44.00707   420516.6 
22   51 
44.00712   420516.6 
22   51 
44.00707   420517.1 
22   51 
44.00705   527983.6 
22   51 
44.00709   527983.6 
22   51 
44.00705   527984.1 
22   51 
44.00703   635450.6 
22   51 
44.00707   635450.6 
22   51 
44.00703   635451.2 
22   51 
44.00702   742917.5 
22   51 
44.00706   742917.5 
22   51 
44.00702   742918.3 
22   51 
44.00701   850384.5 
22   51 
44.00705   850384.5 
22   51 
44.00701   850385.3 
22   51 
44.007   957851.5 
22   51 
44.00705   957851.5 
22   51 
44.007   957852.4 
Fit Mean:  44.007  Size:  957851.5  Code:  5 
Try Mean:  39.35922  Size:  10 
22   51 
39.35922   10 
22   51 
39.35922   10 
22   51 
39.35926   10 
22   51 
39.35922   10.00001 
22   51 
39.36125   10.00077 
22   51 
39.36129   10.00077 
22   51 
39.36125   10.00078 
22   51 
80.36534   53.75706 
22   51 
52.16745   23.66653 
22   51 
52.16751   23.66653 
22   51 
52.16745   23.66655 
22   51 
50.31338   22.45228 
22   51 
50.31343   22.45228 
22   51 
50.31338   22.4523 
22   51 
50.13962   23.33 
22   51 
50.13967   23.33 
22   51 
50.13962   23.33002 
22   51 
42.32772   47.91478 
22   51 
46.91404   33.48119 
22   51 
46.91409   33.48119 
22   51 
46.91404   33.48122 
22   51 
44.50486   46.37153 
22   51 
44.50491   46.37153 
22   51 
44.50486   46.37157 
22   51 
45.64211   51.83976 
22   51 
45.64215   51.83976 
22   51 
45.64211   51.83981 
22   51 
45.64616   68.2599 
22   51 
45.6462   68.2599 
22   51 
45.64616   68.25996 
22   51 
44.75726   95.6014 
22   51 
44.7573   95.6014 
22   51 
44.75726   95.6015 
22   51 
44.39398   128.5821 
22   51 
44.39402   128.5821 
22   51 
44.39398   128.5823 
22   51 
44.49059   170.8583 
22   51 
44.49063   170.8583 
22   51 
44.49059   170.8584 
22   51 
44.25141   230.133 
22   51 
44.25145   230.133 
22   51 
44.25141   230.1332 
22   51 
44.27012   307.0737 
22   51 
44.27016   307.0737 
22   51 
44.27012   307.0741 
22   51 
44.13118   410.1581 
22   51 
44.13123   410.1581 
22   51 
44.13118   410.1586 
22   51 
44.16558   546.2314 
22   51 
44.16562   546.2314 
22   51 
44.16558   546.232 
22   51 
44.06609   728.3606 
22   51 
44.06613   728.3606 
22   51 
44.06609   728.3613 
22   51 
44.09619   968.3902 
22   51 
44.09624   968.3902 
22   51 
44.09619   968.3912 
22   51 
44.04304   1286.47 
22   51 
44.04308   1286.47 
22   51 
44.04304   1286.471 
22   51 
44.053   1707.037 
22   51 
44.05304   1707.037 
22   51 
44.053   1707.038 
22   51 
44.03017   2262.928 
22   51 
44.03021   2262.928 
22   51 
44.03017   2262.93 
22   51 
44.0315   2999.816 
22   51 
44.03155   2999.816 
22   51 
44.0315   2999.819 
22   51 
44.02102   3974.894 
22   51 
44.02106   3974.894 
22   51 
44.02102   3974.898 
22   51 
44.02045   5267.168 
22   51 
44.0205   5267.168 
22   51 
44.02045   5267.173 
22   51 
44.01522   6978.39 
22   51 
44.01527   6978.39 
22   51 
44.01522   6978.397 
22   51 
44.01448   9245.649 
22   51 
44.01453   9245.649 
22   51 
44.01448   9245.658 
22   51 
44.01175   12248.72 
22   51 
44.0118   12248.72 
22   51 
44.01175   12248.74 
22   51 
44.01118   16227.17 
22   51 
44.01122   16227.17 
22   51 
44.01118   16227.18 
22   51 
44.00972   21497.38 
22   51 
44.00976   21497.38 
22   51 
44.00972   21497.4 
22   51 
44.00933   28478.74 
22   51 
44.00938   28478.74 
22   51 
44.00933   28478.77 
22   51 
44.00854   37727.05 
22   51 
44.00858   37727.05 
22   51 
44.00854   37727.08 
22   51 
44.00829   49979.31 
22   51 
44.00833   49979.31 
22   51 
44.00829   49979.36 
22   51 
44.00786   66211.08 
22   51 
44.0079   66211.08 
22   51 
44.00786   66211.15 
22   51 
44.0077   87713.37 
22   51 
44.00775   87713.37 
22   51 
44.0077   87713.46 
22   51 
44.00746   116167.7 
22   51 
44.00751   116167.7 
22   51 
44.00746   116167.8 
22   51 
44.00737   153900.4 
22   51 
44.00742   153900.4 
22   51 
44.00737   153900.6 
22   51 
44.00726   194510.1 
22   51 
44.00731   194510.1 
22   51 
44.00726   194510.3 
22   51 
44.00722   235119.8 
22   51 
44.00726   235119.8 
22   51 
44.00722   235120.1 
22   51 
44.00718   275729.6 
22   51 
44.00722   275729.6 
22   51 
44.00718   275729.8 
22   51 
44.00715   316339.3 
22   51 
44.00719   316339.3 
22   51 
44.00715   316339.6 
22   51 
44.00713   356949 
22   51 
44.00717   356949 
22   51 
44.00713   356949.3 
Fit Mean:  44.00713  Size:  356949  Code:  5 
Try Mean:  39.35922  Size:  1 
22   51 
39.35922   1 
22   51 
39.35922   1 
22   51 
39.35926   1 
22   51 
39.35922   1.000001 
22   51 
39.35956   1.002285 
22   51 
39.3596   1.002285 
22   51 
39.35956   1.002286 
22   51 
56.6029   26.90038 
22   51 
56.60296   26.90038 
22   51 
56.6029   26.90041 
22   51 
50.20955   19.01327 
22   51 
50.2096   19.01327 
22   51 
50.20955   19.01329 
22   51 
51.6216   21.17341 
22   51 
51.62165   21.17341 
22   51 
51.6216   21.17343 
22   51 
51.4984   21.47033 
22   51 
51.49845   21.47033 
22   51 
51.4984   21.47035 
Fit Mean:  -91.17108  Size:  332.9485  Code:  1 
Try Mean:  39.35922  Size:  0.1 
22   51 
39.35922   0.1 
22   51 
39.35922   0.1 
22   51 
39.35926   0.1 
22   51 
39.35922   0.100001 
22   51 
39.35926   0.1026227 
22   51 
39.3593   0.1026227 
22   51 
39.35926   0.1026237 
22   51 
45.44187   11.91448 
22   51 
45.44192   11.91448 
22   51 
45.44187   11.91449 
22   51 
59.02485   31.38889 
22   51 
51.83114   21.075 
22   51 
51.83119   21.075 
22   51 
51.83114   21.07502 
22   51 
51.60542   21.10403 
22   51 
51.60547   21.10403 
22   51 
51.60542   21.10405 
22   51 
49.03493   23.08984 
22   51 
49.03498   23.08984 
22   51 
49.03493   23.08986 
22   51 
47.72683   25.70577 
22   51 
47.72688   25.70577 
22   51 
47.72683   25.70579 
22   51 
46.18204   33.07649 
22   51 
46.18209   33.07649 
22   51 
46.18204   33.07652 
22   51 
46.13951   43.95257 
22   51 
46.13956   43.95257 
22   51 
46.13951   43.95261 
22   51 
45.20006   60.67663 
22   51 
45.2001   60.67663 
22   51 
45.20006   60.67669 
22   51 
45.42236   83.50952 
22   51 
45.4224   83.50952 
22   51 
45.42236   83.5096 
22   51 
43.91245   123.407 
22   51 
43.91249   123.407 
22   51 
43.91245   123.4071 
22   51 
44.43349   141.8021 
22   51 
44.43354   141.8021 
22   51 
44.43349   141.8022 
22   51 
44.53082   187.916 
22   51 
44.53087   187.916 
22   51 
44.53082   187.9162 
22   51 
44.3124   251.3457 
22   51 
44.31244   251.3457 
22   51 
44.3124   251.346 
22   51 
44.16967   337.7232 
22   51 
44.16972   337.7232 
22   51 
44.16967   337.7235 
22   51 
44.14659   447.1152 
22   51 
44.14663   447.1152 
22   51 
44.14659   447.1156 
22   51 
44.11602   593.5114 
22   51 
44.11607   593.5114 
22   51 
44.11602   593.512 
22   51 
44.08857   787.3684 
22   51 
44.08861   787.3684 
22   51 
44.08857   787.3691 
22   51 
44.06911   1044.244 
22   51 
44.06915   1044.244 
22   51 
44.06911   1044.245 
22   51 
44.05358   1384.407 
22   51 
44.05362   1384.407 
22   51 
44.05358   1384.408 
22   51 
44.04239   1835.021 
22   51 
44.04244   1835.021 
22   51 
44.04239   1835.023 
22   51 
44.03353   2431.897 
22   51 
44.03357   2431.897 
22   51 
44.03353   2431.899 
22   51 
44.02717   3222.565 
22   51 
44.02721   3222.565 
22   51 
44.02717   3222.568 
22   51 
44.02209   4269.955 
22   51 
44.02213   4269.955 
22   51 
44.02209   4269.96 
22   51 
44.01848   5657.422 
22   51 
44.01853   5657.422 
22   51 
44.01848   5657.428 
22   51 
44.01556   7495.42 
22   51 
44.0156   7495.42 
22   51 
44.01556   7495.428 
22   51 
44.01353   9930.22 
22   51 
44.01358   9930.22 
22   51 
44.01353   9930.23 
22   51 
44.01184   13155.67 
22   51 
44.01188   13155.67 
22   51 
44.01184   13155.68 
22   51 
44.01071   17428.41 
22   51 
44.01075   17428.41 
22   51 
44.01071   17428.43 
22   51 
44.00972   23088.74 
22   51 
44.00976   23088.74 
22   51 
44.00972   23088.77 
22   51 
44.0091   30586.24 
22   51 
44.00914   30586.24 
22   51 
44.0091   30586.27 
22   51 
44.00851   40520.31 
22   51 
44.00855   40520.31 
22   51 
44.00851   40520.35 
22   51 
44.00818   53678.61 
22   51 
44.00822   53678.61 
22   51 
44.00818   53678.67 
22   51 
44.00782   71107.54 
22   51 
44.00787   71107.54 
22   51 
44.00782   71107.62 
22   51 
44.00765   94199.36 
22   51 
44.0077   94199.36 
22   51 
44.00765   94199.46 
22   51 
44.00743   124750.9 
22   51 
44.00748   124750.9 
22   51 
44.00743   124751 
22   51 
44.00736   164110.2 
22   51 
44.0074   164110.2 
22   51 
44.00736   164110.4 
22   51 
44.00725   203469.6 
22   51 
44.0073   203469.6 
22   51 
44.00725   203469.8 
22   51 
44.00722   242828.9 
22   51 
44.00726   242828.9 
22   51 
44.00722   242829.2 
22   51 
44.00717   282188.3 
22   51 
44.00722   282188.3 
22   51 
44.00717   282188.6 
22   51 
44.00715   321547.6 
22   51 
44.00719   321547.6 
22   51 
44.00715   321548 
Fit Mean:  44.00715  Size:  321547.6  Code:  5 
Try Mean:  39.35922  Size:  0.01 
22   51 
39.35922   0.01 
22   51 
39.35922   0.01 
22   51 
39.35926   0.01 
22   51 
39.35922   0.010001 
22   51 
39.35923   0.01266003 
22   51 
39.35927   0.01266003 
22   51 
39.35923   0.01266103 
22   51 
44.90918   11.17942 
22   51 
44.90923   11.17942 
22   51 
44.90918   11.17943 
22   51 
59.52592   32.517 
22   51 
51.79305   21.22853 
22   51 
51.7931   21.22853 
22   51 
51.79305   21.22855 
22   51 
51.55249   21.22233 
22   51 
51.55254   21.22233 
22   51 
51.55249   21.22235 
22   51 
49.63273   22.4927 
22   51 
49.63278   22.4927 
22   51 
49.63273   22.49272 
22   51 
47.79888   25.2427 
22   51 
47.79893   25.2427 
22   51 
47.79888   25.24273 
22   51 
46.86468   29.10592 
22   51 
46.86473   29.10592 
22   51 
46.86468   29.10595 
22   51 
46.22222   40.99721 
22   51 
46.22227   40.99721 
22   51 
46.22222   40.99725 
22   51 
45.62181   54.68794 
22   51 
45.62185   54.68794 
22   51 
45.62181   54.68799 
22   51 
45.19082   75.57381 
22   51 
45.19086   75.57381 
22   51 
45.19082   75.57389 
22   51 
44.61571   103.3876 
22   51 
44.61575   103.3876 
22   51 
44.61571   103.3877 
22   51 
45.69428   150.4457 
22   51 
45.69433   150.4457 
22   51 
45.69428   150.4458 
22   51 
44.27299   202.2896 
22   51 
44.27303   202.2896 
22   51 
44.27299   202.2898 
22   51 
44.1405   236.1205 
22   51 
44.14054   236.1205 
22   51 
44.1405   236.1208 
22   51 
44.20678   327.4881 
22   51 
44.20682   327.4881 
22   51 
44.20678   327.4884 
22   51 
44.1654   426.1153 
22   51 
44.16544   426.1153 
22   51 
44.1654   426.1158 
22   51 
44.11945   570.8092 
22   51 
44.1195   570.8092 
22   51 
44.11945   570.8097 
22   51 
44.09442   755.0916 
22   51 
44.09446   755.0916 
22   51 
44.09442   755.0924 
22   51 
44.07117   1002.733 
22   51 
44.07121   1002.733 
22   51 
44.07117   1002.734 
22   51 
44.05674   1328.894 
22   51 
44.05679   1328.894 
22   51 
44.05674   1328.896 
22   51 
44.04343   1761.857 
22   51 
44.04348   1761.857 
22   51 
44.04343   1761.858 
22   51 
44.03549   2334.864 
22   51 
44.03553   2334.864 
22   51 
44.03549   2334.866 
22   51 
44.02756   3094.207 
22   51 
44.0276   3094.207 
22   51 
44.02756   3094.21 
22   51 
44.02342   4099.894 
22   51 
44.02346   4099.894 
22   51 
44.02342   4099.899 
22   51 
44.01847   5432.336 
22   51 
44.01852   5432.336 
22   51 
44.01847   5432.341 
22   51 
44.01657   7197.239 
22   51 
44.01661   7197.239 
22   51 
44.01657   7197.247 
22   51 
44.01326   9535.539 
22   51 
44.0133   9535.539 
22   51 
44.01326   9535.549 
22   51 
44.01269   12632.94 
22   51 
44.01274   12632.94 
22   51 
44.01269   12632.95 
22   51 
44.01026   16736.76 
22   51 
44.0103   16736.76 
22   51 
44.01026   16736.78 
22   51 
44.01051   22172.9 
22   51 
44.01056   22172.9 
22   51 
44.01051   22172.92 
22   51 
44.00851   29376.5 
22   51 
44.00856   29376.5 
22   51 
44.00851   29376.53 
22   51 
44.0093   38918.22 
22   51 
44.00935   38918.22 
22   51 
44.0093   38918.26 
22   51 
44.0075   51566.57 
22   51 
44.00754   51566.57 
22   51 
44.0075   51566.62 
22   51 
44.00863   68321.03 
22   51 
44.00867   68321.03 
22   51 
44.00863   68321.1 
22   51 
44.00691   90536.23 
22   51 
44.00695   90536.23 
22   51 
44.00691   90536.32 
22   51 
44.00823   119947.9 
22   51 
44.00828   119947.9 
22   51 
44.00823   119948.1 
22   51 
44.00661   158983.5 
22   51 
44.00666   158983.5 
22   51 
44.00661   158983.6 
22   51 
44.00762   198342.7 
22   51 
44.00766   198342.7 
22   51 
44.00762   198342.9 
22   51 
44.00706   237701.9 
22   51 
44.0071   237701.9 
22   51 
44.00706   237702.1 
22   51 
44.00723   277061.1 
22   51 
44.00727   277061.1 
22   51 
44.00723   277061.4 
22   51 
44.00713   316420.4 
22   51 
44.00717   316420.4 
22   51 
44.00713   316420.7 
Fit Mean:  44.00713  Size:  316420.4  Code:  5 
Try Mean:  39.35922  Size:  0.001 
22   51 
39.35922   0.001 
22   51 
39.35922   0.001 
22   51 
39.35926   0.001 
22   51 
39.35922   0.001001 
22   51 
39.35922   0.003663803 
22   51 
39.35926   0.003663803 
22   51 
39.35922   0.003664803 
22   51 
44.85865   11.10925 
22   51 
44.85869   11.10925 
22   51 
44.85865   11.10926 
22   51 
59.55936   32.61031 
22   51 
51.78835   21.24454 
22   51 
51.7884   21.24454 
22   51 
51.78835   21.24456 
22   51 
51.5467   21.23539 
22   51 
51.54675   21.23539 
22   51 
51.5467   21.23541 
22   51 
49.66982   22.46174 
22   51 
49.66987   22.46174 
22   51 
49.66982   22.46177 
22   51 
47.81295   25.20476 
22   51 
47.81299   25.20476 
22   51 
47.81295   25.20479 
22   51 
46.89888   28.9552 
22   51 
46.89893   28.9552 
22   51 
46.89888   28.95522 
22   51 
46.22708   40.89491 
22   51 
46.22713   40.89491 
22   51 
46.22708   40.89495 
22   51 
45.63751   54.49756 
22   51 
45.63756   54.49756 
22   51 
45.63751   54.49761 
22   51 
45.16226   75.3894 
22   51 
45.1623   75.3894 
22   51 
45.16226   75.38948 
22   51 
44.81357   102.5743 
22   51 
44.81361   102.5743 
22   51 
44.81357   102.5744 
22   51 
44.77809   139.1878 
22   51 
44.77814   139.1878 
22   51 
44.77809   139.188 
22   51 
42.9595   213.8713 
22   51 
44.12327   166.0794 
22   51 
44.12331   166.0794 
22   51 
44.12327   166.0795 
22   51 
44.29793   227.0536 
22   51 
44.29798   227.0536 
22   51 
44.29793   227.0538 
22   51 
44.23654   296.9875 
22   51 
44.23658   296.9875 
22   51 
44.23654   296.9878 
22   51 
44.17222   397.9198 
22   51 
44.17226   397.9198 
22   51 
44.17222   397.9202 
22   51 
44.1364   527.2698 
22   51 
44.13644   527.2698 
22   51 
44.1364   527.2703 
22   51 
44.09969   700.7641 
22   51 
44.09973   700.7641 
22   51 
44.09969   700.7648 
22   51 
44.08236   929.316 
22   51 
44.08241   929.316 
22   51 
44.08236   929.3169 
22   51 
44.05704   1232.905 
22   51 
44.05709   1232.905 
22   51 
44.05704   1232.906 
22   51 
44.05372   1634.451 
22   51 
44.05377   1634.451 
22   51 
44.05372   1634.453 
22   51 
44.02991   2168.083 
22   51 
44.02996   2168.083 
22   51 
44.02991   2168.085 
22   51 
44.04108   2875.563 
22   51 
44.04112   2875.563 
22   51 
44.04108   2875.566 
22   51 
44.0103   3822.645 
22   51 
44.01034   3822.645 
22   51 
44.0103   3822.649 
22   51 
44.03462   5086.604 
22   51 
44.03467   5086.604 
22   51 
44.03462   5086.609 
22   51 
44.00567   6773.541 
22   51 
44.00571   6773.541 
22   51 
44.00567   6773.548 
22   51 
44.01856   8986.582 
22   51 
44.01861   8986.582 
22   51 
44.01856   8986.591 
22   51 
44.01056   11907.56 
22   51 
44.01061   11907.56 
22   51 
44.01056   11907.57 
22   51 
44.01151   15778.6 
22   51 
44.01155   15778.6 
22   51 
44.01151   15778.62 
22   51 
44.00973   20900.74 
22   51 
44.00977   20900.74 
22   51 
44.00973   20900.76 
22   51 
44.00928   27689.74 
22   51 
44.00933   27689.74 
22   51 
44.00928   27689.76 
22   51 
44.00862   36681.19 
22   51 
44.00866   36681.19 
22   51 
44.00862   36681.22 
22   51 
44.00824   48593.15 
22   51 
44.00828   48593.15 
22   51 
44.00824   48593.2 
22   51 
44.00791   64370.07 
22   51 
44.00795   64370.07 
22   51 
44.00791   64370.14 
22   51 
44.00767   85278.72 
22   51 
44.00772   85278.72 
22   51 
44.00767   85278.81 
22   51 
44.00749   112965.7 
22   51 
44.00754   112965.7 
22   51 
44.00749   112965.8 
22   51 
44.00736   149715.3 
22   51 
44.0074   149715.3 
22   51 
44.00736   149715.4 
22   51 
44.00727   189074.5 
22   51 
44.00732   189074.5 
22   51 
44.00727   189074.7 
22   51 
44.00722   228433.7 
22   51 
44.00726   228433.7 
22   51 
44.00722   228433.9 
22   51 
44.00718   267792.9 
22   51 
44.00722   267792.9 
22   51 
44.00718   267793.2 
22   51 
44.00715   307152.2 
22   51 
44.0072   307152.2 
22   51 
44.00715   307152.5 
22   51 
44.00713   346511.4 
22   51 
44.00717   346511.4 
22   51 
44.00713   346511.7 
Fit Mean:  44.00713  Size:  346511.4  Code:  5 
Try Mean:  51  Size:  10000 
22   51 
51   10000 
22   51 
51   10000 
22   51 
51.00005   10000 
22   51 
51   10000.01 
22   51 
50.99339   10000 
22   51 
50.99345   10000 
22   51 
50.99339   10000.01 
22   51 
38.9305   10000 
22   51 
38.93054   10000 
22   51 
38.9305   10000.01 
22   51 
44.95509   10000 
22   51 
44.95514   10000 
22   51 
44.95509   10000.01 
22   51 
44.02783   10000 
22   51 
44.02788   10000 
22   51 
44.02783   10000.01 
22   51 
44.0148   10000 
22   51 
44.01484   10000 
22   51 
44.0148   10000.01 
22   51 
44.01515   10000 
22   51 
44.01519   10000 
22   51 
44.01515   10000.01 
22   51 
44.01515   10000 
22   51 
44.01519   10000 
22   51 
44.01515   10000.01 
Fit Mean:  44.01515  Size:  10000  Code:  2 
Try Mean:  51  Size:  1000 
22   51 
51   1000 
22   51 
51   1000 
22   51 
51.00005   1000 
22   51 
51   1000.001 
22   51 
50.99382   1000 
22   51 
50.99387   1000 
22   51 
50.99382   1000.001 
22   51 
39.16237   1000.003 
22   51 
39.16241   1000.003 
22   51 
39.16237   1000.004 
22   51 
45.07714   1000 
22   51 
45.07718   1000 
22   51 
45.07714   1000.001 
22   51 
44.12316   1000.001 
22   51 
44.1232   1000.001 
22   51 
44.12316   1000.002 
22   51 
44.08965   1000.001 
22   51 
44.0897   1000.001 
22   51 
44.08965   1000.002 
22   51 
44.09067   1000.002 
22   51 
44.09071   1000.002 
22   51 
44.09067   1000.003 
22   51 
44.09081   1000.003 
22   51 
44.09085   1000.003 
22   51 
44.09081   1000.004 
22   51 
44.09197   1000.015 
22   51 
44.09202   1000.015 
22   51 
44.09197   1000.016 
22   51 
44.09327   1000.042 
22   51 
44.09332   1000.042 
22   51 
44.09327   1000.043 
22   51 
44.09573   1000.131 
22   51 
44.09577   1000.131 
22   51 
44.09573   1000.132 
22   51 
44.09948   1000.364 
22   51 
44.09952   1000.364 
22   51 
44.09948   1000.365 
22   51 
44.10564   1001.003 
22   51 
44.10569   1001.003 
22   51 
44.10564   1001.004 
22   51 
44.11543   1002.689 
22   51 
44.11547   1002.689 
22   51 
44.11543   1002.69 
22   51 
44.13097   1007.132 
22   51 
44.13101   1007.132 
22   51 
44.13097   1007.133 
22   51 
44.15487   1018.632 
22   51 
44.15491   1018.632 
22   51 
44.15487   1018.633 
22   51 
44.18947   1047.67 
22   51 
44.18951   1047.67 
22   51 
44.18947   1047.671 
22   51 
44.23268   1117.44 
22   51 
44.23272   1117.44 
22   51 
44.23268   1117.441 
22   51 
44.26985   1273.688 
22   51 
44.26989   1273.688 
22   51 
44.26985   1273.69 
22   51 
44.26552   1599.972 
22   51 
44.26557   1599.972 
22   51 
44.26552   1599.973 
22   51 
44.17512   2200.634 
22   51 
44.17517   2200.634 
22   51 
44.17512   2200.636 
22   51 
44.04264   2979.58 
22   51 
44.04268   2979.58 
22   51 
44.04264   2979.583 
22   51 
43.9699   3633.775 
22   51 
43.96994   3633.775 
22   51 
43.9699   3633.779 
22   51 
43.93992   4311.469 
22   51 
43.93997   4311.469 
22   51 
43.93992   4311.473 
22   51 
43.93651   5511.213 
22   51 
43.93656   5511.213 
22   51 
43.93651   5511.219 
22   51 
43.96985   7346.007 
22   51 
43.96989   7346.007 
22   51 
43.96985   7346.015 
22   51 
44.01273   9655.947 
22   51 
44.01278   9655.947 
22   51 
44.01273   9655.957 
22   51 
44.03721   12196.93 
22   51 
44.03725   12196.93 
22   51 
44.03721   12196.94 
22   51 
44.04438   15565.47 
22   51 
44.04443   15565.47 
22   51 
44.04438   15565.48 
22   51 
44.03495   20640.15 
22   51 
44.035   20640.15 
22   51 
44.03495   20640.17 
22   51 
44.01579   27555.58 
22   51 
44.01584   27555.58 
22   51 
44.01579   27555.61 
22   51 
44.00043   35833.76 
22   51 
44.00048   35833.76 
22   51 
44.00043   35833.79 
22   51 
43.99344   46070.29 
22   51 
43.99349   46070.29 
22   51 
43.99344   46070.34 
22   51 
43.99444   60447.75 
22   51 
43.99448   60447.75 
22   51 
43.99444   60447.82 
22   51 
44.00145   80439.03 
22   51 
44.0015   80439.03 
22   51 
44.00145   80439.11 
22   51 
44.009   105900.4 
22   51 
44.00904   105900.4 
22   51 
44.009   105900.5 
22   51 
44.01328   137561.7 
22   51 
44.01333   137561.7 
22   51 
44.01328   137561.8 
22   51 
44.01377   180459.5 
22   51 
44.01381   180459.5 
22   51 
44.01377   180459.7 
22   51 
44.01108   239569.1 
22   51 
44.01113   239569.1 
22   51 
44.01108   239569.3 
22   51 
44.00735   317185.5 
22   51 
44.0074   317185.5 
22   51 
44.00735   317185.8 
22   51 
44.00467   416844.3 
22   51 
44.00471   416844.3 
22   51 
44.00467   416844.7 
22   51 
44.00387   544696.4 
22   51 
44.00391   544696.4 
22   51 
44.00387   544696.9 
22   51 
44.00471   720740.7 
22   51 
44.00476   720740.7 
22   51 
44.00471   720741.4 
22   51 
44.0064   960774.2 
22   51 
44.00644   960774.2 
22   51 
44.0064   960775.1 
22   51 
44.00774   1245251 
22   51 
44.00778   1245251 
22   51 
44.00774   1245253 
22   51 
44.00832   1609947 
22   51 
44.00836   1609947 
22   51 
44.00832   1609948 
22   51 
44.0082   2192750 
22   51 
44.00825   2192750 
22   51 
44.0082   2192752 
22   51 
44.00756   2846342 
22   51 
44.0076   2846342 
22   51 
44.00756   2846345 
22   51 
44.00677   3847642 
22   51 
44.00681   3847642 
22   51 
44.00677   3847646 
22   51 
44.0064   4703909 
22   51 
44.00644   4703909 
22   51 
44.0064   4703914 
22   51 
44.00641   5705209 
22   51 
44.00646   5705209 
22   51 
44.00641   5705215 
22   51 
44.00656   6706509 
22   51 
44.0066   6706509 
22   51 
44.00656   6706515 
22   51 
44.0066   7707808 
22   51 
44.00664   7707808 
22   51 
44.0066   7707816 
22   51 
44.00676   7684141 
22   51 
44.00665   7700809 
22   51 
44.00661   7705873 
22   51 
44.0066   7707252 
22   51 
44.0066   7707651 
22   51 
44.0066   7707768 
22   51 
44.0066   7707799 
22   51 
44.0066   7707807 
22   51 
44.011   7707808 
22   51 
44.0022   7707808 
22   51 
44.0066   7708579 
22   51 
44.0066   7707038 
22   51 
44.00678   7888642 
22   51 
44.01118   7888642 
22   51 
44.00238   7888642 
22   51 
44.00678   7889431 
22   51 
44.00678   7887854 
22   51 
44.00687   8062698 
22   51 
44.01127   8062698 
22   51 
44.00247   8062698 
22   51 
44.00687   8063505 
22   51 
44.00687   8061892 
22   51 
44.00692   8228754 
22   51 
44.01132   8228754 
22   51 
44.00252   8228754 
22   51 
44.00692   8229577 
22   51 
44.00692   8227931 
22   51 
44.00695   8389835 
22   51 
44.01135   8389835 
22   51 
44.00255   8389835 
22   51 
44.00695   8390674 
22   51 
44.00695   8388996 
22   51 
44.00696   8542594 
22   51 
44.01136   8542594 
22   51 
44.00256   8542594 
22   51 
44.00696   8543448 
22   51 
44.00696   8541739 
Fit Mean:  44.00696  Size:  8542594  Code:  1 
> 
> cat("Final Fit Mean: ", nb_fit_mu, " Size: ", nb_fit_size, " Code: ", nb_fit$code, " Try Size: ", try_size, "\n")
Final Fit Mean:  44.00696  Size:  8542594  Code:  1  Try Size:  1000 
> 
> ## Fit failed = reset parameters so graphing and output code can recognize this
> if ((nb_fit_mu < 0) || (nb_fit_size < 0) || (nb_fit$code != 1))
+ {
+   nb_fit_mu = 0
+   nb_fit_size = 0
+ }
> 
> 
> ## things can go wrong with fitting and we can still end up with invalid values
> 
> fit_nb = c()
> included_fract = 0
> if (nb_fit_mu > 0)
+ {
+   end_fract = pnbinom(end_i_for_fits, mu = nb_fit_mu, size=nb_fit_size)
+   start_fract = pnbinom(start_i_for_fits, mu = nb_fit_mu, size=nb_fit_size)
+   included_fract = end_fract-start_fract;
+ 
+   if (included_fract >= 0.01) {
+ 
+     ## Adjust so that we are back in full coords before making fit!!
+     if (num_per_bin > 1) 
+     {
+       nb_fit_mu = nb_fit_mu * num_per_bin
+     }
+     fit_nb = dnbinom(0:max(X$coverage), mu = nb_fit_mu, size=nb_fit_size)*inner_total/included_fract;
+   }
+ }
> 
> ## If an insufficient amount of fit was included, then invalidate it
> if (included_fract < 0.01)
+ {
+   nb_fit_mu = 0
+   nb_fit_size = 0
+ }
> 
> f_p <- function(par) {
+ 
+   lambda = par[1];
+ 
+   if (lambda <= 0)
+   {
+     return(0);
+   }
+   
+ 	total <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{	
+     #cat(i, " ", lambda, "\n");
+ 		dist[i] <- dpois(i, lambda=lambda);
+ 		total <- total + dist[i] 
+ 	}
+ 	#print (total)
+ 
+  	l <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{
+ 		l <- l + ((X.for.fits[i]/inner_total)-(dist[i]/total))^2;
+ 	}
+ 	return(l);
+ }
> 
> 
> ## Fit Poisson 
> ## - allow fit to fail and set all params to zero/empty if that is the case
> 
> p_fit = NULL
> try(suppressWarnings(p_fit<-nlm(f_p, c(m), print.level=this.print.level)))
> 
> fit_p = c()
> if (!is.null(p_fit) && (p_fit$estimate[1] > 0))
+ {
+   #print (nb_fit$estimate[1])
+   p_fit_lambda = p_fit$estimate[1];
+   #print(0:max(X$coverage))
+ 
+   end_fract = ppois(end_i_for_fits, lambda = p_fit_lambda)
+   start_fract = ppois(start_i_for_fits, lambda = p_fit_lambda)
+   included_fract = end_fract-start_fract;
+ 
+   ## Adjust so that we are back in full coords before making fit!!
+   if (num_per_bin > 1) 
+   {
+     p_fit_lambda = p_fit_lambda * num_per_bin
+   }
+   fit_p<-dpois(0:max(X$coverage), lambda = p_fit_lambda)*inner_total/included_fract;
+ }
> 
> 
> ## Graphing
> ##
> ## don't graph very high values with very little coverage
> i<-max_i
> while (i <= length(X$n) && X$n[i]>0.01*max_n)
+ {		
+ 	i <- i+1;
+ }
> graph_end_i <-i
> 
> ## Ths leaves enough room to the right of the peak for the legend
> graph_end_i = max(floor(2.2 * max_i), graph_end_i);
> 
> ## graphics settings
> my_pch = 21
> my_col = "black";
> my_col_censored = "red";
> 
> if (pdf_output == 0) {
+   
+   ## bitmap() requires ghostscript to be installed.
+   ## taa=4, gaa=2 options NOT compatible with earlier R versions!
+   ## units = "px" NOT compatible with even earlier R versions!
+   
+   if(!capabilities(what = "png"))
+   {
+     ## fallback to ghostscript
+     bitmap(plot_file, height=6, width=7, type = "png16m", res = 72, pointsize=18)
+   } else {
+     ## use X11 function, which gives better resolution
+     png(plot_file, height=6, width=7, units ="in", res = 72, pointsize=18)
+     par(family="sans")
+   }
+ } else {
+   pdf(plot_file, height=6, width=7)
+   par(family="sans")
+ }
> 
> par(mar=c(5.5,7.5,3,1.5));
> 
> max_y = 0
> if (plot_poisson) {
+ 	max_y = max(X$n, fit_p, fit_nb)
+ } else {
+ 	max_y = max(X$n, fit_nb)
+ }
> 
> plot(0:10, 0:10, type="n", lty="solid", ylim=c(0, max_y)*1.05, xlim=c(0, graph_end_i), lwd=1, xaxs="i", yaxs="i", axes=F, las=1, main="Coverage Distribution at Unique-Only Positions", xlab="Coverage depth (reads)", ylab="", cex.lab=1.2, cex.axis=1.2)
> 
> mtext(side = 2, text = "Number of reference positions", line = 5.5, cex=1.2)
> 
> sciNotation <- function(x, digits = 1) {
+     if (length(x) > 1) {
+         return(append(sciNotation(x[1]), sciNotation(x[-1])))     
+ 	} 
+     if (!x) return(0) 
+ 
+ 	exponent <- floor(log10(x)) 
+     base <- round(x / 10^exponent, digits)     
+ 	as.expression(substitute(base %*% 10^exponent, list(base = base, exponent = exponent))) 
+ }
> 
> #axis(2, cex.lab=1.2, las=1, cex.axis=1.2, labels=T, at=(0:6)*50000)
> axis(2, cex.lab=1.2, las=1, cex.axis=1.2, at = axTicks(2), labels = sciNotation(axTicks(2), 1))
> axis(1, cex.lab=1.2, cex.axis=1.2, labels=T)
> box()
> 
> #graph the coverage as points
> fit_data <- subset(X, (coverage>=start_i) & (coverage<=end_i) );
> points(fit_data$coverage, fit_data$n, pch=my_pch, col=my_col, bg="white", cex=1.2)
> 
> #graph the censored coverage as red points
> cat(start_i, " ", end_i, "\n", sep="")
22 51
> 
> censored_data <- subset(X, (coverage<start_i) | (coverage>end_i) );
> points(censored_data$coverage, censored_data$n, pch=my_pch, col=my_col_censored, bg="white", cex=1.2)
> 
> #graph the poisson fit IF REQUESTED
> if (plot_poisson) {
+ 	lines(0:max(X$coverage), fit_p, lwd=3, lty="22", col="black");
+ }
> 
> #graph the negative binomial fit
> if (nb_fit_mu > 0) {
+   lines(0:max(X$coverage), fit_nb, lwd=3, col="black");
+ }
> 
> if (plot_poisson) {
+ 	legend("topright", c("Coverage distribution", "Censored data", "Negative binomial", "Poisson"), lty=c("blank","blank","solid","22"), lwd=c(1,1,2,2), pch=c(my_pch, my_pch, -1, -1), col=c("black", "red", "black", "black"), bty="n")
+ } else {
+ 	legend("topright", c("Coverage distribution", "Censored data", "Negative binomial"), lty=c("blank","blank","solid"), lwd=c(1,1,2), pch=c(my_pch, my_pch, -1), col=c("black", "red", "black"), bty="n")
+ }
> 
> dev.off()
null device 
          1 
> 
> ## Fit the marginal value that we use for propagating deletions
> 
> if (nb_fit_mu > 0) {
+   cat(nb_fit_size, " ", nb_fit_mu, "\n")
+   deletion_propagation_coverage = suppressWarnings(qnbinom(deletion_propagation_pr_cutoff, size = nb_fit_size, mu = nb_fit_mu))
+ } else {
+   cat("Fallback to calculating off an estimate of just variance = mu + mu^2/size\n")
+   size_estimate = (1/(v-m))*(m*m)
+   cat("Mu estimate=", m," Size estimate =", size_estimate, "\n")
+   deletion_propagation_coverage = suppressWarnings(qnbinom(deletion_propagation_pr_cutoff, size = size_estimate, mu = m))
+   if (is.na(deletion_propagation_coverage) || is.nan(deletion_propagation_coverage) || (deletion_propagation_coverage < 1)) {
+     cat("Double fallback to calculating as just 10% of the mean\n")
+     deletion_propagation_coverage = m * 0.1
+   }
+ }
8542594   44.00696 
> 
> #Don't allow one read to indicate non-deleted regions
> if (deletion_propagation_coverage < 1) {
+     deletion_propagation_coverage = 1
+ }
> 
> #This works fine with the negative values
> #If we have both low fit coverage and low straight average coverage then we're deleted...
> if ( (nb_fit_mu <= 3) && (m <= 3) ) {
+   deletion_propagation_coverage = -1
+ }
> 
> #print out statistics
> 
> print(nb_fit_size);
[1] 8542594
> print(nb_fit_mu);
[1] 44.00696
> 
> print(m)
[1] 39.35922
> print(v)
[1] 117.8118
> print(D)
[1] 2.993245
> 
> print(deletion_propagation_coverage)
[1] 27
> 
> warnings()
> 
