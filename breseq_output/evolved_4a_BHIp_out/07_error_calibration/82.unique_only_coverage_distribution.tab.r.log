
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##
> ##
> ## AUTHORS
> ##
> ## Jeffrey E. Barrick <jeffrey.e.barrick@gmail.com>
> ##
> ## LICENSE AND COPYRIGHT
> ##
> ## Copyright (c) 2008-2010 Michigan State University
> ## Copyright (c) 2011-2022 The University of Texas at Austin
> ##
> ## breseq is free software; you can redistribute it and/or modify it under the
> ## terms the GNU General Public License as published by the Free Software
> ## Foundation; either version 1, or (at your option) any later version.
> ##
> ##
> 
> ## Arguments:
> ##   distribution_file=/path/to/input 
> ##   plot_file=/path/to/output 
> ##   deletion_propagation_pr_cutoff=float
> ##   plot_poisson=0 or 1
> ##   pdf_output=0 or 1
> 
> ## Returns these values printed out to output log
> ## 
> ##  1. print(nb_fit_size); # 0 if fit failed
> ##  2. print(nb_fit_mu);   # 0 if fit failed
> ##  3. print(m)q
> ##  4. print(v)
> ##  5. print(D)
> ##  6. print(deletion_propagation_coverage)
> ##     -1 if it was <1 after fitting (implying reference sequence is deleted)
> ##
> 
> plot_poisson = 0;
> pdf_output = 1;
> 
> this.print.level = 0
> #this.print.level = 2
> 
> for (e in commandArgs(TRUE)) {
+   ta = strsplit(e,"=",fixed=TRUE)[[1]]
+   if(length(ta)>1) {
+     temp = ta[2]
+     assign(ta[1],temp)
+     cat("assigned ",ta[1]," the value of |",temp,"|\n")
+   } else {
+     assign(ta[[1]][1],TRUE)
+     cat("assigned ",ta[1]," the value of TRUE\n")
+   }
+ }
assigned  distribution_file  the value of | 4a+_BHI_c50_out/07_error_calibration/82.unique_only_coverage_distribution.tab |
assigned  plot_file  the value of | 4a+_BHI_c50_out/output/calibration/82.unique_coverage.pdf |
assigned  deletion_propagation_pr_cutoff  the value of | 0.00358979 |
> 
> deletion_propagation_pr_cutoff = as.numeric(deletion_propagation_pr_cutoff);
> 
> ## initialize values to be filled in
> nb_fit_mu = 0
> nb_fit_size = 0
> m = 0
> v = 0
> D = 0
> deletion_propagation_coverage = -1
> 
> min_fraction_included_in_nb_fit = 0.01
> 
> #load data
> X<-read.table(distribution_file, header=T)
> 
> #table might be empty
> if (nrow(X) == 0)
+ {
+   #print out statistics
+   
+   print(nb_fit_size);
+   print(nb_fit_mu);
+   
+   print(m)
+   print(v)
+   print(D)
+   
+   print(deletion_propagation_coverage)
+   
+   q()
+ }
> 
> #create the distribution vector and fit
> Y<-rep(X$coverage, X$n)
> m<-mean(Y)
> v<-var(Y)
> D<-v/m
> 
> ###
> ## Smooth the distribution with a moving average window of size 5
> ## so that we can more reliably find it's maximum value
> ###
> 
> ma5 = c(1, 1, 1, 1, 1)/5;
> 
> ## filtering fails if there are too few points
> if (nrow(X) >= 5) {
+   X$ma = filter(X$n, ma5)
+ } else {
+ 	X$ma = X$n
+ }
> 
> i<-0
> max_n <- 0;
> min_i <- max( trunc(m/4), 1 ); #prevents zero for pathological distributions
> max_i <- i;
> for (i in min_i:length(X$ma))
+ {		
+   #cat(i, "\n")
+ 	if (!is.na(X$ma[i]) && (X$ma[i] > max_n))
+ 	{
+ 		max_n = X$ma[i];
+ 		max_i = i;
+ 	}
+ }
> 
> ##
> # Censor data on the right and left of the maximum
> ##
> 
> start_i = max(floor(max_i*0.5), 1);
> end_i = min(ceiling(max_i*1.5), length(X$ma));
> 
> if (start_i == end_i)
+ {
+   print(nb_fit_size);
+   print(nb_fit_mu);
+   
+   print(m)
+   print(v)
+   print(D)
+   
+   print(deletion_propagation_coverage)
+   
+   q()
+ }
> 
> cat("Fitting from coverage of ", start_i, " to ", end_i, ".\n", sep="")
Fitting from coverage of 15 to 33.
> 
> ##
> # Coarse grain so that we are only fitting a number of bins that is 1000-2000
> #
> # The later adjustment for doing the fits this way is to multiply the means
> # of the negative binomial and poisson distributions by the binning number.
> # (The size parameter of the negative binomial doesn't need to be adjusted.)
> ##
> 
> 
> num_per_bin = trunc((end_i - start_i) / 1000)
> 
> if (num_per_bin > 1) 
+ {
+   cat("Coarse-graining for fits\n")
+   start_i_for_fits = trunc(start_i/num_per_bin)
+   end_i_for_fits = ceiling(end_i/num_per_bin)
+   num_bins = end_i - start_i  + 1
+   cat("Fitting from coverage in adjusted bins ", start_i_for_fits, " to ", end_i_for_fits, ".\n", sep="")
+   cat("Number of bins ", num_bins, ". Each bin has ", num_per_bin, " coverage values.\n", sep="")
+ 
+   # Create a new vector where we've added together values in bins
+   X.for.fits = vector("double", end_i_for_fits)
+   for (i in start_i_for_fits:end_i_for_fits)
+   {
+     for (j in 1:num_per_bin)
+     {
+       if (i*num_per_bin+j <= length(X$n))
+       {
+         X.for.fits[i] = X.for.fits[i] + X$n[i*num_per_bin+j]
+       }
+     }
+   }
+ 
+ } else {
+   ## AVOID num_per_bin equalling zero!!
+   X.for.fits = X$n[1:end_i]
+   num_per_bin = 1
+   start_i_for_fits = start_i
+   end_i_for_fits = end_i
+ }
> 
> 
> ##
> # Now perform negative binomial fitting to the censored data
> ##
> 
> inner_total<-0;
> for (i in start_i_for_fits:end_i_for_fits)
+ {
+ 	inner_total = inner_total + X.for.fits[i]; 
+ }
> # Yes: it's correct to use X here because we want the overall total total
> total_total<-sum(X$n);
> 
> ## let's preconstruct these for speed
> dist = vector("double", end_i_for_fits)
> 
> f_nb <- function(par) {
+ 
+ 	mu = par[1];
+ 	size = par[2];
+ 
+   if ((mu <= 0) || (size <= 0))
+   {
+     return(0);
+   }
+   
+   cat(start_i_for_fits, " ", end_i_for_fits, "\n");
+   cat(mu, " ", size, "\n");
+   
+ 	dist<-c()
+ 	total <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{	
+ 		dist[i] <- dnbinom(i, size=size, mu=mu);
+ 		total <- total + dist[i] 
+ 	}
+ 	#print (mu, size)
+ 
+  	l <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{
+ 		l <- l + ((X.for.fits[i]/inner_total)-(dist[i]/total))^2;
+ 	}
+ 	return(l);
+ }
> 
> 
> 
> ## Fit negative binomial 
> ## - allow fit to fail and set all params to zero/empty if that is the case
> nb_fit = NULL
> ## as.numeric prevents overflow in sums involving integers
> mean_estimate = sum((as.numeric(1:end_i_for_fits)*as.numeric(X.for.fits)))/sum(as.numeric(X.for.fits))
> 
> nb_fit_mu = -1
> nb_fit_size = -1
> try_size = 100000
> try_means_index = 1
> #This is a list of different means to test <-  sometimes the actual mean doesn't lead to a fit
> try_means = c(mean_estimate, 
+               end_i_for_fits, 
+               start_i_for_fits, 
+               1*(end_i_for_fits + start_i_for_fits)/4,
+               2*(end_i_for_fits + start_i_for_fits)/4,
+               3*(end_i_for_fits + start_i_for_fits)/4
+               )
>               
>               
> nb_fit = c()
> 
> while ( ((nb_fit_mu < 0) || (nb_fit_size < 0) || (nb_fit$code != 1)) && (try_size > 0.001) && (try_means_index <= length(try_means)))
+ {
+   try_size = try_size / 10
+   try_mean = try_means[try_means_index]
+ 
+   ## SIZE ESTIMATE from the censored data can be negative, so try various values instead
+   cat("Try Mean: ", try_mean, " Size: ", try_size, "\n")
+ 
+   try( suppressWarnings(nb_fit<-nlm(f_nb, c(try_mean, try_size), iterlim=1000, print.level=this.print.level)) )
+ 
+   nb_fit_mu = nb_fit$estimate[1];
+   nb_fit_size = nb_fit$estimate[2];
+ 
+   cat("Fit Mean: ", nb_fit_mu, " Size: ", nb_fit_size, " Code: ", nb_fit$code, "\n")
+   
+   if (try_size <= 0.001) {
+     try_size = 100000
+     try_means_index = try_means_index + 1
+   }
+ }
Try Mean:  28.92424  Size:  10000 
15   33 
28.92424   10000 
15   33 
28.92424   10000 
15   33 
28.92427   10000 
15   33 
28.92424   10000.01 
15   33 
28.93227   10000 
15   33 
28.9323   10000 
15   33 
28.93227   10000.01 
15   33 
33.79041   10000 
15   33 
33.79045   10000 
15   33 
33.79041   10000.01 
15   33 
33.87174   10000 
15   33 
33.87178   10000 
15   33 
33.87174   10000.01 
15   33 
33.88451   10000 
15   33 
33.88455   10000 
15   33 
33.88451   10000.01 
15   33 
33.88457   10000 
15   33 
33.8846   10000 
15   33 
33.88457   10000.01 
15   33 
33.88457   10000 
15   33 
33.8846   10000 
15   33 
33.88457   10000.01 
Fit Mean:  33.88457  Size:  10000  Code:  2 
Try Mean:  28.92424  Size:  1000 
15   33 
28.92424   1000 
15   33 
28.92424   1000 
15   33 
28.92427   1000 
15   33 
28.92424   1000.001 
15   33 
28.93216   1000 
15   33 
28.93219   1000 
15   33 
28.93216   1000.001 
15   33 
33.8771   1000.001 
15   33 
33.87713   1000.001 
15   33 
33.8771   1000.002 
15   33 
34.01519   1000.001 
15   33 
34.01522   1000.001 
15   33 
34.01519   1000.002 
15   33 
34.03894   1000.001 
15   33 
34.03898   1000.001 
15   33 
34.03894   1000.002 
15   33 
34.03914   1000.001 
15   33 
34.03917   1000.001 
15   33 
34.03914   1000.002 
15   33 
34.03916   1000.001 
15   33 
34.03919   1000.001 
15   33 
34.03916   1000.002 
Fit Mean:  34.03916  Size:  1000.001  Code:  2 
Try Mean:  28.92424  Size:  100 
15   33 
28.92424   100 
15   33 
28.92424   100 
15   33 
28.92427   100 
15   33 
28.92424   100.0001 
15   33 
28.93129   100 
15   33 
28.93132   100 
15   33 
28.93129   100.0001 
15   33 
34.70417   100.0936 
15   33 
34.7042   100.0936 
15   33 
34.70417   100.0937 
15   33 
35.45271   100.121 
15   33 
35.45275   100.121 
15   33 
35.45271   100.1211 
15   33 
35.69576   100.1359 
15   33 
35.6958   100.1359 
15   33 
35.69576   100.136 
15   33 
35.71015   100.1423 
15   33 
35.71019   100.1423 
15   33 
35.71015   100.1424 
15   33 
35.71357   100.1507 
15   33 
35.71361   100.1507 
15   33 
35.71357   100.1508 
15   33 
35.72876   100.2278 
15   33 
35.72879   100.2278 
15   33 
35.72876   100.2279 
15   33 
35.74542   100.4057 
15   33 
35.74546   100.4057 
15   33 
35.74542   100.4058 
15   33 
35.77069   100.9643 
15   33 
35.77073   100.9643 
15   33 
35.77069   100.9644 
15   33 
35.79667   102.4116 
15   33 
35.7967   102.4116 
15   33 
35.79667   102.4117 
15   33 
35.8056   106.3077 
15   33 
35.80564   106.3077 
15   33 
35.8056   106.3078 
15   33 
35.73436   117.0456 
15   33 
35.7344   117.0456 
15   33 
35.73436   117.0457 
15   33 
35.29713   158.1906 
15   33 
35.29716   158.1906 
15   33 
35.29713   158.1907 
15   33 
29.67773   669.8141 
15   33 
34.73519   209.3529 
15   33 
34.73522   209.3529 
15   33 
34.73519   209.3531 
15   33 
34.1231   271.8283 
15   33 
34.12314   271.8283 
15   33 
34.1231   271.8286 
15   33 
34.44562   244.0413 
15   33 
34.44565   244.0413 
15   33 
34.44562   244.0415 
15   33 
34.43853   250.4022 
15   33 
34.43856   250.4022 
15   33 
34.43853   250.4024 
15   33 
34.30471   344.6394 
15   33 
34.30474   344.6394 
15   33 
34.30471   344.6398 
15   33 
34.20677   428.5608 
15   33 
34.20681   428.5608 
15   33 
34.20677   428.5612 
15   33 
34.1303   561.1643 
15   33 
34.13034   561.1643 
15   33 
34.1303   561.1648 
15   33 
34.06701   723.8233 
15   33 
34.06704   723.8233 
15   33 
34.06701   723.8241 
15   33 
34.02708   945.3545 
15   33 
34.02711   945.3545 
15   33 
34.02708   945.3554 
15   33 
33.97669   1238.499 
15   33 
33.97673   1238.499 
15   33 
33.97669   1238.5 
15   33 
33.97514   1627.854 
15   33 
33.97518   1627.854 
15   33 
33.97514   1627.856 
15   33 
33.9006   2192.139 
15   33 
33.90063   2192.139 
15   33 
33.9006   2192.141 
15   33 
33.92269   2876.224 
15   33 
33.92272   2876.224 
15   33 
33.92269   2876.227 
15   33 
33.90361   3763.535 
15   33 
33.90365   3763.535 
15   33 
33.90361   3763.539 
15   33 
33.89334   4988.604 
15   33 
33.89337   4988.604 
15   33 
33.89334   4988.609 
15   33 
33.88744   6568.34 
15   33 
33.88747   6568.34 
15   33 
33.88744   6568.347 
15   33 
33.88259   8679.502 
15   33 
33.88262   8679.502 
15   33 
33.88259   8679.51 
15   33 
33.87894   11468.35 
15   33 
33.87897   11468.35 
15   33 
33.87894   11468.36 
15   33 
33.87616   15166.53 
15   33 
33.87619   15166.53 
15   33 
33.87616   15166.54 
15   33 
33.87405   20063.81 
15   33 
33.87409   20063.81 
15   33 
33.87405   20063.83 
15   33 
33.87246   26553.1 
15   33 
33.8725   26553.1 
15   33 
33.87246   26553.13 
15   33 
33.87126   35151.98 
15   33 
33.87129   35151.98 
15   33 
33.87126   35152.02 
15   33 
33.87036   46497.34 
15   33 
33.87039   46497.34 
15   33 
33.87036   46497.39 
15   33 
33.86965   61672.76 
15   33 
33.86969   61672.76 
15   33 
33.86965   61672.82 
15   33 
33.86915   81403.62 
15   33 
33.86919   81403.62 
15   33 
33.86915   81403.7 
15   33 
33.86873   108520.4 
15   33 
33.86876   108520.4 
15   33 
33.86873   108520.5 
15   33 
33.86846   143184 
15   33 
33.86849   143184 
15   33 
33.86846   143184.1 
15   33 
33.86822   190334.9 
15   33 
33.86825   190334.9 
15   33 
33.86822   190335.1 
15   33 
33.86808   247741.3 
15   33 
33.86812   247741.3 
15   33 
33.86808   247741.6 
15   33 
33.86794   328055.6 
15   33 
33.86797   328055.6 
15   33 
33.86794   328055.9 
15   33 
33.86784   432154.6 
15   33 
33.86787   432154.6 
15   33 
33.86784   432155.1 
15   33 
33.8678   536253.7 
15   33 
33.86784   536253.7 
15   33 
33.8678   536254.2 
15   33 
33.86774   640352.7 
15   33 
33.86778   640352.7 
15   33 
33.86774   640353.4 
15   33 
33.8677   744451.8 
15   33 
33.86773   744451.8 
15   33 
33.8677   744452.5 
15   33 
33.86768   848550.8 
15   33 
33.86771   848550.8 
15   33 
33.86768   848551.7 
Fit Mean:  33.86768  Size:  848550.8  Code:  5 
Try Mean:  28.92424  Size:  10 
15   33 
28.92424   10 
15   33 
28.92424   10 
15   33 
28.92427   10 
15   33 
28.92424   10.00001 
15   33 
28.92801   10.0014 
15   33 
28.92804   10.0014 
15   33 
28.92801   10.00141 
15   33 
56.34646   39.25897 
15   33 
56.34651   39.25897 
15   33 
56.34646   39.25901 
15   33 
46.23876   27.81488 
15   33 
46.23881   27.81488 
15   33 
46.23876   27.81491 
15   33 
42.18241   23.44607 
15   33 
42.18245   23.44607 
15   33 
42.18241   23.4461 
15   33 
43.5991   25.10916 
15   33 
43.59915   25.10916 
15   33 
43.5991   25.10918 
15   33 
43.47094   25.11383 
15   33 
43.47098   25.11383 
15   33 
43.47094   25.11386 
15   33 
42.9992   25.44088 
15   33 
42.99924   25.44088 
15   33 
42.9992   25.44091 
15   33 
42.15839   26.46474 
15   33 
42.15843   26.46474 
15   33 
42.15839   26.46477 
15   33 
41.0765   28.40726 
15   33 
41.07654   28.40726 
15   33 
41.0765   28.40728 
15   33 
40.14009   31.15076 
15   33 
40.14013   31.15076 
15   33 
40.14009   31.15079 
15   33 
39.07782   36.99574 
15   33 
39.07786   36.99574 
15   33 
39.07782   36.99577 
15   33 
38.41779   43.6942 
15   33 
38.41782   43.6942 
15   33 
38.41779   43.69424 
15   33 
35.976   59.11711 
15   33 
37.36938   50.31619 
15   33 
37.36941   50.31619 
15   33 
37.36938   50.31624 
15   33 
36.55316   63.33696 
15   33 
36.55319   63.33696 
15   33 
36.55316   63.33702 
15   33 
36.50619   74.93971 
15   33 
36.50623   74.93971 
15   33 
36.50619   74.93978 
15   33 
34.85125   108.168 
15   33 
34.85129   108.168 
15   33 
34.85125   108.1681 
15   33 
35.6639   100.1781 
15   33 
35.66393   100.1781 
15   33 
35.6639   100.1782 
15   33 
35.44501   112.4215 
15   33 
35.44504   112.4215 
15   33 
35.44501   112.4216 
15   33 
34.65773   160.5851 
15   33 
34.65777   160.5851 
15   33 
34.65773   160.5853 
15   33 
34.73333   178.6272 
15   33 
34.73337   178.6272 
15   33 
34.73333   178.6274 
15   33 
34.52012   233.2391 
15   33 
34.52015   233.2391 
15   33 
34.52012   233.2393 
15   33 
34.39055   293.4188 
15   33 
34.39059   293.4188 
15   33 
34.39055   293.4191 
15   33 
34.26623   378.9078 
15   33 
34.26627   378.9078 
15   33 
34.26623   378.9082 
15   33 
34.19226   488.9719 
15   33 
34.19229   488.9719 
15   33 
34.19226   488.9724 
15   33 
34.06753   642.3483 
15   33 
34.06757   642.3483 
15   33 
34.06753   642.349 
15   33 
34.11872   859.1007 
15   33 
34.11875   859.1007 
15   33 
34.11872   859.1016 
15   33 
33.94489   1177.985 
15   33 
33.94492   1177.985 
15   33 
33.94489   1177.986 
15   33 
33.93453   1413.741 
15   33 
33.93456   1413.741 
15   33 
33.93453   1413.743 
15   33 
33.94287   1870.847 
15   33 
33.9429   1870.847 
15   33 
33.94287   1870.849 
15   33 
33.9227   2427.6 
15   33 
33.92274   2427.6 
15   33 
33.9227   2427.602 
15   33 
33.90931   3209.527 
15   33 
33.90934   3209.527 
15   33 
33.90931   3209.53 
15   33 
33.89924   4218.205 
15   33 
33.89927   4218.205 
15   33 
33.89924   4218.209 
15   33 
33.89158   5567.942 
15   33 
33.89162   5567.942 
15   33 
33.89158   5567.948 
15   33 
33.88575   7348.674 
15   33 
33.88578   7348.674 
15   33 
33.88575   7348.681 
15   33 
33.88133   9711.371 
15   33 
33.88136   9711.371 
15   33 
33.88133   9711.381 
15   33 
33.87796   12838.81 
15   33 
33.878   12838.81 
15   33 
33.87796   12838.83 
15   33 
33.87542   16983.43 
15   33 
33.87546   16983.43 
15   33 
33.87542   16983.45 
15   33 
33.8735   22473.02 
15   33 
33.87353   22473.02 
15   33 
33.8735   22473.04 
15   33 
33.87204   29744.33 
15   33 
33.87208   29744.33 
15   33 
33.87204   29744.36 
15   33 
33.87093   39396.21 
15   33 
33.87097   39396.21 
15   33 
33.87093   39396.25 
15   33 
33.87011   52154.6 
15   33 
33.87014   52154.6 
15   33 
33.87011   52154.65 
15   33 
33.86948   69053.24 
15   33 
33.86951   69053.24 
15   33 
33.86948   69053.3 
15   33 
33.869   91485.22 
15   33 
33.86904   91485.22 
15   33 
33.869   91485.32 
15   33 
33.86864   121170.9 
15   33 
33.86868   121170.9 
15   33 
33.86864   121171 
15   33 
33.86844   151775 
15   33 
33.86847   151775 
15   33 
33.86844   151775.2 
15   33 
33.86828   182379.1 
15   33 
33.86831   182379.1 
15   33 
33.86828   182379.3 
15   33 
33.86819   212983.3 
15   33 
33.86823   212983.3 
15   33 
33.86819   212983.5 
15   33 
33.86811   243587.4 
15   33 
33.86814   243587.4 
15   33 
33.86811   243587.6 
15   33 
33.86806   274191.5 
15   33 
33.86809   274191.5 
15   33 
33.86806   274191.8 
Fit Mean:  33.86806  Size:  274191.5  Code:  5 
Try Mean:  28.92424  Size:  1 
15   33 
28.92424   1 
15   33 
28.92424   1 
15   33 
28.92427   1 
15   33 
28.92424   1.000001 
15   33 
28.92493   1.005012 
15   33 
28.92496   1.005012 
15   33 
28.92493   1.005013 
15   33 
37.45842   13.49479 
15   33 
37.45845   13.49479 
15   33 
37.45842   13.4948 
15   33 
47.53738   25.18877 
15   33 
47.53743   25.18877 
15   33 
47.53738   25.18879 
15   33 
45.43926   22.81846 
15   33 
45.4393   22.81846 
15   33 
45.43926   22.81849 
15   33 
45.05128   22.42108 
15   33 
45.05132   22.42108 
15   33 
45.05128   22.4211 
15   33 
45.04794   22.45841 
15   33 
45.04798   22.45841 
15   33 
45.04794   22.45843 
15   33 
44.5168   24.04176 
15   33 
44.51685   24.04176 
15   33 
44.5168   24.04179 
15   33 
42.18316   29.20682 
15   33 
42.1832   29.20682 
15   33 
42.18316   29.20685 
15   33 
39.18861   35.84377 
15   33 
39.18865   35.84377 
15   33 
39.18861   35.84381 
15   33 
39.45106   35.85783 
15   33 
39.4511   35.85783 
15   33 
39.45106   35.85787 
15   33 
38.88323   40.77316 
15   33 
38.88327   40.77316 
15   33 
38.88323   40.7732 
15   33 
36.57752   55.40151 
15   33 
36.57755   55.40151 
15   33 
36.57752   55.40157 
15   33 
37.35275   55.04419 
15   33 
37.35279   55.04419 
15   33 
37.35275   55.04425 
15   33 
36.86801   63.61188 
15   33 
36.86805   63.61188 
15   33 
36.86801   63.61194 
15   33 
35.17647   91.41328 
15   33 
35.1765   91.41328 
15   33 
35.17647   91.41337 
15   33 
35.90823   88.6676 
15   33 
35.90826   88.6676 
15   33 
35.90823   88.66769 
15   33 
35.66225   101.2249 
15   33 
35.66229   101.2249 
15   33 
35.66225   101.225 
15   33 
34.72947   144.7584 
15   33 
34.72951   144.7584 
15   33 
34.72947   144.7586 
15   33 
34.88362   156.6582 
15   33 
34.88366   156.6582 
15   33 
34.88362   156.6583 
15   33 
34.67889   200.7507 
15   33 
34.67893   200.7507 
15   33 
34.67889   200.7509 
15   33 
34.42425   258.305 
15   33 
34.42428   258.305 
15   33 
34.42425   258.3053 
15   33 
34.33742   330.9484 
15   33 
34.33745   330.9484 
15   33 
34.33742   330.9487 
15   33 
34.19471   425.8928 
15   33 
34.19474   425.8928 
15   33 
34.19471   425.8932 
15   33 
34.17349   553.7097 
15   33 
34.17353   553.7097 
15   33 
34.17349   553.7103 
15   33 
34.00813   740.1578 
15   33 
34.00817   740.1578 
15   33 
34.00813   740.1585 
15   33 
34.01665   944.2179 
15   33 
34.01669   944.2179 
15   33 
34.01665   944.2188 
15   33 
33.9781   1226.685 
15   33 
33.97814   1226.685 
15   33 
33.9781   1226.686 
15   33 
33.9548   1606.037 
15   33 
33.95484   1606.037 
15   33 
33.9548   1606.039 
15   33 
33.93225   2105.196 
15   33 
33.93229   2105.196 
15   33 
33.93225   2105.198 
15   33 
33.91859   2768.187 
15   33 
33.91862   2768.187 
15   33 
33.91859   2768.19 
15   33 
33.90444   3646.235 
15   33 
33.90447   3646.235 
15   33 
33.90444   3646.238 
15   33 
33.89765   4808.627 
15   33 
33.89768   4808.627 
15   33 
33.89765   4808.632 
15   33 
33.88779   6352.008 
15   33 
33.88782   6352.008 
15   33 
33.88779   6352.014 
15   33 
33.88598   8393.42 
15   33 
33.88602   8393.42 
15   33 
33.88598   8393.428 
15   33 
33.87754   11113.87 
15   33 
33.87757   11113.87 
15   33 
33.87754   11113.88 
15   33 
33.87974   14716.41 
15   33 
33.87977   14716.41 
15   33 
33.87974   14716.42 
15   33 
33.87148   19543.47 
15   33 
33.87151   19543.47 
15   33 
33.87148   19543.49 
15   33 
33.87527   25934.69 
15   33 
33.8753   25934.69 
15   33 
33.87527   25934.71 
15   33 
33.86975   34416.88 
15   33 
33.86979   34416.88 
15   33 
33.86975   34416.91 
15   33 
33.87126   45599.98 
15   33 
33.8713   45599.98 
15   33 
33.87126   45600.03 
15   33 
33.86931   60445.44 
15   33 
33.86934   60445.44 
15   33 
33.86931   60445.5 
15   33 
33.86937   79950.8 
15   33 
33.86941   79950.8 
15   33 
33.86937   79950.88 
15   33 
33.86869   105782.1 
15   33 
33.86873   105782.1 
15   33 
33.86869   105782.2 
15   33 
33.86855   134723.6 
15   33 
33.86858   134723.6 
15   33 
33.86855   134723.8 
15   33 
33.86835   163665.2 
15   33 
33.86839   163665.2 
15   33 
33.86835   163665.3 
15   33 
33.86824   192606.7 
15   33 
33.86828   192606.7 
15   33 
33.86824   192606.9 
15   33 
33.86816   221548.2 
15   33 
33.86819   221548.2 
15   33 
33.86816   221548.4 
15   33 
33.86809   250489.7 
15   33 
33.86813   250489.7 
15   33 
33.86809   250490 
Fit Mean:  33.86809  Size:  250489.7  Code:  5 
Try Mean:  28.92424  Size:  0.1 
15   33 
28.92424   0.1 
15   33 
28.92424   0.1 
15   33 
28.92427   0.1 
15   33 
28.92424   0.100001 
15   33 
28.92432   0.1059368 
15   33 
28.92435   0.1059368 
15   33 
28.92432   0.1059378 
15   33 
32.4993   7.616758 
15   33 
32.49933   7.616758 
15   33 
32.4993   7.616765 
15   33 
43.77626   23.38047 
15   33 
43.7763   23.38047 
15   33 
43.77626   23.3805 
15   33 
44.10902   23.86264 
15   33 
44.10906   23.86264 
15   33 
44.10902   23.86266 
15   33 
44.14795   23.95548 
15   33 
44.148   23.95548 
15   33 
44.14795   23.9555 
15   33 
44.16445   24.08948 
15   33 
44.16449   24.08948 
15   33 
44.16445   24.0895 
15   33 
44.12836   24.46896 
15   33 
44.1284   24.46896 
15   33 
44.12836   24.46899 
15   33 
43.89302   25.39736 
15   33 
43.89306   25.39736 
15   33 
43.89302   25.39739 
15   33 
42.73472   28.8163 
15   33 
42.73476   28.8163 
15   33 
42.73472   28.81633 
15   33 
41.42825   32.45983 
15   33 
41.4283   32.45983 
15   33 
41.42825   32.45986 
15   33 
39.6503   37.68426 
15   33 
39.65034   37.68426 
15   33 
39.6503   37.6843 
15   33 
29.98337   67.97026 
15   33 
38.68361   40.71286 
15   33 
38.68364   40.71286 
15   33 
38.68361   40.7129 
15   33 
38.1372   42.86855 
15   33 
38.13724   42.86855 
15   33 
38.1372   42.86859 
15   33 
37.98826   44.11671 
15   33 
37.9883   44.11671 
15   33 
37.98826   44.11676 
15   33 
37.04861   56.30646 
15   33 
37.04864   56.30646 
15   33 
37.04861   56.30651 
15   33 
36.55664   66.97233 
15   33 
36.55667   66.97233 
15   33 
36.55664   66.9724 
15   33 
35.75515   85.56662 
15   33 
35.75519   85.56662 
15   33 
35.75515   85.56671 
15   33 
35.75701   113.6595 
15   33 
35.75705   113.6595 
15   33 
35.75701   113.6596 
15   33 
34.30165   168.138 
15   33 
34.30168   168.138 
15   33 
34.30165   168.1382 
15   33 
35.06988   148.1353 
15   33 
35.06991   148.1353 
15   33 
35.06988   148.1354 
15   33 
34.89385   164.1567 
15   33 
34.89388   164.1567 
15   33 
34.89385   164.1569 
15   33 
34.38735   227.8619 
15   33 
34.38738   227.8619 
15   33 
34.38735   227.8622 
15   33 
34.39983   254.6208 
15   33 
34.39987   254.6208 
15   33 
34.39983   254.6211 
15   33 
34.32935   329.7532 
15   33 
34.32938   329.7532 
15   33 
34.32935   329.7535 
15   33 
34.20828   418.1204 
15   33 
34.20832   418.1204 
15   33 
34.20828   418.1208 
15   33 
34.16555   543.2178 
15   33 
34.16559   543.2178 
15   33 
34.16555   543.2183 
15   33 
34.03022   716.1897 
15   33 
34.03025   716.1897 
15   33 
34.03022   716.1905 
15   33 
34.04582   939.5147 
15   33 
34.04586   939.5147 
15   33 
34.04582   939.5157 
15   33 
33.96655   1234.027 
15   33 
33.96658   1234.027 
15   33 
33.96655   1234.028 
15   33 
33.94953   1615.124 
15   33 
33.94956   1615.124 
15   33 
33.94953   1615.126 
15   33 
33.93189   2106.364 
15   33 
33.93192   2106.364 
15   33 
33.93189   2106.366 
15   33 
33.91632   2770.689 
15   33 
33.91636   2770.689 
15   33 
33.91632   2770.692 
15   33 
33.90491   3645.033 
15   33 
33.90494   3645.033 
15   33 
33.90491   3645.036 
15   33 
33.89573   4806.334 
15   33 
33.89577   4806.334 
15   33 
33.89573   4806.338 
15   33 
33.88906   6343.225 
15   33 
33.88909   6343.225 
15   33 
33.88906   6343.231 
15   33 
33.8837   8380.006 
15   33 
33.88374   8380.006 
15   33 
33.8837   8380.014 
15   33 
33.87989   11077.42 
15   33 
33.87992   11077.42 
15   33 
33.87989   11077.44 
15   33 
33.87676   14652.49 
15   33 
33.87679   14652.49 
15   33 
33.87676   14652.5 
15   33 
33.87463   19382.79 
15   33 
33.87467   19382.79 
15   33 
33.87463   19382.81 
15   33 
33.87277   25656.89 
15   33 
33.87281   25656.89 
15   33 
33.87277   25656.91 
15   33 
33.87162   33965.16 
15   33 
33.87165   33965.16 
15   33 
33.87162   33965.19 
15   33 
33.87049   44973.9 
15   33 
33.87052   44973.9 
15   33 
33.87049   44973.94 
15   33 
33.8699   59594.5 
15   33 
33.86993   59594.5 
15   33 
33.8699   59594.56 
15   33 
33.86919   78738.08 
15   33 
33.86923   78738.08 
15   33 
33.86919   78738.16 
15   33 
33.86891   104662.1 
15   33 
33.86895   104662.1 
15   33 
33.86891   104662.2 
15   33 
33.86851   133586.6 
15   33 
33.86854   133586.6 
15   33 
33.86851   133586.7 
15   33 
33.86842   162511 
15   33 
33.86845   162511 
15   33 
33.86842   162511.1 
15   33 
33.86826   191435.4 
15   33 
33.86829   191435.4 
15   33 
33.86826   191435.6 
15   33 
33.86818   220359.8 
15   33 
33.86821   220359.8 
15   33 
33.86818   220360 
15   33 
33.8681   249284.2 
15   33 
33.86813   249284.2 
15   33 
33.8681   249284.5 
Fit Mean:  33.8681  Size:  249284.2  Code:  5 
Try Mean:  28.92424  Size:  0.01 
15   33 
28.92424   0.01 
15   33 
28.92424   0.01 
15   33 
28.92427   0.01 
15   33 
28.92424   0.010001 
15   33 
28.92425   0.01604145 
15   33 
28.92428   0.01604145 
15   33 
28.92425   0.01604245 
15   33 
32.21567   7.247313 
15   33 
32.2157   7.247313 
15   33 
32.21567   7.247321 
15   33 
42.83726   22.41618 
15   33 
42.8373   22.41618 
15   33 
42.83726   22.4162 
15   33 
43.925   23.93793 
15   33 
43.92504   23.93793 
15   33 
43.925   23.93795 
15   33 
44.03487   24.12621 
15   33 
44.03491   24.12621 
15   33 
44.03487   24.12623 
15   33 
44.04473   24.18795 
15   33 
44.04478   24.18795 
15   33 
44.04473   24.18797 
15   33 
44.01685   24.61268 
15   33 
44.0169   24.61268 
15   33 
44.01685   24.61271 
15   33 
43.81122   25.46373 
15   33 
43.81126   25.46373 
15   33 
43.81122   25.46375 
15   33 
42.70841   28.77907 
15   33 
42.70846   28.77907 
15   33 
42.70841   28.7791 
15   33 
41.51582   32.10989 
15   33 
41.51586   32.10989 
15   33 
41.51582   32.10992 
15   33 
39.94074   36.74762 
15   33 
39.94078   36.74762 
15   33 
39.94074   36.74766 
15   33 
11.25571   125.5473 
15   33 
37.07224   45.62759 
15   33 
38.50649   41.1876 
15   33 
38.50653   41.1876 
15   33 
38.50649   41.18765 
15   33 
38.27369   42.28756 
15   33 
38.27373   42.28756 
15   33 
38.27369   42.2876 
15   33 
37.50909   47.66335 
15   33 
37.50913   47.66335 
15   33 
37.50909   47.6634 
15   33 
36.95096   54.8179 
15   33 
36.951   54.8179 
15   33 
36.95096   54.81796 
15   33 
36.65669   65.7152 
15   33 
36.65672   65.7152 
15   33 
36.65669   65.71527 
15   33 
35.73653   83.45085 
15   33 
35.73657   83.45085 
15   33 
35.73653   83.45094 
15   33 
35.54453   100.9838 
15   33 
35.54456   100.9838 
15   33 
35.54453   100.9839 
15   33 
35.04142   127.9588 
15   33 
35.04145   127.9588 
15   33 
35.04142   127.9589 
15   33 
34.99734   163.5183 
15   33 
34.99737   163.5183 
15   33 
34.99734   163.5184 
15   33 
34.36473   222.7927 
15   33 
34.36477   222.7927 
15   33 
34.36473   222.7929 
15   33 
34.47072   242.7147 
15   33 
34.47076   242.7147 
15   33 
34.47072   242.715 
15   33 
34.3738   313.7693 
15   33 
34.37383   313.7693 
15   33 
34.3738   313.7696 
15   33 
34.21761   403.2361 
15   33 
34.21764   403.2361 
15   33 
34.21761   403.2365 
15   33 
34.15057   522.647 
15   33 
34.15061   522.647 
15   33 
34.15057   522.6475 
15   33 
34.07789   674.0064 
15   33 
34.07793   674.0064 
15   33 
34.07789   674.0071 
15   33 
34.04239   878.2425 
15   33 
34.04243   878.2425 
15   33 
34.04239   878.2434 
15   33 
33.97829   1152.495 
15   33 
33.97832   1152.495 
15   33 
33.97829   1152.497 
15   33 
33.98592   1517.942 
15   33 
33.98595   1517.942 
15   33 
33.98592   1517.943 
15   33 
33.90933   2041.115 
15   33 
33.90937   2041.115 
15   33 
33.90933   2041.117 
15   33 
33.9172   2646.278 
15   33 
33.91723   2646.278 
15   33 
33.9172   2646.281 
15   33 
33.90593   3471.091 
15   33 
33.90597   3471.091 
15   33 
33.90593   3471.094 
15   33 
33.89642   4577.283 
15   33 
33.89645   4577.283 
15   33 
33.89642   4577.288 
15   33 
33.88951   6035.922 
15   33 
33.88954   6035.922 
15   33 
33.88951   6035.928 
15   33 
33.88415   7971.186 
15   33 
33.88418   7971.186 
15   33 
33.88415   7971.194 
15   33 
33.88013   10532.69 
15   33 
33.88016   10532.69 
15   33 
33.88013   10532.7 
15   33 
33.87705   13928.29 
15   33 
33.87708   13928.29 
15   33 
33.87705   13928.31 
15   33 
33.87473   18424.16 
15   33 
33.87477   18424.16 
15   33 
33.87473   18424.18 
15   33 
33.87298   24375.78 
15   33 
33.87301   24375.78 
15   33 
33.87298   24375.81 
15   33 
33.87164   32273.16 
15   33 
33.87168   32273.16 
15   33 
33.87164   32273.19 
15   33 
33.87065   42699.16 
15   33 
33.87068   42699.16 
15   33 
33.87065   42699.2 
15   33 
33.86987   56631.66 
15   33 
33.8699   56631.66 
15   33 
33.86987   56631.72 
15   33 
33.86931   74892.76 
15   33 
33.86935   74892.76 
15   33 
33.86931   74892.83 
15   33 
33.86887   99277.66 
15   33 
33.8689   99277.66 
15   33 
33.86887   99277.76 
15   33 
33.86858   128201.9 
15   33 
33.86861   128201.9 
15   33 
33.86858   128202 
15   33 
33.8684   157126.1 
15   33 
33.86843   157126.1 
15   33 
33.8684   157126.3 
15   33 
33.86827   186050.4 
15   33 
33.86831   186050.4 
15   33 
33.86827   186050.6 
15   33 
33.86818   214974.6 
15   33 
33.86821   214974.6 
15   33 
33.86818   214974.9 
15   33 
33.86811   243898.9 
15   33 
33.86814   243898.9 
15   33 
33.86811   243899.1 
Fit Mean:  33.86811  Size:  243898.9  Code:  5 
Try Mean:  28.92424  Size:  0.001 
15   33 
28.92424   0.001 
15   33 
28.92424   0.001 
15   33 
28.92427   0.001 
15   33 
28.92424   0.001001 
15   33 
28.92424   0.007052044 
15   33 
28.92427   0.007052044 
15   33 
28.92424   0.007053044 
15   33 
32.18855   7.211629 
15   33 
32.18858   7.211629 
15   33 
32.18855   7.211637 
15   33 
42.74287   22.31689 
15   33 
42.74291   22.31689 
15   33 
42.74287   22.31691 
15   33 
43.90807   23.94712 
15   33 
43.90811   23.94712 
15   33 
43.90807   23.94715 
15   33 
44.02389   24.14368 
15   33 
44.02394   24.14368 
15   33 
44.02389   24.1437 
15   33 
44.03357   24.20402 
15   33 
44.03361   24.20402 
15   33 
44.03357   24.20405 
15   33 
44.00555   24.63228 
15   33 
44.00559   24.63228 
15   33 
44.00555   24.6323 
15   33 
43.79895   25.48739 
15   33 
43.799   25.48739 
15   33 
43.79895   25.48742 
15   33 
42.68625   28.83566 
15   33 
42.68629   28.83566 
15   33 
42.68625   28.83569 
15   33 
41.47805   32.2177 
15   33 
41.47809   32.2177 
15   33 
41.47805   32.21774 
15   33 
39.88335   36.92522 
15   33 
39.88339   36.92522 
15   33 
39.88335   36.92526 
15   33 
18.57569   103.3499 
15   33 
37.75259   43.56769 
15   33 
37.75263   43.56769 
15   33 
37.75259   43.56773 
15   33 
38.68006   41.01206 
15   33 
38.6801   41.01206 
15   33 
38.68006   41.0121 
15   33 
38.45529   42.08482 
15   33 
38.45533   42.08482 
15   33 
38.45529   42.08486 
15   33 
37.23637   49.32023 
15   33 
37.2364   49.32023 
15   33 
37.23637   49.32028 
15   33 
37.30824   50.65154 
15   33 
37.30827   50.65154 
15   33 
37.30824   50.65159 
15   33 
36.69451   64.08319 
15   33 
36.69454   64.08319 
15   33 
36.69451   64.08325 
15   33 
35.97584   78.35221 
15   33 
35.97588   78.35221 
15   33 
35.97584   78.35229 
15   33 
35.63751   100.5332 
15   33 
35.63755   100.5332 
15   33 
35.63751   100.5333 
15   33 
34.85189   130.6031 
15   33 
34.85193   130.6031 
15   33 
34.85189   130.6032 
15   33 
34.95654   152.6629 
15   33 
34.95657   152.6629 
15   33 
34.95654   152.663 
15   33 
34.64925   195.4931 
15   33 
34.64928   195.4931 
15   33 
34.64925   195.4933 
15   33 
34.47267   250.0503 
15   33 
34.4727   250.0503 
15   33 
34.47267   250.0506 
15   33 
34.36266   317.209 
15   33 
34.3627   317.209 
15   33 
34.36266   317.2093 
15   33 
34.21113   411.9137 
15   33 
34.21116   411.9137 
15   33 
34.21113   411.9141 
15   33 
34.21528   537.1369 
15   33 
34.21531   537.1369 
15   33 
34.21528   537.1375 
15   33 
33.95745   750.2767 
15   33 
33.95748   750.2767 
15   33 
33.95745   750.2775 
15   33 
34.00405   870.1912 
15   33 
34.00408   870.1912 
15   33 
34.00405   870.192 
15   33 
33.99845   1140.439 
15   33 
33.99849   1140.439 
15   33 
33.99845   1140.44 
15   33 
33.9598   1481.78 
15   33 
33.95983   1481.78 
15   33 
33.9598   1481.781 
15   33 
33.9361   1952.119 
15   33 
33.93613   1952.119 
15   33 
33.9361   1952.121 
15   33 
33.92048   2556.71 
15   33 
33.92051   2556.71 
15   33 
33.92048   2556.713 
15   33 
33.90753   3365.852 
15   33 
33.90756   3365.852 
15   33 
33.90753   3365.855 
15   33 
33.89807   4433.723 
15   33 
33.8981   4433.723 
15   33 
33.89807   4433.727 
15   33 
33.89058   5850.072 
15   33 
33.89061   5850.072 
15   33 
33.89058   5850.078 
15   33 
33.88507   7725.55 
15   33 
33.88511   7725.55 
15   33 
33.88507   7725.557 
15   33 
33.88074   10210.23 
15   33 
33.88078   10210.23 
15   33 
33.88074   10210.24 
15   33 
33.87758   13501.71 
15   33 
33.87761   13501.71 
15   33 
33.87758   13501.72 
15   33 
33.87508   17860.43 
15   33 
33.87512   17860.43 
15   33 
33.87508   17860.44 
15   33 
33.87328   23639.22 
15   33 
33.87331   23639.22 
15   33 
33.87328   23639.24 
15   33 
33.87184   31289.96 
15   33 
33.87187   31289.96 
15   33 
33.87184   31289.99 
15   33 
33.87082   41430.19 
15   33 
33.87085   41430.19 
15   33 
33.87082   41430.23 
15   33 
33.86999   54851.12 
15   33 
33.87002   54851.12 
15   33 
33.86999   54851.17 
15   33 
33.86941   72670.92 
15   33 
33.86945   72670.92 
15   33 
33.86941   72670.99 
15   33 
33.86892   96472.76 
15   33 
33.86895   96472.76 
15   33 
33.86892   96472.86 
15   33 
33.86863   125397 
15   33 
33.86866   125397 
15   33 
33.86863   125397.1 
15   33 
33.86843   154321.2 
15   33 
33.86846   154321.2 
15   33 
33.86843   154321.4 
15   33 
33.86831   183245.5 
15   33 
33.86834   183245.5 
15   33 
33.86831   183245.7 
15   33 
33.86819   212169.7 
15   33 
33.86823   212169.7 
15   33 
33.86819   212169.9 
15   33 
33.86813   241094 
15   33 
33.86817   241094 
15   33 
33.86813   241094.2 
Fit Mean:  33.86813  Size:  241094  Code:  5 
Try Mean:  33  Size:  10000 
15   33 
33   10000 
15   33 
33   10000 
15   33 
33.00003   10000 
15   33 
33   10000.01 
15   33 
33.00129   10000 
15   33 
33.00132   10000 
15   33 
33.00129   10000.01 
15   33 
33.85157   10000 
15   33 
33.85161   10000 
15   33 
33.85157   10000.01 
15   33 
33.88325   10000 
15   33 
33.88328   10000 
15   33 
33.88325   10000.01 
15   33 
33.88457   10000 
15   33 
33.8846   10000 
15   33 
33.88457   10000.01 
15   33 
33.88457   10000 
15   33 
33.8846   10000 
15   33 
33.88457   10000.01 
Fit Mean:  33.88457  Size:  10000  Code:  2 
Try Mean:  33  Size:  1000 
15   33 
33   1000 
15   33 
33   1000 
15   33 
33.00003   1000 
15   33 
33   1000.001 
15   33 
33.00144   1000 
15   33 
33.00147   1000 
15   33 
33.00144   1000.001 
15   33 
33.99303   1000 
15   33 
33.99306   1000 
15   33 
33.99303   1000.001 
15   33 
34.03692   1000 
15   33 
34.03695   1000 
15   33 
34.03692   1000.001 
15   33 
34.03913   1000 
15   33 
34.03916   1000 
15   33 
34.03913   1000.001 
15   33 
34.03914   1000 
15   33 
34.03917   1000 
15   33 
34.03914   1000.001 
Fit Mean:  34.03914  Size:  1000  Code:  2 
Try Mean:  33  Size:  100 
15   33 
33   100 
15   33 
33   100 
15   33 
33.00003   100 
15   33 
33   100.0001 
15   33 
33.00239   100 
15   33 
33.00242   100 
15   33 
33.00239   100.0001 
15   33 
35.37884   100.0574 
15   33 
35.37887   100.0574 
15   33 
35.37884   100.0575 
15   33 
35.6653   100.0728 
15   33 
35.66533   100.0728 
15   33 
35.6653   100.0729 
15   33 
35.71061   100.082 
15   33 
35.71065   100.082 
15   33 
35.71061   100.0821 
15   33 
35.71267   100.0893 
15   33 
35.7127   100.0893 
15   33 
35.71267   100.0894 
15   33 
35.73667   100.2747 
15   33 
35.7367   100.2747 
15   33 
35.73667   100.2748 
15   33 
35.7584   100.6655 
15   33 
35.75844   100.6655 
15   33 
35.7584   100.6656 
15   33 
35.78802   101.9634 
15   33 
35.78806   101.9634 
15   33 
35.78802   101.9635 
15   33 
35.80271   105.2679 
15   33 
35.80275   105.2679 
15   33 
35.80271   105.268 
15   33 
35.75007   114.5616 
15   33 
35.75011   114.5616 
15   33 
35.75007   114.5617 
15   33 
35.41165   146.9998 
15   33 
35.41168   146.9998 
15   33 
35.41165   147 
15   33 
31.29521   514.3351 
15   33 
34.96552   186.8105 
15   33 
34.96556   186.8105 
15   33 
34.96552   186.8107 
15   33 
33.44865   330.986 
15   33 
34.54235   227.032 
15   33 
34.54238   227.032 
15   33 
34.54235   227.0323 
15   33 
34.37879   247.6834 
15   33 
34.37882   247.6834 
15   33 
34.37879   247.6836 
15   33 
34.33767   260.7716 
15   33 
34.3377   260.7716 
15   33 
34.33767   260.7718 
15   33 
34.24476   341.0842 
15   33 
34.24479   341.0842 
15   33 
34.24476   341.0845 
15   33 
34.22067   418.6968 
15   33 
34.2207   418.6968 
15   33 
34.22067   418.6972 
15   33 
34.13705   542.0133 
15   33 
34.13708   542.0133 
15   33 
34.13705   542.0138 
15   33 
34.06644   702.7124 
15   33 
34.06648   702.7124 
15   33 
34.06644   702.7131 
15   33 
34.02511   912.8221 
15   33 
34.02514   912.8221 
15   33 
34.02511   912.823 
15   33 
33.98456   1190.939 
15   33 
33.9846   1190.939 
15   33 
33.98456   1190.94 
15   33 
33.96159   1559.06 
15   33 
33.96162   1559.06 
15   33 
33.96159   1559.062 
15   33 
33.93278   2049.019 
15   33 
33.93281   2049.019 
15   33 
33.93278   2049.021 
15   33 
33.9265   2695.881 
15   33 
33.92653   2695.881 
15   33 
33.9265   2695.883 
15   33 
33.89736   3572.182 
15   33 
33.89739   3572.182 
15   33 
33.89736   3572.186 
15   33 
33.90801   4738.713 
15   33 
33.90804   4738.713 
15   33 
33.90801   4738.717 
15   33 
33.88075   6323.234 
15   33 
33.88079   6323.234 
15   33 
33.88075   6323.24 
15   33 
33.88425   8337.516 
15   33 
33.88428   8337.516 
15   33 
33.88425   8337.524 
15   33 
33.87914   11003.97 
15   33 
33.87918   11003.97 
15   33 
33.87914   11003.98 
15   33 
33.87655   14560.65 
15   33 
33.87658   14560.65 
15   33 
33.87655   14560.67 
15   33 
33.87429   19255.9 
15   33 
33.87433   19255.9 
15   33 
33.87429   19255.92 
15   33 
33.87266   25475.83 
15   33 
33.8727   25475.83 
15   33 
33.87266   25475.86 
15   33 
33.8714   33739.5 
15   33 
33.87143   33739.5 
15   33 
33.8714   33739.54 
15   33 
33.87046   44637.05 
15   33 
33.8705   44637.05 
15   33 
33.87046   44637.09 
15   33 
33.86975   59095.21 
15   33 
33.86978   59095.21 
15   33 
33.86975   59095.27 
15   33 
33.8692   78298.55 
15   33 
33.86924   78298.55 
15   33 
33.8692   78298.63 
15   33 
33.8688   103655.9 
15   33 
33.86883   103655.9 
15   33 
33.8688   103656 
15   33 
33.86848   137832.6 
15   33 
33.86851   137832.6 
15   33 
33.86848   137832.7 
15   33 
33.86828   180558.7 
15   33 
33.86831   180558.7 
15   33 
33.86828   180558.9 
15   33 
33.86804   244841.1 
15   33 
33.86808   244841.1 
15   33 
33.86804   244841.3 
15   33 
33.86793   325462.6 
15   33 
33.86797   325462.6 
15   33 
33.86793   325462.9 
15   33 
33.86785   427791.3 
15   33 
33.86788   427791.3 
15   33 
33.86785   427791.8 
15   33 
33.86781   533095.7 
15   33 
33.86784   533095.7 
15   33 
33.86781   533096.2 
15   33 
33.86774   638400 
15   33 
33.86777   638400 
15   33 
33.86774   638400.6 
15   33 
33.86772   743704.3 
15   33 
33.86775   743704.3 
15   33 
33.86772   743705 
15   33 
33.86769   849008.6 
15   33 
33.86773   849008.6 
15   33 
33.86769   849009.5 
15   33 
33.86771   953372.7 
15   33 
33.86775   953372.7 
15   33 
33.86771   953373.7 
Fit Mean:  33.86771  Size:  953372.7  Code:  1 
> 
> cat("Final Fit Mean: ", nb_fit_mu, " Size: ", nb_fit_size, " Code: ", nb_fit$code, " Try Size: ", try_size, "\n")
Final Fit Mean:  33.86771  Size:  953372.7  Code:  1  Try Size:  100 
> 
> ## Fit failed = reset parameters so graphing and output code can recognize this
> if ((nb_fit_mu < 0) || (nb_fit_size < 0) || (nb_fit$code != 1))
+ {
+   nb_fit_mu = 0
+   nb_fit_size = 0
+ }
> 
> 
> ## things can go wrong with fitting and we can still end up with invalid values
> 
> fit_nb = c()
> included_fract = 0
> if (nb_fit_mu > 0)
+ {
+   end_fract = pnbinom(end_i_for_fits, mu = nb_fit_mu, size=nb_fit_size)
+   start_fract = pnbinom(start_i_for_fits, mu = nb_fit_mu, size=nb_fit_size)
+   included_fract = end_fract-start_fract;
+ 
+   if (included_fract >= 0.01) {
+ 
+     ## Adjust so that we are back in full coords before making fit!!
+     if (num_per_bin > 1) 
+     {
+       nb_fit_mu = nb_fit_mu * num_per_bin
+     }
+     fit_nb = dnbinom(0:max(X$coverage), mu = nb_fit_mu, size=nb_fit_size)*inner_total/included_fract;
+   }
+ }
> 
> ## If an insufficient amount of fit was included, then invalidate it
> if (included_fract < 0.01)
+ {
+   nb_fit_mu = 0
+   nb_fit_size = 0
+ }
> 
> f_p <- function(par) {
+ 
+   lambda = par[1];
+ 
+   if (lambda <= 0)
+   {
+     return(0);
+   }
+   
+ 	total <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{	
+     #cat(i, " ", lambda, "\n");
+ 		dist[i] <- dpois(i, lambda=lambda);
+ 		total <- total + dist[i] 
+ 	}
+ 	#print (total)
+ 
+  	l <- 0;
+ 	for (i in start_i_for_fits:end_i_for_fits)
+ 	{
+ 		l <- l + ((X.for.fits[i]/inner_total)-(dist[i]/total))^2;
+ 	}
+ 	return(l);
+ }
> 
> 
> ## Fit Poisson 
> ## - allow fit to fail and set all params to zero/empty if that is the case
> 
> p_fit = NULL
> try(suppressWarnings(p_fit<-nlm(f_p, c(m), print.level=this.print.level)))
> 
> fit_p = c()
> if (!is.null(p_fit) && (p_fit$estimate[1] > 0))
+ {
+   #print (nb_fit$estimate[1])
+   p_fit_lambda = p_fit$estimate[1];
+   #print(0:max(X$coverage))
+ 
+   end_fract = ppois(end_i_for_fits, lambda = p_fit_lambda)
+   start_fract = ppois(start_i_for_fits, lambda = p_fit_lambda)
+   included_fract = end_fract-start_fract;
+ 
+   ## Adjust so that we are back in full coords before making fit!!
+   if (num_per_bin > 1) 
+   {
+     p_fit_lambda = p_fit_lambda * num_per_bin
+   }
+   fit_p<-dpois(0:max(X$coverage), lambda = p_fit_lambda)*inner_total/included_fract;
+ }
> 
> 
> ## Graphing
> ##
> ## don't graph very high values with very little coverage
> i<-max_i
> while (i <= length(X$n) && X$n[i]>0.01*max_n)
+ {		
+ 	i <- i+1;
+ }
> graph_end_i <-i
> 
> ## Ths leaves enough room to the right of the peak for the legend
> graph_end_i = max(floor(2.2 * max_i), graph_end_i);
> 
> ## graphics settings
> my_pch = 21
> my_col = "black";
> my_col_censored = "red";
> 
> if (pdf_output == 0) {
+   
+   ## bitmap() requires ghostscript to be installed.
+   ## taa=4, gaa=2 options NOT compatible with earlier R versions!
+   ## units = "px" NOT compatible with even earlier R versions!
+   
+   if(!capabilities(what = "png"))
+   {
+     ## fallback to ghostscript
+     bitmap(plot_file, height=6, width=7, type = "png16m", res = 72, pointsize=18)
+   } else {
+     ## use X11 function, which gives better resolution
+     png(plot_file, height=6, width=7, units ="in", res = 72, pointsize=18)
+     par(family="sans")
+   }
+ } else {
+   pdf(plot_file, height=6, width=7)
+   par(family="sans")
+ }
> 
> par(mar=c(5.5,7.5,3,1.5));
> 
> max_y = 0
> if (plot_poisson) {
+ 	max_y = max(X$n, fit_p, fit_nb)
+ } else {
+ 	max_y = max(X$n, fit_nb)
+ }
> 
> plot(0:10, 0:10, type="n", lty="solid", ylim=c(0, max_y)*1.05, xlim=c(0, graph_end_i), lwd=1, xaxs="i", yaxs="i", axes=F, las=1, main="Coverage Distribution at Unique-Only Positions", xlab="Coverage depth (reads)", ylab="", cex.lab=1.2, cex.axis=1.2)
> 
> mtext(side = 2, text = "Number of reference positions", line = 5.5, cex=1.2)
> 
> sciNotation <- function(x, digits = 1) {
+     if (length(x) > 1) {
+         return(append(sciNotation(x[1]), sciNotation(x[-1])))     
+ 	} 
+     if (!x) return(0) 
+ 
+ 	exponent <- floor(log10(x)) 
+     base <- round(x / 10^exponent, digits)     
+ 	as.expression(substitute(base %*% 10^exponent, list(base = base, exponent = exponent))) 
+ }
> 
> #axis(2, cex.lab=1.2, las=1, cex.axis=1.2, labels=T, at=(0:6)*50000)
> axis(2, cex.lab=1.2, las=1, cex.axis=1.2, at = axTicks(2), labels = sciNotation(axTicks(2), 1))
> axis(1, cex.lab=1.2, cex.axis=1.2, labels=T)
> box()
> 
> #graph the coverage as points
> fit_data <- subset(X, (coverage>=start_i) & (coverage<=end_i) );
> points(fit_data$coverage, fit_data$n, pch=my_pch, col=my_col, bg="white", cex=1.2)
> 
> #graph the censored coverage as red points
> cat(start_i, " ", end_i, "\n", sep="")
15 33
> 
> censored_data <- subset(X, (coverage<start_i) | (coverage>end_i) );
> points(censored_data$coverage, censored_data$n, pch=my_pch, col=my_col_censored, bg="white", cex=1.2)
> 
> #graph the poisson fit IF REQUESTED
> if (plot_poisson) {
+ 	lines(0:max(X$coverage), fit_p, lwd=3, lty="22", col="black");
+ }
> 
> #graph the negative binomial fit
> if (nb_fit_mu > 0) {
+   lines(0:max(X$coverage), fit_nb, lwd=3, col="black");
+ }
> 
> if (plot_poisson) {
+ 	legend("topright", c("Coverage distribution", "Censored data", "Negative binomial", "Poisson"), lty=c("blank","blank","solid","22"), lwd=c(1,1,2,2), pch=c(my_pch, my_pch, -1, -1), col=c("black", "red", "black", "black"), bty="n")
+ } else {
+ 	legend("topright", c("Coverage distribution", "Censored data", "Negative binomial"), lty=c("blank","blank","solid"), lwd=c(1,1,2), pch=c(my_pch, my_pch, -1), col=c("black", "red", "black"), bty="n")
+ }
> 
> dev.off()
null device 
          1 
> 
> ## Fit the marginal value that we use for propagating deletions
> 
> if (nb_fit_mu > 0) {
+   cat(nb_fit_size, " ", nb_fit_mu, "\n")
+   deletion_propagation_coverage = suppressWarnings(qnbinom(deletion_propagation_pr_cutoff, size = nb_fit_size, mu = nb_fit_mu))
+ } else {
+   cat("Fallback to calculating off an estimate of just variance = mu + mu^2/size\n")
+   size_estimate = (1/(v-m))*(m*m)
+   cat("Mu estimate=", m," Size estimate =", size_estimate, "\n")
+   deletion_propagation_coverage = suppressWarnings(qnbinom(deletion_propagation_pr_cutoff, size = size_estimate, mu = m))
+   if (is.na(deletion_propagation_coverage) || is.nan(deletion_propagation_coverage) || (deletion_propagation_coverage < 1)) {
+     cat("Double fallback to calculating as just 10% of the mean\n")
+     deletion_propagation_coverage = m * 0.1
+   }
+ }
953372.7   33.86771 
> 
> #Don't allow one read to indicate non-deleted regions
> if (deletion_propagation_coverage < 1) {
+     deletion_propagation_coverage = 1
+ }
> 
> #This works fine with the negative values
> #If we have both low fit coverage and low straight average coverage then we're deleted...
> if ( (nb_fit_mu <= 3) && (m <= 3) ) {
+   deletion_propagation_coverage = -1
+ }
> 
> #print out statistics
> 
> print(nb_fit_size);
[1] 953372.7
> print(nb_fit_mu);
[1] 33.86771
> 
> print(m)
[1] 28.92424
> print(v)
[1] 11.7634
> print(D)
[1] 0.406697
> 
> print(deletion_propagation_coverage)
[1] 19
> 
> warnings()
> 
